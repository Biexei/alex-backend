2020-10-19 11:02:36.248  INFO 4872 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 4872 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:02:36.254  INFO 4872 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:02:37.150  INFO 4872 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:02:37.153  INFO 4872 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:02:37.202  INFO 4872 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2020-10-19 11:02:37.667  INFO 4872 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$968bc711] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:02:38.369  INFO 4872 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:02:38.620  INFO 4872 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:02:39.677  INFO 4872 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:02:40.122  INFO 4872 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:02:41.135  INFO 4872 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 5.297 seconds (JVM running for 6.813)
2020-10-19 11:02:41.353  INFO 4872 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:02:41.631  INFO 4872 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:02:41.635  INFO 4872 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:03:07.829  INFO 8712 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 8712 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:03:07.830  INFO 8712 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:03:08.435  INFO 8712 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:03:08.437  INFO 8712 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:03:08.488  INFO 8712 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36ms. Found 0 Redis repository interfaces.
2020-10-19 11:03:08.863  INFO 8712 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$de8f0fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:03:09.368  INFO 8712 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:03:09.521  INFO 8712 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:03:10.343  INFO 8712 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:03:10.779  INFO 8712 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:03:11.350  INFO 8712 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.915 seconds (JVM running for 4.661)
2020-10-19 11:03:11.512  INFO 8712 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:03:11.761  INFO 8712 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:03:11.765  INFO 8712 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:05:18.851  INFO 8728 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 8728 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:05:18.852  INFO 8728 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:05:19.469  INFO 8728 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:05:19.471  INFO 8728 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:05:19.520  INFO 8728 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38ms. Found 0 Redis repository interfaces.
2020-10-19 11:05:19.853  INFO 8728 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$d595d7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:05:20.365  INFO 8728 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:05:20.515  INFO 8728 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:05:21.323  INFO 8728 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:05:21.792  INFO 8728 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:05:22.354  INFO 8728 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.937 seconds (JVM running for 4.617)
2020-10-19 11:05:22.513  INFO 8728 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:05:22.766  INFO 8728 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:05:22.770  INFO 8728 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:05:48.958  INFO 1964 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 1964 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:05:48.959  INFO 1964 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:05:49.562  INFO 1964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:05:49.564  INFO 1964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:05:49.609  INFO 1964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2020-10-19 11:05:49.974  INFO 1964 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$7143b065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:05:50.476  INFO 1964 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:05:50.625  INFO 1964 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:05:51.414  INFO 1964 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:05:51.834  INFO 1964 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:05:52.406  INFO 1964 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.844 seconds (JVM running for 4.545)
2020-10-19 11:05:52.576  INFO 1964 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:05:52.842  INFO 1964 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:05:52.846  INFO 1964 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:06:06.062  INFO 13208 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 13208 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:06:06.064  INFO 13208 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:06:06.657  INFO 13208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:06:06.659  INFO 13208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:06:06.704  INFO 13208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33ms. Found 0 Redis repository interfaces.
2020-10-19 11:06:07.068  INFO 13208 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$7143b065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:06:07.568  INFO 13208 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:06:07.718  INFO 13208 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:06:08.532  INFO 13208 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:06:08.931  INFO 13208 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:06:09.475  INFO 13208 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.751 seconds (JVM running for 4.504)
2020-10-19 11:06:09.630  INFO 13208 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:06:09.654 ERROR 13208 --- [Druid-ConnectionPool-Create-112026691] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:09.665 ERROR 13208 --- [Druid-ConnectionPool-Create-112026691] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:09.676 ERROR 13208 --- [Druid-ConnectionPool-Create-112026691] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:09.687 ERROR 13208 --- [Druid-ConnectionPool-Create-112026691] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:09.699  INFO 13208 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:06:09.804  INFO 13208 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:06:20.267  INFO 2568 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 2568 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:06:20.269  INFO 2568 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:06:20.891  INFO 2568 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:06:20.894  INFO 2568 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:06:20.939  INFO 2568 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-10-19 11:06:21.304  INFO 2568 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$de8f0fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:06:21.808  INFO 2568 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:06:21.968  INFO 2568 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:06:22.787  INFO 2568 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:06:23.197  INFO 2568 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:06:23.746  INFO 2568 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.83 seconds (JVM running for 4.512)
2020-10-19 11:06:23.962  INFO 2568 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:06:23.982 ERROR 2568 --- [Druid-ConnectionPool-Create-850083982] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:23.993 ERROR 2568 --- [Druid-ConnectionPool-Create-850083982] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:24.003 ERROR 2568 --- [Druid-ConnectionPool-Create-850083982] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:24.013 ERROR 2568 --- [Druid-ConnectionPool-Create-850083982] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:06:24.025  INFO 2568 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:06:24.123  INFO 2568 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:06:45.223  INFO 7476 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 7476 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:06:45.224  INFO 7476 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:06:45.887  INFO 7476 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:06:45.890  INFO 7476 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:06:45.936  INFO 7476 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-10-19 11:06:46.300  INFO 7476 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$f7c15566] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:06:46.804  INFO 7476 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:06:46.965  INFO 7476 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:06:47.749  INFO 7476 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:06:48.160  INFO 7476 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:06:48.712  INFO 7476 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 4.042 seconds (JVM running for 4.821)
2020-10-19 11:06:48.871  INFO 7476 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:06:49.110  INFO 7476 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:06:49.114  INFO 7476 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:09:03.136  INFO 2228 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 2228 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:09:03.137  INFO 2228 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:09:03.761  INFO 2228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:09:03.764  INFO 2228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:09:03.809  INFO 2228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-10-19 11:09:04.173  INFO 2228 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$a1fa84f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:09:04.690  INFO 2228 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:09:04.842  INFO 2228 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:09:05.642  INFO 2228 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:09:06.052  INFO 2228 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:09:06.615  INFO 2228 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.879 seconds (JVM running for 4.601)
2020-10-19 11:09:06.782  INFO 2228 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:09:06.999  INFO 2228 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-10-19 11:09:07.019 ERROR 2228 --- [Druid-ConnectionPool-Create-385349023] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:09:07.030 ERROR 2228 --- [Druid-ConnectionPool-Create-385349023] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:09:07.040 ERROR 2228 --- [Druid-ConnectionPool-Create-385349023] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:09:07.050 ERROR 2228 --- [Druid-ConnectionPool-Create-385349023] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root1'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:09:07.063  INFO 2228 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:09:07.066  INFO 2228 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:09:47.113  INFO 4460 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 4460 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:09:47.116  INFO 4460 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:09:47.651  INFO 4460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:09:47.652  INFO 4460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:09:47.687  INFO 4460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-10-19 11:09:47.876  INFO 4460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$41ce7252] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:09:48.100  INFO 4460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:09:48.111  INFO 4460 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:09:48.111  INFO 4460 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:09:48.187  INFO 4460 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:09:48.187  INFO 4460 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1031 ms
2020-10-19 11:09:48.446  INFO 4460 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:09:48.529  INFO 4460 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:09:48.927  INFO 4460 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:09:49.138  INFO 4460 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:09:49.504  INFO 4460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:09:49.507  INFO 4460 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.686 seconds (JVM running for 3.263)
2020-10-19 11:10:26.272  INFO 4460 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:10:26.272  INFO 4460 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:10:26.277  INFO 4460 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-19 11:10:26.441  INFO 4460 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:10:26.442  INFO 4460 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:12:54.071  INFO 4460 --- [http-nio-7777-exec-10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:12:54.833  INFO 4460 --- [http-nio-7777-exec-2] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-10-19 11:12:55.031  INFO 4460 --- [http-nio-7777-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2020-10-19 11:12:55.239  INFO 4460 --- [http-nio-7777-exec-4] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} inited
2020-10-19 11:12:55.423  INFO 4460 --- [http-nio-7777-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-6} inited
2020-10-19 11:12:55.648  INFO 4460 --- [http-nio-7777-exec-6] com.alibaba.druid.pool.DruidDataSource   : {dataSource-7} inited
2020-10-19 11:12:55.840  INFO 4460 --- [http-nio-7777-exec-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-8} inited
2020-10-19 11:15:45.964  INFO 4216 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 4216 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:15:45.970  INFO 4216 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:15:47.190  INFO 4216 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:15:47.193  INFO 4216 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:15:47.257  INFO 4216 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 47ms. Found 0 Redis repository interfaces.
2020-10-19 11:15:47.289  INFO 8036 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 8036 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:15:47.291  INFO 8036 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:15:47.853  INFO 4216 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$d595d7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:15:48.443  INFO 8036 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:15:48.447  INFO 8036 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:15:48.522  INFO 8036 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54ms. Found 0 Redis repository interfaces.
2020-10-19 11:15:48.590  INFO 4216 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:15:48.805  INFO 4216 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:15:49.394  INFO 8036 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$6f50c500] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:15:49.960  INFO 4216 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:15:50.475  INFO 8036 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:15:50.566  INFO 4216 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:15:50.883  INFO 8036 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:15:51.479  INFO 4216 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 5.95 seconds (JVM running for 6.966)
2020-10-19 11:15:51.768  INFO 4216 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:15:52.142  INFO 4216 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:15:52.152  INFO 4216 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:15:52.587  INFO 8036 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:15:53.155  INFO 8036 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:15:54.185  INFO 8036 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 8.009 seconds (JVM running for 10.822)
2020-10-19 11:15:57.935  INFO 8036 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:15:57.980  INFO 8036 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:15:57.996  INFO 8036 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:16:19.021  INFO 10764 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 10764 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:16:19.022  INFO 10764 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:16:19.666  INFO 10764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:16:19.668  INFO 10764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:16:19.712  INFO 10764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32ms. Found 0 Redis repository interfaces.
2020-10-19 11:16:20.072  INFO 10764 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$6b4278] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:16:20.595  INFO 10764 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:16:20.751  INFO 10764 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:16:21.562  INFO 10764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:16:21.986  INFO 10764 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:16:22.565  INFO 10764 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.938 seconds (JVM running for 4.622)
2020-10-19 11:16:22.738  INFO 10764 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:16:22.958  INFO 10764 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-10-19 11:16:22.980  INFO 10764 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:16:22.984  INFO 10764 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:16:33.615  INFO 6836 --- [main] org.alex.platform.JDBCTest               : Starting JDBCTest on DESKTOP-F0JRBO4 with PID 6836 (started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:16:33.616  INFO 6836 --- [main] org.alex.platform.JDBCTest               : No active profile set, falling back to default profiles: default
2020-10-19 11:16:34.272  INFO 6836 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:16:34.274  INFO 6836 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:16:34.320  INFO 6836 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2020-10-19 11:16:34.681  INFO 6836 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c6ef621f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:16:35.175  INFO 6836 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:16:35.325  INFO 6836 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:16:36.124  INFO 6836 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:16:36.532  INFO 6836 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:16:37.087  INFO 6836 --- [main] org.alex.platform.JDBCTest               : Started JDBCTest in 3.847 seconds (JVM running for 4.529)
2020-10-19 11:16:37.248  INFO 6836 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:16:37.464  INFO 6836 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-10-19 11:16:37.494 ERROR 6836 --- [Druid-ConnectionPool-Create-57986233] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:16:37.503 ERROR 6836 --- [Druid-ConnectionPool-Create-57986233] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:16:37.512 ERROR 6836 --- [Druid-ConnectionPool-Create-57986233] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:16:37.520 ERROR 6836 --- [Druid-ConnectionPool-Create-57986233] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/platform?useUnicode=true&characterEncoding=utf-8&tinyInt1isBit=false&transformedBitIsBoolean=false, errorCode 1045, state 28000

java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468) ~[druid-1.1.10.jar:1.1.10]

2020-10-19 11:16:37.522  INFO 6836 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2020-10-19 11:16:37.523 ERROR 6836 --- [main] org.alex.platform.util.JdbcUtil          : JDBC TEMPLATE 连接失败， errorMsg=org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.DataSourceNotAvailableException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:462)
	at org.springframework.jdbc.core.JdbcTemplate.queryForList(JdbcTemplate.java:490)
	at org.alex.platform.util.JdbcUtil.checkJdbcConnection(JdbcUtil.java:58)
	at org.alex.platform.JDBCTest.testConn(JDBCTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
Caused by: com.alibaba.druid.pool.DataSourceNotAvailableException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.alibaba.druid.pool.DruidDataSource.takeLast(DruidDataSource.java:1891)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1460)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1255)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5007)
	at com.alibaba.druid.filter.FilterAdapter.dataSource_getConnection(FilterAdapter.java:2745)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5003)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1233)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1225)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:90)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 36 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2199)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2230)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2025)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:778)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:156)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:786)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:150)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1560)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468)

2020-10-19 11:16:37.532  INFO 6836 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:16:37.535  INFO 6836 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:22:27.896  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=73---------------------------------
2020-10-19 11:22:27.901  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=73，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=73, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='1', createdTime=Thu Oct 01 21:56:05 CST 2020, asserts=[AssertVO{assertId=65, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-19 11:22:27.901  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=73
2020-10-19 11:22:27.901  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:27.901  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:22:27.901  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:22:27.901  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:22:27.903  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:22:27.906  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:22:27.907  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:22:27.961  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:22:28.089  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2270, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:22:28 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"66c50eef-9d02-4510-8351-dd63c6671327","username":"123","isEnable":1}}', runTime=93, executer='系统调度', status=0, createdTime=Mon Oct 19 11:22:28 CST 2020, errorMessage='null'}，自增执行日志编号=2270
2020-10-19 11:22:28.089  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:22:28.089  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:22:28.090  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.091  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:22:28.091  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.091  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.097  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.097  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:22:28.098  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.098  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:22:28.098  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:22:28.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"66c50eef-9d02-4510-8351-dd63c6671327","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:22:28.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:22:28.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:22:28.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.119  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.127  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:22:28.127  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:22:28.144  WARN 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"66c50eef-9d02-4510-8351-dd63c6671327","username":"123","isEnable":1}}
2020-10-19 11:22:28.144  WARN 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:22:28 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:22:28.144  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"66c50eef-9d02-4510-8351-dd63c6671327"}
2020-10-19 11:22:28.144  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"66c50eef-9d02-4510-8351-dd63c6671327"}
2020-10-19 11:22:28.144  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.144  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-19 11:22:28.144  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-19 11:22:28.144  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:22:28.160  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2271, caseId=73, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"66c50eef-9d02-4510-8351-dd63c6671327"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:22:28 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","devDomain":"http://localhost:7777/","testDomain":"http://localhost:7777/","stgDomain":"http://localhost:7777/","prodDomain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=7, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:22:28 CST 2020, errorMessage='null'}，自增执行日志编号=2271
2020-10-19 11:22:28.160  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-19 11:22:28.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-19 11:22:28.161  WARN 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-19 11:22:28.163  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-19 11:22:28.165  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-19 11:22:28.165  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.165  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-19 11:22:28.165  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-19 11:22:28.165  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-19 11:22:28.167  INFO 4460 --- [http-nio-7777-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-9} inited
2020-10-19 11:22:28.201  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-19 11:22:28.201  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","devDomain":"http://localhost:7777/","testDomain":"http://localhost:7777/","stgDomain":"http://localhost:7777/","prodDomain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-19 11:22:28.201  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-19 11:22:28.202  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.202  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-19 11:22:28.202  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.202  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.208  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:22:28.208  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=73---------------------------------
2020-10-19 11:22:28.468  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=73---------------------------------
2020-10-19 11:22:28.471  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=73，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=73, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='1', createdTime=Thu Oct 01 21:56:05 CST 2020, asserts=[AssertVO{assertId=65, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-19 11:22:28.471  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=73
2020-10-19 11:22:28.471  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.471  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:22:28.471  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:22:28.471  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:22:28.472  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:22:28.475  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:22:28.476  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2272, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:22:28 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"31cd6b52-6101-4c24-a4c7-3ff3f3dbc835","username":"123","isEnable":1}}', runTime=7, executer='系统调度', status=0, createdTime=Mon Oct 19 11:22:28 CST 2020, errorMessage='null'}，自增执行日志编号=2272
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.489  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.494  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.494  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:22:28.494  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.494  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:22:28.494  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:22:28.495  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"31cd6b52-6101-4c24-a4c7-3ff3f3dbc835","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:22:28.495  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:22:28.495  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.495  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:22:28.495  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.495  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.501  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.501  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:22:28.501  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.501  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.502  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.514  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:22:28.514  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:22:28.529  WARN 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"31cd6b52-6101-4c24-a4c7-3ff3f3dbc835","username":"123","isEnable":1}}
2020-10-19 11:22:28.529  WARN 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:22:28 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:22:28.530  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"31cd6b52-6101-4c24-a4c7-3ff3f3dbc835"}
2020-10-19 11:22:28.530  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"31cd6b52-6101-4c24-a4c7-3ff3f3dbc835"}
2020-10-19 11:22:28.530  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.530  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-19 11:22:28.530  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-19 11:22:28.530  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:22:28.545  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2273, caseId=73, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"31cd6b52-6101-4c24-a4c7-3ff3f3dbc835"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:22:28 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","devDomain":"http://localhost:7777/","testDomain":"http://localhost:7777/","stgDomain":"http://localhost:7777/","prodDomain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=7, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:22:28 CST 2020, errorMessage='null'}，自增执行日志编号=2273
2020-10-19 11:22:28.545  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:22:28.545  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-19 11:22:28.546  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-19 11:22:28.546  WARN 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-19 11:22:28.547  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-19 11:22:28.550  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-19 11:22:28.550  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:22:28.550  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-19 11:22:28.550  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-19 11:22:28.550  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-19 11:22:28.551  INFO 4460 --- [http-nio-7777-exec-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-10} inited
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","devDomain":"http://localhost:7777/","testDomain":"http://localhost:7777/","stgDomain":"http://localhost:7777/","prodDomain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:22:28.562  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:22:28.569  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:22:28.569  INFO 4460 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=73---------------------------------
2020-10-19 11:28:00.102  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:28:00.104  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=1, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:28:00.104  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:28:00.104  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.104  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:28:00.105  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:28:00.105  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:28:00.106  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:28:00.109  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:28:00.110  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2274, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:28:00 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"9a24b592-e33f-487e-a9b5-0f4910c64d5d","username":"123","isEnable":1}}', runTime=8, executer='系统调度', status=0, createdTime=Mon Oct 19 11:28:00 CST 2020, errorMessage='null'}，自增执行日志编号=2274
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:28:00.127  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:28:00.134  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"9a24b592-e33f-487e-a9b5-0f4910c64d5d","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:28:00.135  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:28:00.141  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:28:00.147  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:28:00.147  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:28:00.157  WARN 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"9a24b592-e33f-487e-a9b5-0f4910c64d5d","username":"123","isEnable":1}}
2020-10-19 11:28:00.157  WARN 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:28:00 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:28:00.157  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"9a24b592-e33f-487e-a9b5-0f4910c64d5d"}
2020-10-19 11:28:00.157  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"9a24b592-e33f-487e-a9b5-0f4910c64d5d"}
2020-10-19 11:28:00.157  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.157  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:28:00.158  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:28:00.158  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:00.158  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:28:00.158  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:28:00.158  INFO 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:28:00.172  WARN 4460 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2275, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"9a24b592-e33f-487e-a9b5-0f4910c64d5d"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:28:00 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.CharSequence
	at org.alex.platform.util.RestUtil.post(RestUtil.java:239)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:371)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2275
2020-10-19 11:28:22.159  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:28:22.161  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=1, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:28:22.161  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:28:22.161  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.162  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:28:22.162  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:28:22.162  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:28:22.163  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:28:22.166  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2276, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:28:22 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"040cb947-ed06-49fc-8789-90eb3d14111e","username":"123","isEnable":1}}', runTime=8, executer='系统调度', status=0, createdTime=Mon Oct 19 11:28:22 CST 2020, errorMessage='null'}，自增执行日志编号=2276
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:28:22.181  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:28:22.182  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:28:22.182  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:28:22.182  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:28:22.182  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"040cb947-ed06-49fc-8789-90eb3d14111e","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:28:22.187  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:28:22.193  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:28:22.200  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:28:22.200  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:28:22.210  WARN 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"040cb947-ed06-49fc-8789-90eb3d14111e","username":"123","isEnable":1}}
2020-10-19 11:28:22.210  WARN 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:28:22 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"040cb947-ed06-49fc-8789-90eb3d14111e"}
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"040cb947-ed06-49fc-8789-90eb3d14111e"}
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:28:22.210  INFO 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:28:22.223  WARN 4460 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2277, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"040cb947-ed06-49fc-8789-90eb3d14111e"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:28:22 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.CharSequence
	at org.alex.platform.util.RestUtil.post(RestUtil.java:239)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:371)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2277
2020-10-19 11:31:17.157  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:31:17.160  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=1, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:31:17.160  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:31:17.160  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.160  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:31:17.160  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:31:17.160  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:31:17.161  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:31:17.164  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:31:17.165  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2278, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:31:16 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"748431b0-9dfc-44d3-aa5f-17eb9f41dc52","username":"123","isEnable":1}}', runTime=4, executer='系统调度', status=0, createdTime=Mon Oct 19 11:31:17 CST 2020, errorMessage='null'}，自增执行日志编号=2278
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:31:17.176  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"748431b0-9dfc-44d3-aa5f-17eb9f41dc52","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:31:17.181  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:31:17.187  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:31:17.193  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:31:17.193  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:31:17.204  WARN 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"748431b0-9dfc-44d3-aa5f-17eb9f41dc52","username":"123","isEnable":1}}
2020-10-19 11:31:17.204  WARN 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:31:16 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"748431b0-9dfc-44d3-aa5f-17eb9f41dc52"}
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"748431b0-9dfc-44d3-aa5f-17eb9f41dc52"}
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:31:17.204  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:31:17.211 ERROR 4460 --- [http-nio-7777-exec-3] o.a.p.controller.ExceptionController     : org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:213)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:422)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-19 11:31:17.217  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2279, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"748431b0-9dfc-44d3-aa5f-17eb9f41dc52"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:31:16 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":500,"msg":"Request method 'POST' not supported","data":{}}', runTime=8, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:31:17 CST 2020, errorMessage='null'}，自增执行日志编号=2279
2020-10-19 11:31:17.217  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:31:17.219  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:31:17.219  INFO 4460 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
2020-10-19 11:31:48.109  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:31:48.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:31:48.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:31:48.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:31:48.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:31:48.112  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:31:48.113  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:31:48.116  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2280, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:31:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"20b45d5a-24a1-44b0-8fb5-27cc800fc598","username":"123","isEnable":1}}', runTime=5, executer='系统调度', status=0, createdTime=Mon Oct 19 11:31:48 CST 2020, errorMessage='null'}，自增执行日志编号=2280
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:31:48.128  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"20b45d5a-24a1-44b0-8fb5-27cc800fc598","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:31:48.133  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:31:48.138  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:31:48.143  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:31:48.143  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:31:48.152  WARN 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"20b45d5a-24a1-44b0-8fb5-27cc800fc598","username":"123","isEnable":1}}
2020-10-19 11:31:48.152  WARN 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:31:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"20b45d5a-24a1-44b0-8fb5-27cc800fc598"}
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"20b45d5a-24a1-44b0-8fb5-27cc800fc598"}
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:31:48.152  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:31:48.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2281, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"20b45d5a-24a1-44b0-8fb5-27cc800fc598"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:31:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}', runTime=4, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:31:48 CST 2020, errorMessage='null'}，自增执行日志编号=2281
2020-10-19 11:31:48.161  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:31:48.162  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:31:48.162  INFO 4460 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
2020-10-19 11:33:40.234  INFO 1352 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 1352 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:33:40.236  INFO 1352 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:33:40.842  INFO 1352 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:33:40.843  INFO 1352 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:33:40.882  INFO 1352 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-10-19 11:33:41.124  INFO 1352 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$748eaf72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:33:41.385  INFO 1352 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:33:41.402  INFO 1352 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:33:41.403  INFO 1352 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:33:41.487  INFO 1352 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:33:41.488  INFO 1352 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1207 ms
2020-10-19 11:33:41.824  INFO 1352 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:33:41.917  INFO 1352 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:33:42.389  INFO 1352 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:33:42.636  INFO 1352 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:33:43.038  INFO 1352 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:33:43.041  INFO 1352 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.277 seconds (JVM running for 3.931)
2020-10-19 11:33:57.818  INFO 1352 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:33:57.818  INFO 1352 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:33:57.824  INFO 1352 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-19 11:33:57.915  INFO 1352 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:33:57.916  INFO 1352 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:34:34.976  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:34:34.981  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:34:34.981  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:34:34.981  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:34.981  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:34:34.982  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:34:34.982  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:34:34.984  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:34:34.990  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:34:34.991  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:34:35.024  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:34:35.082  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2282, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:34:35 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"c5b7a876-71a7-4d06-b76a-908b5e973434","username":"123","isEnable":1}}', runTime=39, executer='系统调度', status=0, createdTime=Mon Oct 19 11:34:35 CST 2020, errorMessage='null'}，自增执行日志编号=2282
2020-10-19 11:34:35.082  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:34:35.082  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:34:35.082  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:34:35.083  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:34:35.084  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:34:35.084  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:34:35.093  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:34:35.093  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:34:35.093  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:35.093  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:34:35.093  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:34:35.103  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"c5b7a876-71a7-4d06-b76a-908b5e973434","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:34:35.103  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:34:35.103  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:34:35.103  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:34:35.103  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:34:35.103  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:34:35.110  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:34:35.111  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:34:35.117  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:34:35.117  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:34:35.134  WARN 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"c5b7a876-71a7-4d06-b76a-908b5e973434","username":"123","isEnable":1}}
2020-10-19 11:34:35.134  WARN 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:34:35 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"c5b7a876-71a7-4d06-b76a-908b5e973434"}
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"c5b7a876-71a7-4d06-b76a-908b5e973434"}
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:34:35.134  INFO 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:34:35.150  WARN 1352 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2283, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"c5b7a876-71a7-4d06-b76a-908b5e973434"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:34:35 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.CharSequence
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2283
2020-10-19 11:34:41.137  INFO 1352 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:34:41.140  INFO 1352 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:34:44.462  INFO 9428 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 9428 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:34:44.464  INFO 9428 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:34:45.054  INFO 9428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:34:45.056  INFO 9428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:34:45.093  INFO 9428 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-19 11:34:45.317  INFO 9428 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c16786d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:34:45.525  INFO 9428 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:34:45.533  INFO 9428 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:34:45.533  INFO 9428 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:34:45.603  INFO 9428 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:34:45.603  INFO 9428 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1090 ms
2020-10-19 11:34:45.921  INFO 9428 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:34:46.013  INFO 9428 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:34:46.460  INFO 9428 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:34:46.690  INFO 9428 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:34:47.089  INFO 9428 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:34:47.092  INFO 9428 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.989 seconds (JVM running for 3.604)
2020-10-19 11:34:57.785  INFO 9428 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:34:57.789  INFO 9428 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:34:59.484  INFO 3424 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 3424 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:34:59.487  INFO 3424 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:35:00.432  INFO 3424 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:35:00.434  INFO 3424 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:35:00.472  INFO 3424 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-19 11:35:00.706  INFO 3424 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$fd06e3c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:35:00.910  INFO 3424 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:35:00.917  INFO 3424 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:35:00.917  INFO 3424 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:35:00.980  INFO 3424 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:35:00.980  INFO 3424 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1395 ms
2020-10-19 11:35:01.302  INFO 3424 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:35:01.403  INFO 3424 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:35:01.859  INFO 3424 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:35:02.092  INFO 3424 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:35:02.495  INFO 3424 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:35:02.498  INFO 3424 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.409 seconds (JVM running for 3.99)
2020-10-19 11:35:15.758  INFO 3424 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:35:15.759  INFO 3424 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:35:15.763  INFO 3424 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-19 11:35:15.853  INFO 3424 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:35:15.854  INFO 3424 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:35:16.087  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:35:16.094  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:35:16.095  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:35:16.095  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.095  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:35:16.095  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:35:16.095  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:35:16.098  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.104  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:35:16.105  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:35:16.136  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:35:16.341  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2284, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:35:16 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"a0121773-f17a-48f6-aa77-d8731d864653","username":"123","isEnable":1}}', runTime=182, executer='系统调度', status=0, createdTime=Mon Oct 19 11:35:16 CST 2020, errorMessage='null'}，自增执行日志编号=2284
2020-10-19 11:35:16.341  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:35:16.341  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:35:16.341  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:35:16.342  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:35:16.343  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:35:16.343  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:35:16.350  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:35:16.350  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:35:16.351  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.351  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:35:16.351  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:35:16.361  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"a0121773-f17a-48f6-aa77-d8731d864653","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:35:16.361  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:35:16.361  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:35:16.361  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:35:16.361  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:35:16.361  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:35:16.367  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:35:16.367  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:35:16.368  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:35:16.376  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:35:16.376  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:35:16.398  WARN 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"a0121773-f17a-48f6-aa77-d8731d864653","username":"123","isEnable":1}}
2020-10-19 11:35:16.398  WARN 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:35:16 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"a0121773-f17a-48f6-aa77-d8731d864653"}
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"a0121773-f17a-48f6-aa77-d8731d864653"}
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:35:16.398  INFO 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:35:16.415  WARN 3424 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2285, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"a0121773-f17a-48f6-aa77-d8731d864653"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:35:16 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.CharSequence
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2285
2020-10-19 11:35:48.797  INFO 3424 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:35:48.801  INFO 3424 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:35:51.676  INFO 11300 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 11300 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:35:51.683  INFO 11300 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:35:52.364  INFO 11300 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:35:52.365  INFO 11300 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:35:52.403  INFO 11300 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-19 11:35:52.624  INFO 11300 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$bd7e000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:35:52.835  INFO 11300 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:35:52.842  INFO 11300 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:35:52.843  INFO 11300 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:35:52.905  INFO 11300 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:35:52.905  INFO 11300 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1160 ms
2020-10-19 11:35:53.220  INFO 11300 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:35:53.313  INFO 11300 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:35:53.765  INFO 11300 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:35:53.992  INFO 11300 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:35:54.379  INFO 11300 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:35:54.382  INFO 11300 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.156 seconds (JVM running for 3.773)
2020-10-19 11:36:00.391  INFO 11300 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:36:00.391  INFO 11300 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:36:00.396  INFO 11300 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-19 11:36:00.486  INFO 11300 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:36:00.487  INFO 11300 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:36:00.725  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:36:00.733  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:36:00.734  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:36:00.734  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:00.734  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:36:00.734  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:36:00.734  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:36:00.737  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:36:00.743  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:36:00.796  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:36:01.026  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2286, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:36:00 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"143c2fc8-2b2f-4bca-bf63-2f8f8d00f1d8","username":"123","isEnable":1}}', runTime=203, executer='系统调度', status=0, createdTime=Mon Oct 19 11:36:01 CST 2020, errorMessage='null'}，自增执行日志编号=2286
2020-10-19 11:36:01.026  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:36:01.026  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:36:01.027  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:36:01.027  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:01.027  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:36:01.028  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:36:01.029  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:36:01.030  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:36:01.030  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:36:01.030  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:36:01.031  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:36:01.031  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:36:01.043  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:36:01.043  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:36:01.043  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:01.043  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:36:01.043  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:36:01.053  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"143c2fc8-2b2f-4bca-bf63-2f8f8d00f1d8","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:36:01.054  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:36:01.054  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:36:01.054  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:36:01.054  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:36:01.054  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:36:01.060  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:36:01.069  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:36:01.069  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:36:01.093  WARN 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"143c2fc8-2b2f-4bca-bf63-2f8f8d00f1d8","username":"123","isEnable":1}}
2020-10-19 11:36:01.093  WARN 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:36:00 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"143c2fc8-2b2f-4bca-bf63-2f8f8d00f1d8"}
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"143c2fc8-2b2f-4bca-bf63-2f8f8d00f1d8"}
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:36:01.093  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:36:01.094  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:36:01.094  INFO 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:36:48.692  WARN 11300 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2287, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"143c2fc8-2b2f-4bca-bf63-2f8f8d00f1d8"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:36:48 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.CharSequence
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2287
2020-10-19 11:36:48.696  INFO 11300 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:36:48.700  INFO 11300 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:37:46.719  INFO 9536 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 9536 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:37:46.721  INFO 9536 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:37:47.354  INFO 9536 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:37:47.356  INFO 9536 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:37:47.396  INFO 9536 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 Redis repository interfaces.
2020-10-19 11:37:47.589  INFO 9536 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$6e142356] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:37:47.774  INFO 9536 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:37:47.781  INFO 9536 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:37:47.781  INFO 9536 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:37:47.846  INFO 9536 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:37:47.846  INFO 9536 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1090 ms
2020-10-19 11:37:48.102  INFO 9536 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:37:48.185  INFO 9536 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:37:48.619  INFO 9536 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:37:48.831  INFO 9536 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:37:49.216  INFO 9536 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:37:49.218  INFO 9536 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.771 seconds (JVM running for 3.257)
2020-10-19 11:37:55.719  INFO 9536 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:37:55.719  INFO 9536 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:37:55.723  INFO 9536 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-19 11:37:55.802  INFO 9536 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:37:55.803  INFO 9536 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:37:56.023  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:37:56.031  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:37:56.031  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:37:56.031  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.031  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:37:56.032  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:37:56.032  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:37:56.035  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:37:56.041  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:37:56.041  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:37:56.042  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:37:56.073  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2288, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:37:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"1273dc8b-6d9e-483f-8309-3d753dd13fbe","username":"123","isEnable":1}}', runTime=82, executer='系统调度', status=0, createdTime=Mon Oct 19 11:37:56 CST 2020, errorMessage='null'}，自增执行日志编号=2288
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:37:56.177  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:37:56.178  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:37:56.178  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:37:56.178  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:37:56.178  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:37:56.178  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:37:56.178  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:37:56.186  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:37:56.186  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:37:56.186  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.186  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:37:56.186  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:37:56.196  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"1273dc8b-6d9e-483f-8309-3d753dd13fbe","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:37:56.196  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:37:56.196  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:37:56.196  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:37:56.196  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:37:56.196  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:37:56.202  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:37:56.203  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:37:56.212  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:37:56.212  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:37:56.234  WARN 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"1273dc8b-6d9e-483f-8309-3d753dd13fbe","username":"123","isEnable":1}}
2020-10-19 11:37:56.234  WARN 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:37:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"1273dc8b-6d9e-483f-8309-3d753dd13fbe"}
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"1273dc8b-6d9e-483f-8309-3d753dd13fbe"}
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:37:56.234  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:37:56.235  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:37:56.235  INFO 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:37:56.251  WARN 9536 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2289, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"1273dc8b-6d9e-483f-8309-3d753dd13fbe"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:37:56 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.CharSequence
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2289
2020-10-19 11:39:23.124  INFO 9764 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 9764 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:39:23.126  INFO 9764 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:39:23.715  INFO 9764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:39:23.716  INFO 9764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:39:23.753  INFO 9764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-19 11:39:23.987  INFO 9764 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$ca763fb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:39:24.204  INFO 9764 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:39:24.212  INFO 9764 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:39:24.213  INFO 9764 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:39:24.280  INFO 9764 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:39:24.280  INFO 9764 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1103 ms
2020-10-19 11:39:24.599  INFO 9764 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:39:24.692  INFO 9764 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:39:25.139  INFO 9764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:39:25.367  INFO 9764 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:39:25.756  INFO 9764 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:39:25.759  INFO 9764 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.994 seconds (JVM running for 3.574)
2020-10-19 11:39:36.363  INFO 9764 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:39:36.363  INFO 9764 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:39:36.368  INFO 9764 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-19 11:39:36.457  INFO 9764 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:39:36.458  INFO 9764 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:39:36.710  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:39:36.717  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:39:36.718  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:39:36.718  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:36.718  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:39:36.718  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:39:36.718  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:39:36.721  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:39:36.727  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:39:36.727  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:39:36.727  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:39:36.728  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:39:36.762  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:39:36.991  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2290, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:39:36 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f6f43dbb-1a95-4f88-b3bb-0cd9b5e236bc","username":"123","isEnable":1}}', runTime=205, executer='系统调度', status=0, createdTime=Mon Oct 19 11:39:36 CST 2020, errorMessage='null'}，自增执行日志编号=2290
2020-10-19 11:39:36.991  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:39:36.991  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:39:36.992  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:39:36.993  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:39:36.993  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:39:36.993  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:39:37.001  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:39:37.001  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:39:37.001  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:37.001  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:39:37.001  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:39:37.012  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f6f43dbb-1a95-4f88-b3bb-0cd9b5e236bc","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:39:37.012  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:39:37.012  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:39:37.012  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:39:37.012  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:39:37.012  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:39:37.019  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:39:37.027  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:39:37.027  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:39:37.048  WARN 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f6f43dbb-1a95-4f88-b3bb-0cd9b5e236bc","username":"123","isEnable":1}}
2020-10-19 11:39:37.048  WARN 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:39:36 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:39:37.048  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"f6f43dbb-1a95-4f88-b3bb-0cd9b5e236bc"}
2020-10-19 11:39:37.048  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"f6f43dbb-1a95-4f88-b3bb-0cd9b5e236bc"}
2020-10-19 11:39:37.048  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:37.048  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:39:37.048  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:39:37.048  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:39:37.049  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:39:37.049  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:39:37.049  INFO 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:40:04.892  WARN 9764 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2291, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"f6f43dbb-1a95-4f88-b3bb-0cd9b5e236bc"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:40:04 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2291
2020-10-19 11:40:04.895  INFO 9764 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:40:04.896  INFO 9764 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:40:07.204 ERROR 9764 --- [http-nio-7777-exec-1] o.a.p.controller.ExceptionController     : org.springframework.data.redis.RedisSystemException: Unknown redis exception; nested exception is java.util.concurrent.RejectedExecutionException: event executor terminated
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.getFallback(FallbackExceptionTranslationStrategy.java:53)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:43)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:270)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:809)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.expire(LettuceKeyCommands.java:371)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.expire(DefaultedRedisConnection.java:139)
	at org.springframework.data.redis.core.RedisTemplate.lambda$expire$8(RedisTemplate.java:804)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:228)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.RedisTemplate.expire(RedisTemplate.java:799)
	at org.alex.platform.util.RedisUtil.expire(RedisUtil.java:37)
	at org.alex.platform.config.LoginConfig$1.postHandle(LoginConfig.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPostHandle(HandlerExecutionChain.java:161)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1047)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.util.concurrent.RejectedExecutionException: event executor terminated
	at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:926)
	at io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:353)
	at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:346)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:828)
	at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:818)
	at io.netty.util.concurrent.AbstractScheduledEventExecutor.schedule(AbstractScheduledEventExecutor.java:261)
	at io.netty.util.concurrent.AbstractScheduledEventExecutor.schedule(AbstractScheduledEventExecutor.java:177)
	at io.netty.util.concurrent.AbstractEventExecutorGroup.schedule(AbstractEventExecutorGroup.java:50)
	at io.netty.util.concurrent.AbstractEventExecutorGroup.schedule(AbstractEventExecutorGroup.java:32)
	at io.lettuce.core.protocol.CommandExpiryWriter.potentiallyExpire(CommandExpiryWriter.java:164)
	at io.lettuce.core.protocol.CommandExpiryWriter.write(CommandExpiryWriter.java:111)
	at io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:187)
	at io.lettuce.core.StatefulRedisConnectionImpl.dispatch(StatefulRedisConnectionImpl.java:171)
	at io.lettuce.core.AbstractRedisAsyncCommands.dispatch(AbstractRedisAsyncCommands.java:467)
	at io.lettuce.core.AbstractRedisAsyncCommands.expire(AbstractRedisAsyncCommands.java:524)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:57)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:80)
	at com.sun.proxy.$Proxy129.expire(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.expire(LettuceKeyCommands.java:369)
	... 51 more

2020-10-19 11:40:07.207  WARN 9764 --- [http-nio-7777-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Failure in @ExceptionHandler org.alex.platform.controller.ExceptionController#globalException(Exception)

java.lang.NullPointerException: null
	at org.springframework.web.util.UrlPathHelper.removeJsessionid(UrlPathHelper.java:542) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.util.UrlPathHelper.removeSemicolonContent(UrlPathHelper.java:527) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.util.UrlPathHelper.decodeAndCleanUriString(UrlPathHelper.java:460) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.util.UrlPathHelper.getOriginatingRequestUri(UrlPathHelper.java:407) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.addContentDispositionHeader(AbstractMessageConverterMethodProcessor.java:433) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:285) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:181) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:403) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]

2020-10-19 11:40:11.962  INFO 11788 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 11788 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:40:11.964  INFO 11788 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:40:12.569  INFO 11788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:40:12.571  INFO 11788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:40:12.608  INFO 11788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-19 11:40:12.851  INFO 11788 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$d8894f77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:40:13.068  INFO 11788 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:40:13.075  INFO 11788 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:40:13.075  INFO 11788 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:40:13.137  INFO 11788 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:40:13.137  INFO 11788 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1132 ms
2020-10-19 11:40:13.458  INFO 11788 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:40:13.554  INFO 11788 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:40:14.017  INFO 11788 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:40:14.247  INFO 11788 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:40:14.667  INFO 11788 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:40:14.670  INFO 11788 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.068 seconds (JVM running for 3.622)
2020-10-19 11:40:17.096  INFO 11788 --- [http-nio-7777-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:40:17.096  INFO 11788 --- [http-nio-7777-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:40:17.101  INFO 11788 --- [http-nio-7777-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-19 11:40:17.191  INFO 11788 --- [http-nio-7777-exec-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:40:17.192  INFO 11788 --- [http-nio-7777-exec-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:40:17.450  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:40:17.459  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:40:17.460  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:40:17.460  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.460  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:40:17.460  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:40:17.460  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:40:17.464  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:40:17.486  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:40:17.486  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:40:17.487  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:40:17.520  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:40:17.745  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2292, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:40:17 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"de292253-1c7d-4631-8f4a-307ec79516e8","username":"123","isEnable":1}}', runTime=199, executer='系统调度', status=0, createdTime=Mon Oct 19 11:40:17 CST 2020, errorMessage='null'}，自增执行日志编号=2292
2020-10-19 11:40:17.745  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:40:17.745  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:40:17.746  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:40:17.746  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.746  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:40:17.746  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:40:17.746  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:40:17.746  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:40:17.747  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:40:17.747  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:40:17.747  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:40:17.747  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:40:17.756  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:40:17.756  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:40:17.757  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.757  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:40:17.757  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:40:17.767  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"de292253-1c7d-4631-8f4a-307ec79516e8","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:40:17.767  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:40:17.767  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:40:17.767  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:40:17.768  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:40:17.768  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:40:17.774  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:40:17.774  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:40:17.775  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:40:17.783  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:40:17.783  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:40:17.804  WARN 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"de292253-1c7d-4631-8f4a-307ec79516e8","username":"123","isEnable":1}}
2020-10-19 11:40:17.804  WARN 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:40:17 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"de292253-1c7d-4631-8f4a-307ec79516e8"}
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"de292253-1c7d-4631-8f4a-307ec79516e8"}
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:40:17.804  INFO 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:40:47.006  WARN 11788 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2293, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"de292253-1c7d-4631-8f4a-307ec79516e8"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:40:46 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2293
2020-10-19 11:40:47.012  INFO 11788 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-19 11:40:47.016  INFO 11788 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-19 11:41:27.672  INFO 2504 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 2504 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:41:27.674  INFO 2504 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:41:28.231  INFO 2504 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:41:28.232  INFO 2504 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:41:28.268  INFO 2504 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-10-19 11:41:28.462  INFO 2504 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$15be85ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:41:28.641  INFO 2504 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:41:28.647  INFO 2504 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:41:28.648  INFO 2504 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:41:28.711  INFO 2504 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:41:28.711  INFO 2504 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1004 ms
2020-10-19 11:41:28.966  INFO 2504 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:41:29.051  INFO 2504 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:41:29.456  INFO 2504 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:41:29.656  INFO 2504 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:41:30.017  INFO 2504 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:41:30.019  INFO 2504 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.619 seconds (JVM running for 3.067)
2020-10-19 11:41:41.262  INFO 2504 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:41:41.263  INFO 2504 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:41:41.267  INFO 2504 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-19 11:41:41.346  INFO 2504 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:41:41.347  INFO 2504 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:41:41.566  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:41:41.573  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:41:41.574  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:41:41.574  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.574  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:41:41.574  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:41:41.574  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:41:41.577  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.583  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:41:41.584  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:41:41.584  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.584  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:41:41.584  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:41:41.612  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2294, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:41:41 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"8938b897-726d-4c45-884a-392dfa5d2fe4","username":"123","isEnable":1}}', runTime=68, executer='系统调度', status=0, createdTime=Mon Oct 19 11:41:41 CST 2020, errorMessage='null'}，自增执行日志编号=2294
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:41:41.701  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:41:41.702  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:41:41.702  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:41:41.702  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:41:41.702  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:41:41.702  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:41:41.702  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:41:41.709  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:41:41.709  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:41:41.709  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.709  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:41:41.710  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:41:41.717  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"8938b897-726d-4c45-884a-392dfa5d2fe4","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:41:41.718  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:41:41.718  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:41:41.718  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:41:41.718  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:41:41.718  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:41:41.724  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:41:41.725  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:41:41.725  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:41:41.725  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:41:41.725  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:41:41.734  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:41:41.734  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:41:41.764  WARN 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"8938b897-726d-4c45-884a-392dfa5d2fe4","username":"123","isEnable":1}}
2020-10-19 11:41:41.764  WARN 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:41:41 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"8938b897-726d-4c45-884a-392dfa5d2fe4"}
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"8938b897-726d-4c45-884a-392dfa5d2fe4"}
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:41:41.765  INFO 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:41:41.782  WARN 2504 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2295, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"8938b897-726d-4c45-884a-392dfa5d2fe4"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:41:41 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2295
2020-10-19 11:43:08.730  INFO 2716 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 2716 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:43:08.732  INFO 2716 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:43:09.246  INFO 2716 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:43:09.248  INFO 2716 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:43:09.281  INFO 2716 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-10-19 11:43:09.466  INFO 2716 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$33705afa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:43:09.642  INFO 2716 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:43:09.649  INFO 2716 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:43:09.649  INFO 2716 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:43:09.714  INFO 2716 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:43:09.714  INFO 2716 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 950 ms
2020-10-19 11:43:09.974  INFO 2716 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:43:10.058  INFO 2716 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:43:10.458  INFO 2716 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:43:10.668  INFO 2716 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:43:11.032  INFO 2716 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:43:11.034  INFO 2716 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.576 seconds (JVM running for 3.019)
2020-10-19 11:43:21.064  INFO 2716 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:43:21.064  INFO 2716 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:43:21.068  INFO 2716 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-19 11:43:21.146  INFO 2716 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:43:21.147  INFO 2716 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:44:01.759  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:44:01.764  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:44:01.764  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:44:01.764  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.764  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:44:01.765  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:44:01.765  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:44:01.767  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.772  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:44:01.773  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:44:01.904  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2296, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:44:01 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"1819fbe6-7947-491d-9e54-43b27910a55a","username":"123","isEnable":1}}', runTime=38, executer='系统调度', status=0, createdTime=Mon Oct 19 11:44:01 CST 2020, errorMessage='null'}，自增执行日志编号=2296
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:44:01.960  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:44:01.961  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:44:01.961  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:44:01.961  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:44:01.961  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:44:01.961  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:44:01.961  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:44:01.969  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:44:01.969  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:44:01.969  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.969  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:44:01.969  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:44:01.978  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"1819fbe6-7947-491d-9e54-43b27910a55a","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:44:01.978  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:44:01.978  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:44:01.978  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:44:01.978  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:44:01.978  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:44:01.985  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:44:01.993  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:44:01.993  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:44:02.006  WARN 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"1819fbe6-7947-491d-9e54-43b27910a55a","username":"123","isEnable":1}}
2020-10-19 11:44:02.006  WARN 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:44:01 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"1819fbe6-7947-491d-9e54-43b27910a55a"}
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"1819fbe6-7947-491d-9e54-43b27910a55a"}
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:02.006  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:44:02.007  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:44:02.007  INFO 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:44:02.023  WARN 2716 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2297, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"1819fbe6-7947-491d-9e54-43b27910a55a"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:44:02 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2297
2020-10-19 11:44:48.709  INFO 7272 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 7272 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-19 11:44:48.712  INFO 7272 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-19 11:44:49.253  INFO 7272 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-19 11:44:49.254  INFO 7272 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-19 11:44:49.292  INFO 7272 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-19 11:44:49.483  INFO 7272 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$f7ed22ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-19 11:44:49.659  INFO 7272 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-19 11:44:49.665  INFO 7272 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-19 11:44:49.665  INFO 7272 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-19 11:44:49.729  INFO 7272 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-19 11:44:49.730  INFO 7272 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 982 ms
2020-10-19 11:44:49.985  INFO 7272 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-19 11:44:50.071  INFO 7272 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-19 11:44:50.482  INFO 7272 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-19 11:44:50.696  INFO 7272 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-19 11:44:51.060  INFO 7272 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-19 11:44:51.062  INFO 7272 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.633 seconds (JVM running for 3.064)
2020-10-19 11:44:56.359  INFO 7272 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-19 11:44:56.359  INFO 7272 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-19 11:44:56.364  INFO 7272 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-19 11:44:56.443  INFO 7272 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-19 11:44:56.444  INFO 7272 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-19 11:44:56.664  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:44:56.672  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":1}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[]}
2020-10-19 11:44:56.672  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:44:56.672  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.672  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:44:56.672  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:44:56.672  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:44:56.675  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:44:56.681  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:44:56.681  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:44:56.682  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:44:56.712  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2298, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:44:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"acde450a-4506-4be5-b8af-7e00dc678dce","username":"123","isEnable":1}}', runTime=74, executer='系统调度', status=0, createdTime=Mon Oct 19 11:44:56 CST 2020, errorMessage='null'}，自增执行日志编号=2298
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:44:56.898  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:44:56.899  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:44:56.899  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:44:56.899  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:44:56.899  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:44:56.900  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:44:56.900  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:44:56.907  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:44:56.907  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:44:56.907  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.907  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:44:56.907  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:44:56.916  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"acde450a-4506-4be5-b8af-7e00dc678dce","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:44:56.916  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:44:56.916  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:44:56.916  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:44:56.917  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:44:56.917  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:44:56.925  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:44:56.926  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:44:56.936  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:44:56.936  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:44:56.957  WARN 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"acde450a-4506-4be5-b8af-7e00dc678dce","username":"123","isEnable":1}}
2020-10-19 11:44:56.957  WARN 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:44:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"acde450a-4506-4be5-b8af-7e00dc678dce"}
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"acde450a-4506-4be5-b8af-7e00dc678dce"}
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":1}
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":1}
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:44:56.957  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:44:56.975  WARN 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2299, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"acde450a-4506-4be5-b8af-7e00dc678dce"}', requestParams='{"userId":1}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Mon Oct 19 11:44:56 CST 2020, errorMessage='java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at org.alex.platform.util.RestUtil.get(RestUtil.java:140)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=2299
2020-10-19 11:50:47.498  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-19 11:50:47.502  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":0}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-19 11:50:47.502  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-19 11:50:47.502  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.502  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:50:47.503  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:50:47.503  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:50:47.505  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:50:47.508  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:50:47.509  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2300, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:50:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"9fd11213-954d-42bc-853e-3e754ac44778","username":"123","isEnable":1}}', runTime=8, executer='系统调度', status=0, createdTime=Mon Oct 19 11:50:47 CST 2020, errorMessage='null'}，自增执行日志编号=2300
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:50:47.524  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:50:47.529  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"9fd11213-954d-42bc-853e-3e754ac44778","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:50:47.530  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:50:47.542  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:50:47.550  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:50:47.550  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:50:47.561  WARN 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"9fd11213-954d-42bc-853e-3e754ac44778","username":"123","isEnable":1}}
2020-10-19 11:50:47.561  WARN 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:50:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"9fd11213-954d-42bc-853e-3e754ac44778"}
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"9fd11213-954d-42bc-853e-3e754ac44778"}
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":0}
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-19 11:50:47.562  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-19 11:50:47.562  WARN 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-19 11:50:47.565  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-19 11:50:47.566  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-19 11:50:47.566  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1603079447566","password":"123","sex":0}
2020-10-19 11:50:47.566  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1603079447566","password":"123","sex":0}
2020-10-19 11:50:47.566  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2301, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"9fd11213-954d-42bc-853e-3e754ac44778"}', requestParams='', requestData='{"username":"1603079447566","password":"123","sex":0}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:50:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=47, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:50:47 CST 2020, errorMessage='null'}，自增执行日志编号=2301
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:50:47.622  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:50:47.627  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:50:47.627  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:50:47.628  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:50:47.634  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:50:47.634  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-19 11:52:22.645  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:52:22.648  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[AssertVO{assertId=84, assertName='检查用户名一致性', type=0, expression='$..data.username', operator=0, exceptedResult='selectUserNameById("1")', order=0}]}
2020-10-19 11:52:22.649  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:52:22.649  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.649  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:52:22.649  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:52:22.649  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:52:22.650  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.655  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:52:22.656  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:52:22.656  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.656  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:52:22.656  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:52:22.656  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:52:22.668  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2302, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:52:22 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"19c1cec8-3f65-4362-9199-16ef8d9f5af0","username":"123","isEnable":1}}', runTime=6, executer='系统调度', status=0, createdTime=Mon Oct 19 11:52:22 CST 2020, errorMessage='null'}，自增执行日志编号=2302
2020-10-19 11:52:22.668  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:52:22.668  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:22.668  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:52:22.668  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.668  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:52:22.669  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:22.673  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:22.673  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:52:22.673  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.673  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:52:22.673  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:52:22.674  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"19c1cec8-3f65-4362-9199-16ef8d9f5af0","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:52:22.674  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:52:22.674  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:22.674  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:52:22.674  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:52:22.674  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:52:22.679  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:22.685  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:52:22.685  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:52:22.695  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"19c1cec8-3f65-4362-9199-16ef8d9f5af0","username":"123","isEnable":1}}
2020-10-19 11:52:22.695  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:52:22 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:52:22.695  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"19c1cec8-3f65-4362-9199-16ef8d9f5af0"}
2020-10-19 11:52:22.695  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"19c1cec8-3f65-4362-9199-16ef8d9f5af0"}
2020-10-19 11:52:22.695  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.695  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:52:22.695  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:52:22.696  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.696  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:52:22.696  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:52:22.696  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2303, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"19c1cec8-3f65-4362-9199-16ef8d9f5af0"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:52:22 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}', runTime=6, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:52:22 CST 2020, errorMessage='null'}，自增执行日志编号=2303
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=selectUserNameById("1")
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=selectUserNameById("1")
2020-10-19 11:52:22.708  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=selectUserNameById("1")
2020-10-19 11:52:22.709  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}, 提取表达式=$..data.username
2020-10-19 11:52:22.709  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=selectUserNameById("1")
2020-10-19 11:52:22.709  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:22.709  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-19 11:52:22.709  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-19 11:52:22.709  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:22.720  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:52:22.720  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
2020-10-19 11:52:57.955  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:52:57.958  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[AssertVO{assertId=84, assertName='检查用户名一致性', type=0, expression='$..data.username', operator=0, exceptedResult='#{selectUserNameById("1")}', order=0}]}
2020-10-19 11:52:57.958  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:52:57.958  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.958  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:52:57.958  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:52:57.958  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:52:57.960  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:52:57.962  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:52:57.963  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:52:57.975  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2304, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:52:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"53e78db6-1fd7-42fa-98c7-2542033c8e04","username":"123","isEnable":1}}', runTime=6, executer='系统调度', status=0, createdTime=Mon Oct 19 11:52:57 CST 2020, errorMessage='null'}，自增执行日志编号=2304
2020-10-19 11:52:57.975  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:52:57.975  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:57.975  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:52:57.976  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"53e78db6-1fd7-42fa-98c7-2542033c8e04","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:52:57.981  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:57.985  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:57.985  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:52:57.986  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:57.992  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:52:57.992  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:52:58.001  WARN 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"53e78db6-1fd7-42fa-98c7-2542033c8e04","username":"123","isEnable":1}}
2020-10-19 11:52:58.001  WARN 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:52:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:52:58.001  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"53e78db6-1fd7-42fa-98c7-2542033c8e04"}
2020-10-19 11:52:58.001  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"53e78db6-1fd7-42fa-98c7-2542033c8e04"}
2020-10-19 11:52:58.001  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:58.001  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:52:58.002  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:52:58.002  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:58.002  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:52:58.002  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:52:58.002  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2305, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"53e78db6-1fd7-42fa-98c7-2542033c8e04"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:52:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}', runTime=4, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:52:58 CST 2020, errorMessage='null'}，自增执行日志编号=2305
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=#{selectUserNameById("1")}
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=#{selectUserNameById("1")}
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=#{selectUserNameById("1")}
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}, 提取表达式=$..data.username
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=#{selectUserNameById("1")}
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-19 11:52:58.011  WARN 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-19 11:52:58.011  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:52:58.021  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:52:58.021  INFO 7272 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
2020-10-19 11:53:14.901  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:53:14.904  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[AssertVO{assertId=84, assertName='检查用户名一致性', type=0, expression='$..data.username', operator=0, exceptedResult='${selectUserNameById("1")}', order=0}]}
2020-10-19 11:53:14.904  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:53:14.904  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.904  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:53:14.904  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:53:14.904  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:53:14.905  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:53:14.908  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:53:14.919  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2306, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:14 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"ae3d1743-10d4-4970-9ace-499c45a0b4b3","username":"123","isEnable":1}}', runTime=5, executer='系统调度', status=0, createdTime=Mon Oct 19 11:53:14 CST 2020, errorMessage='null'}，自增执行日志编号=2306
2020-10-19 11:53:14.919  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:53:14.919  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:14.919  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:53:14.919  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:14.920  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"ae3d1743-10d4-4970-9ace-499c45a0b4b3","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:14.925  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:14.931  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:14.937  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:53:14.937  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:53:14.948  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"ae3d1743-10d4-4970-9ace-499c45a0b4b3","username":"123","isEnable":1}}
2020-10-19 11:53:14.948  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:14 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"ae3d1743-10d4-4970-9ace-499c45a0b4b3"}
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"ae3d1743-10d4-4970-9ace-499c45a0b4b3"}
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:53:14.949  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2307, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"ae3d1743-10d4-4970-9ace-499c45a0b4b3"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:14 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}', runTime=4, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:53:14 CST 2020, errorMessage='null'}，自增执行日志编号=2307
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=${selectUserNameById("1")}
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectUserNameById("1")}
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=${selectUserNameById("1")}
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectUserNameById("1")
2020-10-19 11:53:14.958  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-19 11:53:14.958  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectUserNameById
2020-10-19 11:53:14.960  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-19 11:53:14.961  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select username from t_user where user_id=?
2020-10-19 11:53:14.961  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:14.961  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select username from t_user where user_id=?
2020-10-19 11:53:14.961  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select username from t_user where user_id=?
2020-10-19 11:53:14.961  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select username from t_user where user_id=?, params=[1]
2020-10-19 11:53:14.967  INFO 7272 --- [http-nio-7777-exec-9] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-19 11:53:15.045  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=123
2020-10-19 11:53:15.045  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}, 提取表达式=$..data.username
2020-10-19 11:53:15.045  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=123
2020-10-19 11:53:15.045  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:15.045  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-19 11:53:15.045  WARN 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-19 11:53:15.045  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:15.056  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:53:15.056  INFO 7272 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
2020-10-19 11:53:54.387  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:53:54.389  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[AssertVO{assertId=84, assertName='检查用户名一致性', type=0, expression='$..data.username', operator=0, exceptedResult='["${selectUserNameById("1")}"]', order=0}]}
2020-10-19 11:53:54.389  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:53:54.389  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.389  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:53:54.389  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:53:54.390  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:53:54.391  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:53:54.393  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:53:54.393  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:53:54.393  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.393  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:54.393  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:53:54.394  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2308, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:54 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"b112522f-8103-4b91-af4a-bc36e59dd077","username":"123","isEnable":1}}', runTime=6, executer='系统调度', status=0, createdTime=Mon Oct 19 11:53:54 CST 2020, errorMessage='null'}，自增执行日志编号=2308
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.408  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"b112522f-8103-4b91-af4a-bc36e59dd077","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.413  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.419  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.424  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:53:54.424  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:53:54.432  WARN 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"b112522f-8103-4b91-af4a-bc36e59dd077","username":"123","isEnable":1}}
2020-10-19 11:53:54.432  WARN 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:54 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"b112522f-8103-4b91-af4a-bc36e59dd077"}
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"b112522f-8103-4b91-af4a-bc36e59dd077"}
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:53:54.432  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2309, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"b112522f-8103-4b91-af4a-bc36e59dd077"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:54 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}', runTime=5, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:53:54 CST 2020, errorMessage='null'}，自增执行日志编号=2309
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["${selectUserNameById("1")}"]
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectUserNameById("1")}
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["${selectUserNameById("1")}"]
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectUserNameById("1")
2020-10-19 11:53:54.442  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-19 11:53:54.442  WARN 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectUserNameById
2020-10-19 11:53:54.443  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-19 11:53:54.444  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select username from t_user where user_id=?
2020-10-19 11:53:54.444  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.444  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select username from t_user where user_id=?
2020-10-19 11:53:54.444  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select username from t_user where user_id=?
2020-10-19 11:53:54.444  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select username from t_user where user_id=?, params=[1]
2020-10-19 11:53:54.445  INFO 7272 --- [http-nio-7777-exec-5] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123"]
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}, 提取表达式=$..data.username
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123"]
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.457  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.463  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:53:54.463  INFO 7272 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
2020-10-19 11:53:54.859  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=82---------------------------------
2020-10-19 11:53:54.862  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=82，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=82, url='user/info/{userId}', method=0, desc='获取用户详情', level=0, doc='null', headers='{"Token":"${Token}"}', params='{"userId":"1"}', data='', json='null', creater='超级管理员', createdTime=Mon Oct 19 11:27:37 CST 2020, asserts=[AssertVO{assertId=84, assertName='检查用户名一致性', type=0, expression='$..data.username', operator=0, exceptedResult='["${selectUserNameById("1")}"]', order=0}]}
2020-10-19 11:53:54.862  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=82
2020-10-19 11:53:54.862  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.862  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-19 11:53:54.862  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-19 11:53:54.862  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-19 11:53:54.864  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:53:54.867  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2310, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:54 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"25e89bcb-e900-4117-9893-90a773a4a482","username":"123","isEnable":1}}', runTime=5, executer='系统调度', status=0, createdTime=Mon Oct 19 11:53:54 CST 2020, errorMessage='null'}，自增执行日志编号=2310
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.877  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"25e89bcb-e900-4117-9893-90a773a4a482","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.882  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.887  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.893  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:53:54.893  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-19 11:53:54.902  WARN 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"25e89bcb-e900-4117-9893-90a773a4a482","username":"123","isEnable":1}}
2020-10-19 11:53:54.902  WARN 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:54 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-19 11:53:54.902  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"25e89bcb-e900-4117-9893-90a773a4a482"}
2020-10-19 11:53:54.902  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"25e89bcb-e900-4117-9893-90a773a4a482"}
2020-10-19 11:53:54.902  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.902  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"userId":"1"}
2020-10-19 11:53:54.902  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"userId":"1"}
2020-10-19 11:53:54.903  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.903  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-19 11:53:54.903  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-19 11:53:54.903  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=2311, caseId=82, caseUrl='http://localhost:7777/user/info/{userId}', caseDesc='获取用户详情', requestHeaders='{"Token":"25e89bcb-e900-4117-9893-90a773a4a482"}', requestParams='{"userId":"1"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Mon, 19 Oct 2020 03:53:54 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}', runTime=4, executer='超级管理员', status=0, createdTime=Mon Oct 19 11:53:54 CST 2020, errorMessage='null'}，自增执行日志编号=2311
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["${selectUserNameById("1")}"]
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectUserNameById("1")}
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.911  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["${selectUserNameById("1")}"]
2020-10-19 11:53:54.912  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectUserNameById("1")
2020-10-19 11:53:54.912  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-19 11:53:54.912  WARN 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectUserNameById
2020-10-19 11:53:54.913  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-19 11:53:54.913  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select username from t_user where user_id=?
2020-10-19 11:53:54.913  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-19 11:53:54.913  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select username from t_user where user_id=?
2020-10-19 11:53:54.913  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select username from t_user where user_id=?
2020-10-19 11:53:54.913  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select username from t_user where user_id=?, params=[1]
2020-10-19 11:53:54.914  INFO 7272 --- [http-nio-7777-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2020-10-19 11:53:54.925  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123"]
2020-10-19 11:53:54.926  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"userId":1,"username":"123","password":"123","jobNumber":"1","sex":1,"isEnable":1,"createdTime":null,"updateTime":null,"realName":"超级管理员","roleId":0}}, 提取表达式=$..data.username
2020-10-19 11:53:54.926  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123"]
2020-10-19 11:53:54.926  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-19 11:53:54.926  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-19 11:53:54.926  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-19 11:53:54.926  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-19 11:53:54.931  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-19 11:53:54.931  INFO 7272 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=82---------------------------------
