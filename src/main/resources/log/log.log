2020-10-07 10:34:12.468  INFO 6380 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 6380 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-07 10:34:12.494  INFO 6380 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-07 10:34:17.003  INFO 6380 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-07 10:34:17.006  INFO 6380 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-07 10:34:17.113  INFO 6380 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71ms. Found 0 Redis repository interfaces.
2020-10-07 10:34:17.902  INFO 6380 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$a59fce1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-07 10:34:18.564  INFO 6380 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-07 10:34:18.596  INFO 6380 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-07 10:34:18.597  INFO 6380 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-07 10:34:18.869  INFO 6380 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-07 10:34:18.869  INFO 6380 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 6077 ms
2020-10-07 10:34:19.804  INFO 6380 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-07 10:34:20.052  INFO 6380 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-07 10:34:21.409  INFO 6380 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-07 10:34:21.974  INFO 6380 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-07 10:34:23.498  INFO 6380 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-07 10:34:23.502  INFO 6380 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 12.575 seconds (JVM running for 16.399)
2020-10-07 10:34:44.718  INFO 6380 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-07 10:34:44.718  INFO 6380 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-07 10:34:44.727  INFO 6380 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-10-07 10:34:45.224  INFO 6380 --- [http-nio-7777-exec-2] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-07 10:34:45.226  INFO 6380 --- [http-nio-7777-exec-2] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-07 10:36:18.276 ERROR 6380 --- [http-nio-7777-exec-9] o.a.p.controller.ExceptionController     : org.alex.platform.exception.BusinessException: 超级管理员禁止删除
	at org.alex.platform.controller.UserController.removeUser(UserController.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-07 10:36:21.750 ERROR 6380 --- [http-nio-7777-exec-3] o.a.p.controller.ExceptionController     : org.alex.platform.exception.BusinessException: 超级管理员禁止修改
	at org.alex.platform.controller.UserController.userUpdate(UserController.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-07 10:36:23.577 ERROR 6380 --- [http-nio-7777-exec-4] o.a.p.controller.ExceptionController     : org.alex.platform.exception.BusinessException: 超级管理员禁止修改
	at org.alex.platform.controller.UserController.userUpdate(UserController.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-07 10:41:09.191 ERROR 6380 --- [http-nio-7777-exec-6] o.a.platform.controller.UserController   : 用户名已存在
2020-10-07 10:50:32.731  INFO 8424 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 8424 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-07 10:50:32.738  INFO 8424 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-07 10:50:33.658  INFO 8424 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-07 10:50:33.660  INFO 8424 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-07 10:50:33.728  INFO 8424 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 56ms. Found 0 Redis repository interfaces.
2020-10-07 10:50:33.990  INFO 8424 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$424ca24c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-07 10:50:34.249  INFO 8424 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-07 10:50:34.258  INFO 8424 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-07 10:50:34.259  INFO 8424 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-07 10:50:34.339  INFO 8424 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-07 10:50:34.339  INFO 8424 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1555 ms
2020-10-07 10:50:34.719  INFO 8424 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-07 10:50:34.833  INFO 8424 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-07 10:50:35.405  INFO 8424 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-07 10:50:35.706  INFO 8424 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-07 10:50:36.320  INFO 8424 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-07 10:50:36.322  INFO 8424 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.28 seconds (JVM running for 5.034)
2020-10-07 10:50:39.068  INFO 8424 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-07 10:50:39.068  INFO 8424 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-07 10:50:39.074  INFO 8424 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-07 10:50:39.185  INFO 8424 --- [http-nio-7777-exec-2] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-07 10:50:39.186  INFO 8424 --- [http-nio-7777-exec-2] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-07 10:50:45.584 ERROR 8424 --- [http-nio-7777-exec-10] o.a.p.controller.ExceptionController     : org.alex.platform.exception.BusinessException: 用户名已存在
	at org.alex.platform.service.impl.UserServiceImpl.modifyUser(UserServiceImpl.java:42)
	at org.alex.platform.controller.UserController.userUpdate(UserController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-07 10:50:56.586 ERROR 8424 --- [http-nio-7777-exec-1] o.a.platform.controller.UserController   : 用户名已存在
2020-10-09 09:06:24.356  INFO 5340 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 5340 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-09 09:06:24.372  INFO 5340 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 09:06:25.252  INFO 5340 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 09:06:25.255  INFO 5340 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 09:06:25.299  INFO 5340 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 Redis repository interfaces.
2020-10-09 09:06:25.554  INFO 5340 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$88757bf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 09:06:25.811  INFO 5340 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 09:06:25.819  INFO 5340 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 09:06:25.819  INFO 5340 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 09:06:25.952  INFO 5340 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 09:06:25.952  INFO 5340 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1530 ms
2020-10-09 09:06:26.347  INFO 5340 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 09:06:26.464  INFO 5340 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 09:06:27.103  INFO 5340 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 09:06:27.376  INFO 5340 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 09:06:28.190  INFO 5340 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-10-09 09:06:28.194  INFO 5340 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-10-09 09:06:28.202 ERROR 5340 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'platform.t_task' doesn't exist
### The error may exist in file [C:\Users\beix\IdeaProjects\platform\target\classes\mapper\TaskMapper.xml]
### The error may involve org.alex.platform.mapper.TaskMapper.selectTaskList-Inline
### The error occurred while setting parameters
### SQL: select `task`.`task_id`, `task`.`desc`, `cron`, `next_time`, `suite_type`,         `task`.`suite_id`, `suite_name`, `ref`.`email_address`,         `task`.`created_time`, `task`.`update_time`, `task`.`status`, `ref`.`id` as `ref_id`         from `t_task` as `task`         left join `t_interface_case_suite` as `suite` on `task`.`suite_id` = `suite`.`suite_id`         left join `t_task_email_ref` as `ref` on `task`.`task_id` = `ref`.`task_id`
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'platform.t_task' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'platform.t_task' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235) ~[spring-jdbc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72) ~[spring-jdbc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at com.sun.proxy.$Proxy70.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy71.selectTaskList(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy72.selectTaskList(Unknown Source) ~[na:na]
	at org.alex.platform.config.TaskConfig.configureTasks(TaskConfig.java:45) ~[classes/:na]
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:248) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:233) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:105) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:897) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162) ~[spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) ~[spring-context-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.alex.platform.PlatformApplication.main(PlatformApplication.java:15) [classes/:na]
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'platform.t_task' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_161]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_161]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.Util.getInstance(Util.java:408) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242) ~[mysql-connector-java-5.1.47.jar:5.1.47]
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167) ~[druid-1.1.10.jar:1.1.10]
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498) ~[druid-1.1.10.jar:1.1.10]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy123.execute(Unknown Source) ~[na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.4.jar:3.5.4]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143) ~[pagehelper-5.1.2.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy121.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.4.jar:3.5.4]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_161]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_161]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_161]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.4.jar:2.0.4]
	... 37 common frames omitted

2020-10-09 09:06:28.205  INFO 5340 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-09 09:06:28.208  INFO 5340 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-09 09:07:18.569  INFO 13948 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 13948 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-09 09:07:18.571  INFO 13948 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 09:07:19.184  INFO 13948 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 09:07:19.186  INFO 13948 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 09:07:19.221  INFO 13948 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-09 09:07:19.432  INFO 13948 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$ecf6a36e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 09:07:19.639  INFO 13948 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 09:07:19.647  INFO 13948 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 09:07:19.647  INFO 13948 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 09:07:19.717  INFO 13948 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 09:07:19.718  INFO 13948 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1106 ms
2020-10-09 09:07:20.013  INFO 13948 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 09:07:20.105  INFO 13948 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 09:07:20.537  INFO 13948 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 09:07:20.793  INFO 13948 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 09:07:21.204  INFO 13948 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 09:07:21.207  INFO 13948 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.976 seconds (JVM running for 3.496)
2020-10-09 09:07:29.203  INFO 13948 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 09:07:29.204  INFO 13948 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 09:07:29.210  INFO 13948 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-09 09:07:29.236 ERROR 13948 --- [http-nio-7777-exec-1] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-09 09:07:29.364 ERROR 13948 --- [http-nio-7777-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.alex.platform.exception.LoginException: 登录已经过期，请重新登录] with root cause

org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83) ~[druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]

2020-10-09 09:07:29.371 ERROR 13948 --- [http-nio-7777-exec-2] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-09 09:07:37.430  INFO 13948 --- [http-nio-7777-exec-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-09 09:07:37.431  INFO 13948 --- [http-nio-7777-exec-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-09 10:11:33.040  INFO 9440 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 9440 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-09 10:11:33.042  INFO 9440 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 10:11:33.709  INFO 9440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 10:11:33.712  INFO 9440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 10:11:33.755  INFO 9440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32ms. Found 0 Redis repository interfaces.
2020-10-09 10:11:33.984  INFO 9440 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$e7c9d937] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 10:11:34.207  INFO 9440 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 10:11:34.215  INFO 9440 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 10:11:34.215  INFO 9440 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 10:11:34.290  INFO 9440 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 10:11:34.290  INFO 9440 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1203 ms
2020-10-09 10:11:34.596  INFO 9440 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 10:11:34.699  INFO 9440 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 10:11:35.261  INFO 9440 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 10:11:35.491  INFO 9440 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 10:11:36.277  INFO 9440 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 10:11:36.280  INFO 9440 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.673 seconds (JVM running for 5.187)
2020-10-09 10:11:44.031  INFO 9440 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 10:11:44.031  INFO 9440 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 10:11:44.035  INFO 9440 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-09 10:11:44.184  INFO 9440 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-09 10:11:44.185  INFO 9440 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-09 18:12:19.524  INFO 14876 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 14876 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 18:12:19.536  INFO 14876 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 18:12:21.730  INFO 14876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 18:12:21.734  INFO 14876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 18:12:21.865  INFO 14876 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 91ms. Found 0 Redis repository interfaces.
2020-10-09 18:12:22.618  INFO 14876 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$dc10d6a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 18:12:23.369  INFO 14876 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 18:12:23.401  INFO 14876 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 18:12:23.402  INFO 14876 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 18:12:23.573  INFO 14876 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 18:12:23.575  INFO 14876 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3819 ms
2020-10-09 18:12:24.406  INFO 14876 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 18:12:24.654  INFO 14876 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 18:12:25.775  INFO 14876 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 18:12:26.344  INFO 14876 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 18:12:27.826  INFO 14876 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 18:12:27.833  INFO 14876 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 10.06 seconds (JVM running for 12.269)
2020-10-09 18:14:01.056  INFO 14876 --- [http-nio-7777-exec-2] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 18:14:01.063  INFO 14876 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 18:14:01.063  INFO 14876 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 18:14:01.070  INFO 14876 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2020-10-09 18:14:01.115  WARN 14876 --- [http-nio-7777-exec-2] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-09 18:14:01.460 ERROR 14876 --- [http-nio-7777-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.alex.platform.exception.LoginException: 登录已经过期，请重新登录] with root cause

org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83) ~[druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]

2020-10-09 18:14:01.467  WARN 14876 --- [http-nio-7777-exec-1] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-09 18:14:05.179  INFO 14876 --- [http-nio-7777-exec-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-09 18:14:05.183  INFO 14876 --- [http-nio-7777-exec-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-09 18:20:46.693  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-09 18:20:46.699  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='300', order=2}]}
2020-10-09 18:20:46.699  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-09 18:20:46.699  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:46.699  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:20:46.700  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-09 18:20:46.805  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1358, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:20:46 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e671a906-3c29-4c57-86dc-674cf31670f1","username":"123","isEnable":1}}', runTime=163, executer='超级管理员', status=0, createdTime=Fri Oct 09 18:20:46 CST 2020, errorMessage='null'}，自增执行日志编号=1358
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:20:46.990  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:20:46.991  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:20:46.991  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:20:46.991  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:20:46.992  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:20:46.992  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:20:46.992  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:20:47.002  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:20:47.002  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-09 18:20:47.002  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:47.002  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-09 18:20:47.002  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-09 18:20:47.030  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e671a906-3c29-4c57-86dc-674cf31670f1","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-09 18:20:47.030  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-09 18:20:47.031  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:20:47.031  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-09 18:20:47.031  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:20:47.031  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:20:47.039  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=300
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=300
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=300
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=300
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:20:47.040  WARN 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-09 18:20:47.040  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:20:47.054  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:20:47.054  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-09 18:20:53.268  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-09 18:20:53.274  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='as', order=2}]}
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-09 18:20:53.275  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:20:53.302  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1359, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:20:53 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"02ae5a61-b3b3-4736-aa9d-36bba864c77d","username":"123","isEnable":1}}', runTime=15, executer='超级管理员', status=0, createdTime=Fri Oct 09 18:20:53 CST 2020, errorMessage='null'}，自增执行日志编号=1359
2020-10-09 18:20:53.302  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:20:53.302  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:20:53.302  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:20:53.303  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:20:53.312  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:20:53.312  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"02ae5a61-b3b3-4736-aa9d-36bba864c77d","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:20:53.313  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:20:53.320  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:20:53.320  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=as
2020-10-09 18:20:53.320  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:20:53.320  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=as
2020-10-09 18:20:53.321  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=as
2020-10-09 18:20:53.321  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:20:53.321  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=as
2020-10-09 18:20:53.321  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:20:53.321  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:20:53.321  WARN 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-09 18:20:53.321  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:20:53.336  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:20:53.336  INFO 14876 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-09 18:21:06.860  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-09 18:21:06.865  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-09 18:21:06.865  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-09 18:21:06.865  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-09 18:21:06.866  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:21:06.892  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1360, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:06 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"7dbc9dee-79f9-4253-9acc-c26d6dafa967","username":"123","isEnable":1}}', runTime=15, executer='超级管理员', status=0, createdTime=Fri Oct 09 18:21:06 CST 2020, errorMessage='null'}，自增执行日志编号=1360
2020-10-09 18:21:06.892  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:06.892  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:06.892  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:06.892  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:06.892  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:06.893  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:06.900  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"7dbc9dee-79f9-4253-9acc-c26d6dafa967","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-09 18:21:06.901  WARN 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-09 18:21:06.901  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:06.910  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:06.922  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:06.922  INFO 14876 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-09 18:21:32.123  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=69---------------------------------
2020-10-09 18:21:32.129  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=69，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=69, url='user/list', method=0, desc='查看所有的用户列表', level=1, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:14:31 CST 2020, asserts=[AssertVO{assertId=54, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=55, assertName='username=123', type=0, expression='$..data.list[0].username', operator=0, exceptedResult='["123"]', order=1}]}
2020-10-09 18:21:32.129  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=69
2020-10-09 18:21:32.129  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.129  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-09 18:21:32.129  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-09 18:21:32.129  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-09 18:21:32.132  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-09 18:21:32.136  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:21:32.160  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1361, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:32 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5b239380-c7b5-48db-8a03-51763e5b13cd","username":"123","isEnable":1}}', runTime=15, executer='系统调度', status=0, createdTime=Fri Oct 09 18:21:32 CST 2020, errorMessage='null'}，自增执行日志编号=1361
2020-10-09 18:21:32.160  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:32.160  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:32.161  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5b239380-c7b5-48db-8a03-51763e5b13cd","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:32.168  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:32.175  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:32.175  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:32.176  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:32.190  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:32.190  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-09 18:21:32.196  WARN 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5b239380-c7b5-48db-8a03-51763e5b13cd","username":"123","isEnable":1}}
2020-10-09 18:21:32.197  WARN 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:32 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-09 18:21:32.197  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"5b239380-c7b5-48db-8a03-51763e5b13cd"}
2020-10-09 18:21:32.197  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"5b239380-c7b5-48db-8a03-51763e5b13cd"}
2020-10-09 18:21:32.197  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.197  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:32.197  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-09 18:21:32.197  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1362, caseId=69, caseUrl='http://localhost:7777/user/list', caseDesc='查看所有的用户列表', requestHeaders='{"Token":"5b239380-c7b5-48db-8a03-51763e5b13cd"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:32 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}', runTime=23, executer='超级管理员', status=0, createdTime=Fri Oct 09 18:21:32 CST 2020, errorMessage='null'}，自增执行日志编号=1362
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:32.228  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:32.229  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:32.229  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:32.229  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:32.237  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:32.237  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["123"]
2020-10-09 18:21:32.237  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:32.237  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["123"]
2020-10-09 18:21:32.237  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123"]
2020-10-09 18:21:32.240  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..data.list[0].username
2020-10-09 18:21:32.240  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123"]
2020-10-09 18:21:32.241  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:32.241  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-09 18:21:32.241  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:32.241  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:32.249  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:32.249  INFO 14876 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=69---------------------------------
2020-10-09 18:21:40.292  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=69---------------------------------
2020-10-09 18:21:40.297  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=69，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=69, url='user/list', method=0, desc='查看所有的用户列表', level=1, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:14:31 CST 2020, asserts=[AssertVO{assertId=54, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=55, assertName='username=123', type=0, expression='$..data.list[0].username', operator=0, exceptedResult='["123]', order=1}]}
2020-10-09 18:21:40.297  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=69
2020-10-09 18:21:40.297  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.297  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-09 18:21:40.297  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-09 18:21:40.297  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-09 18:21:40.299  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-09 18:21:40.304  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-09 18:21:40.305  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:21:40.335  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1363, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:39 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"797e3723-c963-4996-9893-c0d839ae00cc","username":"123","isEnable":1}}', runTime=22, executer='系统调度', status=0, createdTime=Fri Oct 09 18:21:40 CST 2020, errorMessage='null'}，自增执行日志编号=1363
2020-10-09 18:21:40.335  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:40.336  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:40.343  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"797e3723-c963-4996-9893-c0d839ae00cc","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:40.344  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:40.351  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:40.361  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:40.361  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-09 18:21:40.365  WARN 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"797e3723-c963-4996-9893-c0d839ae00cc","username":"123","isEnable":1}}
2020-10-09 18:21:40.365  WARN 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:39 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-09 18:21:40.366  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"797e3723-c963-4996-9893-c0d839ae00cc"}
2020-10-09 18:21:40.366  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"797e3723-c963-4996-9893-c0d839ae00cc"}
2020-10-09 18:21:40.366  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.366  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:40.366  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-09 18:21:40.366  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1364, caseId=69, caseUrl='http://localhost:7777/user/list', caseDesc='查看所有的用户列表', requestHeaders='{"Token":"797e3723-c963-4996-9893-c0d839ae00cc"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:39 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}', runTime=21, executer='超级管理员', status=0, createdTime=Fri Oct 09 18:21:40 CST 2020, errorMessage='null'}，自增执行日志编号=1364
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:40.394  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:40.395  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:40.395  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["123]
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["123]
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123]
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..data.list[0].username
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123]
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-09 18:21:40.400  WARN 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-09 18:21:40.400  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:40.412  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:40.412  INFO 14876 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=69---------------------------------
2020-10-09 18:21:52.631  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-09 18:21:52.637  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register11', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-09 18:21:52.637  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-09 18:21:52.637  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.637  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-09 18:21:52.637  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-09 18:21:52.637  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-09 18:21:52.639  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-09 18:21:52.644  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:21:52.676  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1365, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:52 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"2dd39838-cb99-49c7-bd38-dcdc53b03eb4","username":"123","isEnable":1}}', runTime=19, executer='系统调度', status=0, createdTime=Fri Oct 09 18:21:52 CST 2020, errorMessage='null'}，自增执行日志编号=1365
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:52.677  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"2dd39838-cb99-49c7-bd38-dcdc53b03eb4","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:52.684  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:52.690  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-09 18:21:52.691  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:52.700  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:52.700  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-09 18:21:52.705  WARN 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"2dd39838-cb99-49c7-bd38-dcdc53b03eb4","username":"123","isEnable":1}}
2020-10-09 18:21:52.705  WARN 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:52 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"2dd39838-cb99-49c7-bd38-dcdc53b03eb4"}
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"2dd39838-cb99-49c7-bd38-dcdc53b03eb4"}
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-09 18:21:52.705  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-09 18:21:52.705  WARN 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-09 18:21:52.709  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-09 18:21:52.710  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-09 18:21:52.710  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602238912710","password":"123","sex":"0"}
2020-10-09 18:21:52.710  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602238912710","password":"123","sex":"0"}
2020-10-09 18:21:52.710  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-09 18:21:52.746  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1366, caseId=70, caseUrl='http://localhost:7777/user/register11', caseDesc='用户注册', requestHeaders='{"Token":"2dd39838-cb99-49c7-bd38-dcdc53b03eb4"}', requestParams='', requestData='{"username":"1602238912710","password":"123","sex":"0"}', requestJson='null', responseCode=404, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers","Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Fri, 09 Oct 2020 10:21:52 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"timestamp":"2020-10-09 18:21:52","status":404,"error":"Not Found","message":"No message available","path":"/user/register11"}', runTime=28, executer='超级管理员', status=0, createdTime=Fri Oct 09 18:21:52 CST 2020, errorMessage='null'}，自增执行日志编号=1366
2020-10-09 18:21:52.746  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-09 18:21:52.746  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:52.746  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=404, 类型=code, 响应Body=404, 提取表达式=
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=404
2020-10-09 18:21:52.747  WARN 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-09 18:21:52.747  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:52.752  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-09 18:21:52.752  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-09 18:21:52.752  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-09 18:21:52.752  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-09 18:21:52.752  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-09 18:21:52.752  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[], 类型=json, 响应Body={"timestamp":"2020-10-09 18:21:52","status":404,"error":"Not Found","message":"No message available","path":"/user/register11"}, 提取表达式=$..code
2020-10-09 18:21:52.753  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-09 18:21:52.753  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-09 18:21:52.753  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[]
2020-10-09 18:21:52.753  WARN 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-09 18:21:52.753  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-09 18:21:52.765  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-09 18:21:52.765  INFO 14876 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-09 20:13:59.354  WARN 14876 --- [http-nio-7777-exec-1] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:36)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-09 20:43:42.040  INFO 8092 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 8092 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 20:43:42.042  INFO 8092 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 20:43:43.685  INFO 8092 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 20:43:43.687  INFO 8092 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 20:43:43.757  INFO 8092 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57ms. Found 0 Redis repository interfaces.
2020-10-09 20:43:44.113  INFO 8092 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$3d5f68ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 20:43:44.686  INFO 8092 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 20:43:44.701  INFO 8092 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 20:43:44.702  INFO 8092 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 20:43:44.883  INFO 8092 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 20:43:44.884  INFO 8092 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2722 ms
2020-10-09 20:43:45.517  INFO 8092 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 20:43:45.718  INFO 8092 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 20:43:46.784  INFO 8092 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 20:43:47.187  INFO 8092 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 20:43:48.455  INFO 8092 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 20:43:48.458  INFO 8092 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 7.381 seconds (JVM running for 9.121)
2020-10-09 20:44:04.543  INFO 8092 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 20:44:04.549  INFO 8092 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 20:44:04.549  INFO 8092 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 20:44:04.559  INFO 8092 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-10-09 20:57:31.360  INFO 15784 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 15784 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 20:57:31.363  INFO 15784 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 20:57:32.387  INFO 15784 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 20:57:32.389  INFO 15784 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 20:57:32.470  INFO 15784 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 68ms. Found 0 Redis repository interfaces.
2020-10-09 20:57:32.757  INFO 15784 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$963a1cdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 20:57:33.040  INFO 15784 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 20:57:33.049  INFO 15784 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 20:57:33.049  INFO 15784 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 20:57:33.137  INFO 15784 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 20:57:33.137  INFO 15784 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1717 ms
2020-10-09 20:57:33.552  INFO 15784 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 20:57:33.673  INFO 15784 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 20:57:34.306  INFO 15784 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 20:57:34.610  INFO 15784 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 20:57:35.242  INFO 15784 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 20:57:35.246  INFO 15784 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.48 seconds (JVM running for 5.286)
2020-10-09 20:57:43.539  INFO 15784 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 20:57:43.546  INFO 15784 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 20:57:43.546  INFO 15784 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 20:57:43.555  INFO 15784 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-10-09 20:59:17.535  INFO 11588 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 11588 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 20:59:17.537  INFO 11588 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 20:59:18.407  INFO 11588 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 20:59:18.409  INFO 11588 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 20:59:18.483  INFO 11588 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 61ms. Found 0 Redis repository interfaces.
2020-10-09 20:59:18.765  INFO 11588 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c631af70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 20:59:19.080  INFO 11588 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 20:59:19.091  INFO 11588 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 20:59:19.096  INFO 11588 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 20:59:19.219  INFO 11588 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 20:59:19.220  INFO 11588 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1630 ms
2020-10-09 20:59:19.664  INFO 11588 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 20:59:19.787  INFO 11588 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 20:59:20.411  INFO 11588 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 20:59:20.718  INFO 11588 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 20:59:21.339  INFO 11588 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 20:59:21.343  INFO 11588 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.315 seconds (JVM running for 5.147)
2020-10-09 20:59:26.012  INFO 11588 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 20:59:26.019  INFO 11588 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 20:59:26.019  INFO 11588 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 20:59:26.027  INFO 11588 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2020-10-09 21:00:35.737  INFO 5220 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 5220 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 21:00:35.742  INFO 5220 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 21:00:37.116  INFO 5220 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 21:00:37.119  INFO 5220 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 21:00:37.189  INFO 5220 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57ms. Found 0 Redis repository interfaces.
2020-10-09 21:00:37.545  INFO 5220 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$17833e1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 21:00:37.824  INFO 5220 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 21:00:37.833  INFO 5220 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 21:00:37.833  INFO 5220 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 21:00:37.924  INFO 5220 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 21:00:37.924  INFO 5220 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2088 ms
2020-10-09 21:00:38.632  INFO 5220 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 21:00:38.791  INFO 5220 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 21:00:39.395  INFO 5220 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 21:00:39.721  INFO 5220 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 21:00:40.379  INFO 5220 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 21:00:40.383  INFO 5220 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 5.217 seconds (JVM running for 6.135)
2020-10-09 21:00:43.360  INFO 5220 --- [http-nio-7777-exec-2] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 21:00:43.367  INFO 5220 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 21:00:43.367  INFO 5220 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 21:00:43.376  INFO 5220 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-10-09 21:20:42.841  INFO 2964 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 2964 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 21:20:42.844  INFO 2964 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 21:20:43.848  INFO 2964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 21:20:43.851  INFO 2964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 21:20:43.928  INFO 2964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 61ms. Found 0 Redis repository interfaces.
2020-10-09 21:20:44.213  INFO 2964 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$ece8a9f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 21:20:44.502  INFO 2964 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 21:20:44.512  INFO 2964 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 21:20:44.512  INFO 2964 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 21:20:44.641  INFO 2964 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 21:20:44.643  INFO 2964 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1719 ms
2020-10-09 21:20:45.128  INFO 2964 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 21:20:45.251  INFO 2964 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 21:20:45.874  INFO 2964 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 21:20:46.208  INFO 2964 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 21:20:46.851  INFO 2964 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 21:20:46.854  INFO 2964 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.505 seconds (JVM running for 5.293)
2020-10-09 21:20:50.233  INFO 2964 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 21:20:50.240  INFO 2964 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 21:20:50.240  INFO 2964 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 21:20:50.249  INFO 2964 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-10-09 21:21:12.083  INFO 6336 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 6336 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 21:21:12.086  INFO 6336 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 21:21:13.364  INFO 6336 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 21:21:13.373  INFO 6336 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 21:21:13.448  INFO 6336 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 58ms. Found 0 Redis repository interfaces.
2020-10-09 21:21:13.713  INFO 6336 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$424ca24c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 21:21:13.993  INFO 6336 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 21:21:14.012  INFO 6336 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 21:21:14.013  INFO 6336 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 21:21:14.109  INFO 6336 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 21:21:14.109  INFO 6336 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1963 ms
2020-10-09 21:21:14.514  INFO 6336 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 21:21:14.643  INFO 6336 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 21:21:15.271  INFO 6336 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 21:21:15.587  INFO 6336 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 21:21:16.197  INFO 6336 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 21:21:16.201  INFO 6336 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.69 seconds (JVM running for 5.574)
2020-10-09 21:21:20.481  INFO 6336 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 21:21:20.488  INFO 6336 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 21:21:20.488  INFO 6336 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 21:21:20.498  INFO 6336 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-10-09 21:36:03.535  INFO 11576 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 11576 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 21:36:03.538  INFO 11576 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 21:36:04.326  INFO 11576 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 21:36:04.328  INFO 11576 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 21:36:04.395  INFO 11576 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2020-10-09 21:36:04.656  INFO 11576 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$fe473efe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 21:36:04.924  INFO 11576 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 21:36:04.934  INFO 11576 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 21:36:04.935  INFO 11576 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 21:36:05.018  INFO 11576 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 21:36:05.018  INFO 11576 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1423 ms
2020-10-09 21:36:05.401  INFO 11576 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 21:36:05.520  INFO 11576 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 21:36:06.099  INFO 11576 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 21:36:06.382  INFO 11576 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 21:36:06.953  INFO 11576 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 21:36:06.956  INFO 11576 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.895 seconds (JVM running for 4.728)
2020-10-09 21:36:12.437  INFO 11576 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 21:36:12.443  INFO 11576 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 21:36:12.443  INFO 11576 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 21:36:12.452  INFO 11576 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2020-10-09 21:39:03.876  INFO 2188 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 2188 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-09 21:39:03.881  INFO 2188 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-09 21:39:04.801  INFO 2188 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-09 21:39:04.803  INFO 2188 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-09 21:39:04.871  INFO 2188 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2020-10-09 21:39:05.133  INFO 2188 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$1b7fa0e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-09 21:39:05.408  INFO 2188 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-09 21:39:05.416  INFO 2188 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-09 21:39:05.417  INFO 2188 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-09 21:39:05.495  INFO 2188 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-09 21:39:05.495  INFO 2188 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1545 ms
2020-10-09 21:39:05.894  INFO 2188 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-09 21:39:06.028  INFO 2188 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-09 21:39:06.599  INFO 2188 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-09 21:39:06.880  INFO 2188 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-09 21:39:07.458  INFO 2188 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-09 21:39:07.461  INFO 2188 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.008 seconds (JVM running for 4.724)
2020-10-09 21:39:13.957  INFO 2188 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-09 21:39:13.966  INFO 2188 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-09 21:39:13.966  INFO 2188 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-09 21:39:13.971  INFO 2188 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-10 11:41:15.653  INFO 18308 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 18308 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 11:41:15.676  INFO 18308 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 11:41:16.366  INFO 18308 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 11:41:16.368  INFO 18308 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 11:41:16.407  INFO 18308 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 11:41:16.628  INFO 18308 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$2e8c3680] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 11:41:16.852  INFO 18308 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 11:41:16.859  INFO 18308 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 11:41:16.859  INFO 18308 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 11:41:16.947  INFO 18308 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 11:41:16.948  INFO 18308 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1207 ms
2020-10-10 11:41:17.304  INFO 18308 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 11:41:17.419  INFO 18308 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 11:41:18.022  INFO 18308 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 11:41:18.272  INFO 18308 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 11:41:20.711  INFO 18308 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 11:41:20.713  INFO 18308 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 5.556 seconds (JVM running for 6.107)
2020-10-10 11:41:29.150  INFO 18308 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 11:41:29.151  INFO 18308 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 11:41:29.155  INFO 18308 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 11:41:29.330  INFO 18308 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 11:41:29.331  INFO 18308 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 11:45:34.993  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 11:45:34.996  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 11:45:34.997  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 11:45:35.045  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 11:45:35.095  INFO 18308 --- [http-nio-7777-exec-7] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [is my cookie] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 11:45:35.168  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1358, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 03:45:34 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5b3f735c-b885-4053-9591-6e5419c99217","username":"123","isEnable":1}}', runTime=58, executer='超级管理员', status=0, createdTime=Sat Oct 10 11:45:35 CST 2020, errorMessage='null'}，自增执行日志编号=1358
2020-10-10 11:45:35.168  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 11:45:35.168  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 11:45:35.168  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 11:45:35.168  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:35.168  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 11:45:35.169  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 11:45:35.169  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 11:45:35.169  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 11:45:35.169  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 11:45:35.169  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 11:45:35.170  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 11:45:35.170  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 11:45:35.178  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 11:45:35.178  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 11:45:35.178  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:35.178  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 11:45:35.178  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 11:45:35.190  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5b3f735c-b885-4053-9591-6e5419c99217","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 11:45:35.190  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 11:45:35.190  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 11:45:35.190  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 11:45:35.190  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 11:45:35.190  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 11:45:35.201  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 11:45:35.202  INFO 18308 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 11:45:44.388  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 11:45:44.391  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 11:45:44.391  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 11:45:44.391  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.391  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 11:45:44.391  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 11:45:44.391  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 11:45:44.393  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 11:45:44.395  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 11:45:44.396  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 11:45:44.414  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1359, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 03:45:44 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"bdd40a77-5d30-4c0b-9bdc-a4136bebe4e8","username":"123","isEnable":1}}', runTime=11, executer='系统调度', status=0, createdTime=Sat Oct 10 11:45:44 CST 2020, errorMessage='null'}，自增执行日志编号=1359
2020-10-10 11:45:44.414  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 11:45:44.414  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 11:45:44.414  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 11:45:44.414  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.414  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 11:45:44.415  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"bdd40a77-5d30-4c0b-9bdc-a4136bebe4e8","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 11:45:44.420  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 11:45:44.427  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 11:45:44.427  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 11:45:44.430  WARN 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"bdd40a77-5d30-4c0b-9bdc-a4136bebe4e8","username":"123","isEnable":1}}
2020-10-10 11:45:44.430  WARN 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 03:45:44 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"bdd40a77-5d30-4c0b-9bdc-a4136bebe4e8"}
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"bdd40a77-5d30-4c0b-9bdc-a4136bebe4e8"}
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 11:45:44.430  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 11:45:44.431  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 11:45:44.431  WARN 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 11:45:44.432  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 11:45:44.433  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 11:45:44.433  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602301544433","password":"123","sex":"0"}
2020-10-10 11:45:44.433  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602301544433","password":"123","sex":"0"}
2020-10-10 11:45:44.433  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1360, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"bdd40a77-5d30-4c0b-9bdc-a4136bebe4e8"}', requestParams='', requestData='{"username":"1602301544433","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 03:45:44 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=68, executer='超级管理员', status=0, createdTime=Sat Oct 10 11:45:44 CST 2020, errorMessage='null'}，自增执行日志编号=1360
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 11:45:44.510  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 11:45:44.511  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 11:45:44.511  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 11:45:44.517  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 11:45:44.517  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 11:45:44.517  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 11:45:44.517  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 11:45:44.517  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 11:45:44.518  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 11:45:44.518  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 11:45:44.518  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 11:45:44.518  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 11:45:44.518  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 11:45:44.518  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 11:45:44.523  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 11:45:44.523  INFO 18308 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 11:46:14.902 ERROR 18308 --- [http-nio-7777-exec-2] o.a.p.controller.ExceptionController     : org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'update_time' in 'field list'
### The error may exist in file [C:\Users\beix\IdeaProjects\platform\target\classes\mapper\InterfaceAssertMapper.xml]
### The error may involve org.alex.platform.mapper.InterfaceAssertMapper.updateAssert-Inline
### The error occurred while setting parameters
### SQL: update `t_interface_assert`          SET `assert_name` = ?,             `case_id` = ?,             `type` = ?,             `expression` = ?,             `operator` = ?,             `excepted_result` = ?,             `order` = ?,             `update_time` = ?          where `assert_id` = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'update_time' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'update_time' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy70.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy79.updateAssert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy80.updateAssert(Unknown Source)
	at org.alex.platform.service.impl.InterfaceAssertServiceImpl.modifyAssert(InterfaceAssertServiceImpl.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy82.modifyAssert(Unknown Source)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.modifyInterfaceCase(InterfaceCaseServiceImpl.java:190)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.modifyInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.modifyInterfaceCase(InterfaceCaseController.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'update_time' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3914)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2495)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1903)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1242)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy125.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy123.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 92 more

2020-10-10 11:47:26.092  INFO 10436 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 10436 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 11:47:26.093  INFO 10436 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 11:47:26.636  INFO 10436 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 11:47:26.637  INFO 10436 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 11:47:26.673  INFO 10436 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-10-10 11:47:26.887  INFO 10436 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$111d9c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 11:47:27.195  INFO 10436 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 11:47:27.202  INFO 10436 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 11:47:27.203  INFO 10436 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 11:47:27.323  INFO 10436 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 11:47:27.323  INFO 10436 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1200 ms
2020-10-10 11:47:27.611  INFO 10436 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 11:47:27.704  INFO 10436 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 11:47:28.232  INFO 10436 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 11:47:28.496  INFO 10436 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 11:47:29.033  INFO 10436 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 11:47:29.036  INFO 10436 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.377 seconds (JVM running for 4.049)
2020-10-10 11:47:46.300  INFO 10436 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 11:47:46.301  INFO 10436 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 11:47:46.307  INFO 10436 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-10 11:49:14.998  INFO 10436 --- [http-nio-7777-exec-7] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-10 12:34:57.844  INFO 5004 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 5004 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 12:34:57.849  INFO 5004 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 12:34:58.385  INFO 5004 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 12:34:58.387  INFO 5004 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 12:34:58.422  INFO 5004 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 12:34:58.630  INFO 5004 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$111d9c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 12:34:58.881  INFO 5004 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 12:34:58.888  INFO 5004 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 12:34:58.889  INFO 5004 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 12:34:58.956  INFO 5004 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 12:34:58.957  INFO 5004 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1068 ms
2020-10-10 12:34:59.254  INFO 5004 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 12:34:59.364  INFO 5004 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 12:34:59.892  INFO 5004 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 12:35:00.103  INFO 5004 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 12:35:00.734  INFO 5004 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 12:35:00.736  INFO 5004 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.375 seconds (JVM running for 4.021)
2020-10-10 12:35:11.886  INFO 5004 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 12:35:11.886  INFO 5004 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 12:35:11.890  INFO 5004 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 12:41:18.775  INFO 5004 --- [http-nio-7777-exec-7] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 12:41:18.776  INFO 5004 --- [http-nio-7777-exec-7] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 12:51:33.795  INFO 13240 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 13240 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 12:51:33.807  INFO 13240 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 12:51:34.420  INFO 13240 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 12:51:34.422  INFO 13240 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 12:51:34.458  INFO 13240 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 12:51:34.649  INFO 13240 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$e220b14b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 12:51:34.863  INFO 13240 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 12:51:34.876  INFO 13240 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 12:51:34.876  INFO 13240 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 12:51:34.948  INFO 13240 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 12:51:34.949  INFO 13240 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1086 ms
2020-10-10 12:51:35.212  INFO 13240 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 12:51:35.304  INFO 13240 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 12:51:35.783  INFO 13240 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 12:51:36.005  INFO 13240 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 12:51:36.590  INFO 13240 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 12:51:36.592  INFO 13240 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.225 seconds (JVM running for 3.886)
2020-10-10 12:51:42.032  INFO 13240 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 12:51:42.032  INFO 13240 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 12:51:42.037  INFO 13240 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 13:22:35.087  INFO 14560 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 14560 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 13:22:35.089  INFO 14560 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 13:22:35.631  INFO 14560 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 13:22:35.633  INFO 14560 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 13:22:35.665  INFO 14560 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 13:22:35.848  INFO 14560 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$4bb00729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 13:22:36.026  INFO 14560 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 13:22:36.031  INFO 14560 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 13:22:36.031  INFO 14560 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 13:22:36.096  INFO 14560 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 13:22:36.096  INFO 14560 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 972 ms
2020-10-10 13:22:36.355  INFO 14560 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 13:22:36.439  INFO 14560 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 13:22:36.883  INFO 14560 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 13:22:37.104  INFO 14560 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 13:22:37.627  INFO 14560 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 13:22:37.629  INFO 14560 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.859 seconds (JVM running for 3.438)
2020-10-10 13:22:52.700  INFO 14560 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 13:22:52.700  INFO 14560 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 13:22:52.704  INFO 14560 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 13:35:08.992  INFO 5204 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 5204 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 13:35:08.994  INFO 5204 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 13:35:09.596  INFO 5204 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 13:35:09.597  INFO 5204 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 13:35:09.634  INFO 5204 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-10 13:35:09.821  INFO 5204 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$cd40d002] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 13:35:09.999  INFO 5204 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 13:35:10.005  INFO 5204 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 13:35:10.005  INFO 5204 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 13:35:10.069  INFO 5204 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 13:35:10.069  INFO 5204 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1042 ms
2020-10-10 13:35:10.327  INFO 5204 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 13:35:10.411  INFO 5204 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 13:35:10.806  INFO 5204 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 13:35:11.016  INFO 5204 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 13:35:11.386  INFO 5204 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 13:35:11.389  INFO 5204 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.669 seconds (JVM running for 3.184)
2020-10-10 13:35:14.814  INFO 5204 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 13:35:14.814  INFO 5204 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 13:35:14.820  INFO 5204 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-10 13:37:03.446  INFO 11412 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 11412 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 13:37:03.449  INFO 11412 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 13:37:04.012  INFO 11412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 13:37:04.014  INFO 11412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 13:37:04.049  INFO 11412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-10-10 13:37:04.238  INFO 11412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$831437cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 13:37:04.416  INFO 11412 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 13:37:04.423  INFO 11412 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 13:37:04.423  INFO 11412 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 13:37:04.489  INFO 11412 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 13:37:04.489  INFO 11412 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 989 ms
2020-10-10 13:37:04.746  INFO 11412 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 13:37:04.831  INFO 11412 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 13:37:05.226  INFO 11412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 13:37:05.439  INFO 11412 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 13:37:05.817  INFO 11412 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 13:37:05.820  INFO 11412 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.656 seconds (JVM running for 3.102)
2020-10-10 13:37:08.039  INFO 11412 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 13:37:08.039  INFO 11412 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 13:37:08.043  INFO 11412 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2020-10-10 13:54:59.950  INFO 9060 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 9060 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 13:54:59.952  INFO 9060 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 13:55:00.470  INFO 9060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 13:55:00.472  INFO 9060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 13:55:00.505  INFO 9060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 13:55:00.691  INFO 9060 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$b85c935e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 13:55:00.873  INFO 9060 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 13:55:00.879  INFO 9060 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 13:55:00.879  INFO 9060 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 13:55:00.945  INFO 9060 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 13:55:00.945  INFO 9060 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 960 ms
2020-10-10 13:55:01.212  INFO 9060 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 13:55:01.299  INFO 9060 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 13:55:01.711  INFO 9060 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 13:55:01.932  INFO 9060 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 13:55:02.313  INFO 9060 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 13:55:02.316  INFO 9060 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.652 seconds (JVM running for 3.155)
2020-10-10 13:55:05.162  INFO 9060 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 13:55:05.162  INFO 9060 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 13:55:05.165  INFO 9060 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2020-10-10 13:55:59.999  INFO 7556 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 7556 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 13:56:00.001  INFO 7556 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 13:56:00.522  INFO 7556 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 13:56:00.523  INFO 7556 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 13:56:00.557  INFO 7556 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 13:56:00.741  INFO 7556 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c900e314] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 13:56:00.920  INFO 7556 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 13:56:00.927  INFO 7556 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 13:56:00.927  INFO 7556 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 13:56:00.991  INFO 7556 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 13:56:00.991  INFO 7556 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 954 ms
2020-10-10 13:56:01.250  INFO 7556 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 13:56:01.333  INFO 7556 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 13:56:01.787  INFO 7556 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 13:56:02.007  INFO 7556 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 13:56:02.374  INFO 7556 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 13:56:02.376  INFO 7556 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.647 seconds (JVM running for 3.097)
2020-10-10 13:56:04.998  INFO 7556 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 13:56:04.998  INFO 7556 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 13:56:05.002  INFO 7556 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 13:56:47.872  INFO 7824 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 7824 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 13:56:47.874  INFO 7824 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 13:56:48.429  INFO 7824 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 13:56:48.430  INFO 7824 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 13:56:48.465  INFO 7824 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 13:56:48.654  INFO 7824 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$cda8a947] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 13:56:48.837  INFO 7824 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 13:56:48.843  INFO 7824 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 13:56:48.843  INFO 7824 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 13:56:48.908  INFO 7824 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 13:56:48.908  INFO 7824 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1003 ms
2020-10-10 13:56:49.166  INFO 7824 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 13:56:49.253  INFO 7824 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 13:56:49.658  INFO 7824 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 13:56:49.877  INFO 7824 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 13:56:50.266  INFO 7824 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 13:56:50.270  INFO 7824 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.672 seconds (JVM running for 3.118)
2020-10-10 13:56:51.665  INFO 7824 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 13:56:51.666  INFO 7824 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 13:56:51.670  INFO 7824 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 14:02:16.511  INFO 17736 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 17736 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 14:02:16.513  INFO 17736 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 14:02:17.032  INFO 17736 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 14:02:17.033  INFO 17736 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 14:02:17.067  INFO 17736 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 14:02:17.256  INFO 17736 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c089585d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 14:02:17.434  INFO 17736 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 14:02:17.440  INFO 17736 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 14:02:17.440  INFO 17736 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 14:02:17.505  INFO 17736 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 14:02:17.505  INFO 17736 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 962 ms
2020-10-10 14:02:17.761  INFO 17736 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 14:02:17.848  INFO 17736 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 14:02:18.248  INFO 17736 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 14:02:18.467  INFO 17736 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 14:02:18.835  INFO 17736 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 14:02:18.838  INFO 17736 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.606 seconds (JVM running for 3.075)
2020-10-10 14:02:24.861  INFO 17736 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 14:02:24.862  INFO 17736 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 14:02:24.868  INFO 17736 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-10 14:05:13.421  INFO 15740 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 15740 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 14:05:13.423  INFO 15740 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 14:05:13.918  INFO 15740 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 14:05:13.920  INFO 15740 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 14:05:13.953  INFO 15740 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 14:05:14.134  INFO 15740 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$40dd2f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 14:05:14.310  INFO 15740 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 14:05:14.316  INFO 15740 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 14:05:14.317  INFO 15740 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 14:05:14.379  INFO 15740 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 14:05:14.379  INFO 15740 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 924 ms
2020-10-10 14:05:14.631  INFO 15740 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 14:05:14.714  INFO 15740 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 14:05:15.105  INFO 15740 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 14:05:15.313  INFO 15740 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 14:05:15.682  INFO 15740 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 14:05:15.684  INFO 15740 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.528 seconds (JVM running for 2.96)
2020-10-10 14:05:19.108  INFO 15740 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 14:05:19.108  INFO 15740 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 14:05:19.112  INFO 15740 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 14:16:56.269  INFO 15740 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 14:16:56.270  INFO 15740 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 14:16:56.524  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:56.528  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:56.529  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:56.529  WARN 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:56.538  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:56.539  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:56.540  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310616539","password":"123","sex":"0"}
2020-10-10 14:16:56.540  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310616539","password":"123","sex":"0"}
2020-10-10 14:16:56.624  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:56.801  INFO 15740 --- [http-nio-7777-exec-2] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [is my cookie] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 14:16:56.944  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1367, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310616539","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=288, executer='', status=0, createdTime=Sat Oct 10 14:16:56 CST 2020, errorMessage='null'}，自增执行日志编号=1367
2020-10-10 14:16:56.944  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:56.944  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:56.944  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:56.944  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.944  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:56.945  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:56.946  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:56.946  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:56.946  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:56.946  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:56.946  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:56.946  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:56.956  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:56.957  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:56.957  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.957  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:56.957  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:56.969  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:56.969  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:56.969  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:56.969  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:56.969  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:56.969  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:56.978  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:56.978  INFO 15740 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:56.986  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:56.991  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:56.991  WARN 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:56.993  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:56.993  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:56.993  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310616993","password":"123","sex":"0"}
2020-10-10 14:16:56.993  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310616993","password":"123","sex":"0"}
2020-10-10 14:16:56.993  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1368, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310616993","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=15, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1368
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.017  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.027  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.034  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.034  INFO 15740 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.042  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.046  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.046  WARN 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.048  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.048  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.048  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617048","password":"123","sex":"0"}
2020-10-10 14:16:57.048  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617048","password":"123","sex":"0"}
2020-10-10 14:16:57.048  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.069  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1369, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617048","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=15, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1369
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.070  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.077  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.078  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.078  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.087  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.087  INFO 15740 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.093  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.098  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.098  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.098  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.098  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.098  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.099  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.099  WARN 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.100  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.100  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.100  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617100","password":"123","sex":"0"}
2020-10-10 14:16:57.100  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617100","password":"123","sex":"0"}
2020-10-10 14:16:57.100  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1370, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617100","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:56 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=17, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1370
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.123  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.128  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.129  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.137  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.137  INFO 15740 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.142  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.146  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.146  WARN 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.147  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.147  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.147  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617147","password":"123","sex":"0"}
2020-10-10 14:16:57.148  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617147","password":"123","sex":"0"}
2020-10-10 14:16:57.148  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1371, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617147","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=16, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1371
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.171  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.176  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.182  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.182  INFO 15740 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.186  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.190  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.191  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.191  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.191  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.191  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.191  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.191  WARN 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.193  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.193  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.193  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617193","password":"123","sex":"0"}
2020-10-10 14:16:57.193  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617193","password":"123","sex":"0"}
2020-10-10 14:16:57.193  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1372, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617193","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=16, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1372
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.216  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.221  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.228  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.228  INFO 15740 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.343  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.346  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.347  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.347  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.347  WARN 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.348  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.348  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.348  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617348","password":"123","sex":"0"}
2020-10-10 14:16:57.348  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617348","password":"123","sex":"0"}
2020-10-10 14:16:57.348  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1373, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617348","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=17, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1373
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.370  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.371  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.371  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.371  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.371  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.371  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.371  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.376  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.377  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.383  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.383  INFO 15740 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.534  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.538  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.539  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.539  WARN 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.540  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.540  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.540  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617540","password":"123","sex":"0"}
2020-10-10 14:16:57.540  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617540","password":"123","sex":"0"}
2020-10-10 14:16:57.540  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1374, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617540","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=20, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1374
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.565  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.571  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.578  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.578  INFO 15740 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:16:57.717  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 14:16:57.721  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 14:16:57.721  WARN 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 14:16:57.723  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 14:16:57.723  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 14:16:57.723  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602310617723","password":"123","sex":"0"}
2020-10-10 14:16:57.723  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602310617723","password":"123","sex":"0"}
2020-10-10 14:16:57.723  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1375, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602310617723","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 06:16:57 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=19, executer='', status=0, createdTime=Sat Oct 10 14:16:57 CST 2020, errorMessage='null'}，自增执行日志编号=1375
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.747  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.752  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 14:16:57.753  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 14:16:57.760  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 14:16:57.760  INFO 15740 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 14:17:44.364  INFO 20212 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 20212 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 14:17:44.366  INFO 20212 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 14:17:44.958  INFO 20212 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 14:17:44.959  INFO 20212 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 14:17:44.994  INFO 20212 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 14:17:45.186  INFO 20212 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$dcaf4735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 14:17:45.417  INFO 20212 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 14:17:45.425  INFO 20212 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 14:17:45.425  INFO 20212 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 14:17:45.505  INFO 20212 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 14:17:45.505  INFO 20212 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1074 ms
2020-10-10 14:17:45.803  INFO 20212 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 14:17:45.902  INFO 20212 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 14:17:46.431  INFO 20212 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 14:17:46.657  INFO 20212 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 14:17:47.238  INFO 20212 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 14:17:47.241  INFO 20212 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.297 seconds (JVM running for 3.925)
2020-10-10 14:17:50.610  INFO 20212 --- [http-nio-7777-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 14:17:50.610  INFO 20212 --- [http-nio-7777-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 14:17:50.615  INFO 20212 --- [http-nio-7777-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-10 14:21:53.343  INFO 17612 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 17612 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 14:21:53.346  INFO 17612 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 14:21:53.933  INFO 17612 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 14:21:53.935  INFO 17612 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 14:21:53.969  INFO 17612 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 Redis repository interfaces.
2020-10-10 14:21:54.193  INFO 17612 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$2eb90ab1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 14:21:54.389  INFO 17612 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 14:21:54.395  INFO 17612 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 14:21:54.396  INFO 17612 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 14:21:54.460  INFO 17612 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 14:21:54.460  INFO 17612 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1070 ms
2020-10-10 14:21:54.730  INFO 17612 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 14:21:54.830  INFO 17612 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 14:21:55.235  INFO 17612 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 14:21:55.452  INFO 17612 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 14:21:55.826  INFO 17612 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 14:21:55.828  INFO 17612 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.798 seconds (JVM running for 3.29)
2020-10-10 14:22:55.211  INFO 17612 --- [http-nio-7777-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 14:22:55.212  INFO 17612 --- [http-nio-7777-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 14:22:55.219  INFO 17612 --- [http-nio-7777-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2020-10-10 14:28:54.870  INFO 964 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 964 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 14:28:54.872  INFO 964 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 14:28:55.403  INFO 964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 14:28:55.405  INFO 964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 14:28:55.441  INFO 964 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2020-10-10 14:28:55.629  INFO 964 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c19e815d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 14:28:55.811  INFO 964 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 14:28:55.817  INFO 964 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 14:28:55.817  INFO 964 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 14:28:55.881  INFO 964 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 14:28:55.881  INFO 964 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 976 ms
2020-10-10 14:28:56.141  INFO 964 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 14:28:56.225  INFO 964 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 14:28:56.629  INFO 964 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 14:28:56.837  INFO 964 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 14:28:57.208  INFO 964 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 14:28:57.210  INFO 964 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.622 seconds (JVM running for 3.068)
2020-10-10 14:29:28.573  INFO 964 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 14:29:28.573  INFO 964 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 14:29:28.578  INFO 964 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 15:54:16.902  INFO 19460 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 19460 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 15:54:16.928  INFO 19460 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 15:54:17.653  INFO 19460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 15:54:17.654  INFO 19460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 15:54:17.688  INFO 19460 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 15:54:17.874  INFO 19460 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$faf3bae5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 15:54:18.051  INFO 19460 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 15:54:18.058  INFO 19460 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 15:54:18.058  INFO 19460 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 15:54:18.123  INFO 19460 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 15:54:18.123  INFO 19460 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1154 ms
2020-10-10 15:54:18.389  INFO 19460 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 15:54:18.473  INFO 19460 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 15:54:18.920  INFO 19460 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 15:54:19.131  INFO 19460 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 15:54:19.501  INFO 19460 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-10-10 15:54:19.505  INFO 19460 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-10-10 15:54:19.509 ERROR 19460 --- [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 7777 was already in use.

Action:

Identify and stop the process that's listening on port 7777 or configure this application to listen on another port.

2020-10-10 15:54:19.511  INFO 19460 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-10 15:54:19.514  INFO 19460 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-10 15:55:24.127  INFO 18816 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 18816 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 15:55:24.129  INFO 18816 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 15:55:24.651  INFO 18816 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 15:55:24.653  INFO 18816 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 15:55:24.693  INFO 18816 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 Redis repository interfaces.
2020-10-10 15:55:24.885  INFO 18816 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$ecf6a36e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 15:55:25.058  INFO 18816 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 15:55:25.064  INFO 18816 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 15:55:25.065  INFO 18816 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 15:55:25.128  INFO 18816 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 15:55:25.128  INFO 18816 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 970 ms
2020-10-10 15:55:25.384  INFO 18816 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 15:55:25.469  INFO 18816 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 15:55:25.876  INFO 18816 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 15:55:26.087  INFO 18816 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 15:55:26.446  INFO 18816 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 15:55:26.449  INFO 18816 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.594 seconds (JVM running for 3.078)
2020-10-10 15:55:57.931  INFO 18816 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 15:55:57.931  INFO 18816 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 15:55:57.936  INFO 18816 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-10 15:55:58.107  INFO 18816 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 15:55:58.108  INFO 18816 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 16:08:24.697  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=69---------------------------------
2020-10-10 16:08:24.702  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=69，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=69, url='user/list', method=0, desc='查看所有的用户列表', level=1, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:14:31 CST 2020, asserts=[AssertVO{assertId=54, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=55, assertName='username=123', type=0, expression='$..data.list[0].username', operator=0, exceptedResult='["123"]', order=1}]}
2020-10-10 16:08:24.703  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=69
2020-10-10 16:08:24.703  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:24.703  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:08:24.703  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:08:24.703  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:08:24.706  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:08:24.710  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:08:24.869  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:08:24.941  INFO 18816 --- [http-nio-7777-exec-5] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [is my cookie] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 16:08:24.975  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1376, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:08:24 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"bfd7180b-07af-4320-b3eb-7baa215a9d60","username":"123","isEnable":1}}', runTime=80, executer='系统调度', status=0, createdTime=Sat Oct 10 16:08:24 CST 2020, errorMessage='null'}，自增执行日志编号=1376
2020-10-10 16:08:24.975  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:08:24.975  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:08:24.976  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:08:24.977  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:08:24.977  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:08:24.987  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:08:24.987  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:08:24.987  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:24.987  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:08:24.987  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:08:25.000  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"bfd7180b-07af-4320-b3eb-7baa215a9d60","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:08:25.000  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:08:25.000  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:08:25.000  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:08:25.000  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:08:25.000  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:08:25.008  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:08:25.009  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:08:25.009  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:08:25.009  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:08:25.009  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:08:25.018  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:08:25.018  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:08:25.022  WARN 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"bfd7180b-07af-4320-b3eb-7baa215a9d60","username":"123","isEnable":1}}
2020-10-10 16:08:25.022  WARN 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:08:24 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:08:25.022  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"bfd7180b-07af-4320-b3eb-7baa215a9d60"}
2020-10-10 16:08:25.022  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"bfd7180b-07af-4320-b3eb-7baa215a9d60"}
2020-10-10 16:08:25.022  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:25.022  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:08:25.022  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:08:25.022  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:08:25.049  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1377, caseId=69, caseUrl='http://localhost:7777/user/list', caseDesc='查看所有的用户列表', requestHeaders='{"Token":"bfd7180b-07af-4320-b3eb-7baa215a9d60"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:08:24 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":10,"startRow":1,"endRow":10,"total":11,"pages":2,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null},{"userId":84,"username":"1234","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-09 20:26:05","updateTime":null,"realName":"1","roleId":null},{"userId":85,"username":"1602310616539","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":86,"username":"1602310616993","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":87,"username":"1602310617048","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":88,"username":"1602310617100","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":89,"username":"1602310617147","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":90,"username":"1602310617193","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":91,"username":"1602310617348","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":92,"username":"1602310617540","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:58","updateTime":null,"realName":null,"roleId":null}],"prePage":0,"nextPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2],"navigateFirstPage":1,"navigateLastPage":2,"lastPage":2,"firstPage":1}}', runTime=16, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:08:25 CST 2020, errorMessage='null'}，自增执行日志编号=1377
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:08:25.050  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:08:25.056  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:08:25.056  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["123"]
2020-10-10 16:08:25.056  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:08:25.056  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["123"]
2020-10-10 16:08:25.056  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123"]
2020-10-10 16:08:25.058  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":10,"startRow":1,"endRow":10,"total":11,"pages":2,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null},{"userId":84,"username":"1234","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-09 20:26:05","updateTime":null,"realName":"1","roleId":null},{"userId":85,"username":"1602310616539","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":86,"username":"1602310616993","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":87,"username":"1602310617048","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":88,"username":"1602310617100","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":89,"username":"1602310617147","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":90,"username":"1602310617193","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":91,"username":"1602310617348","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":92,"username":"1602310617540","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:58","updateTime":null,"realName":null,"roleId":null}],"prePage":0,"nextPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2],"navigateFirstPage":1,"navigateLastPage":2,"lastPage":2,"firstPage":1}}, 提取表达式=$..data.list[0].username
2020-10-10 16:08:25.058  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123"]
2020-10-10 16:08:25.058  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:08:25.058  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-10 16:08:25.058  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:08:25.058  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:08:25.067  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:08:25.067  INFO 18816 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=69---------------------------------
2020-10-10 16:09:50.341  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:09:50.345  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:09:50.345  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:09:50.345  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:09:50.345  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:09:50.345  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:09:50.345  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:09:50.346  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:09:50.346  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:09:50.346  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:09:50.346  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:09:50.346  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:09:50.346  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:09:50.346  WARN 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:09:50.349  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:09:50.349  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:09:50.349  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317390349","password":"123","sex":"0"}
2020-10-10 16:09:50.350  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317390349","password":"123","sex":"0"}
2020-10-10 16:09:50.350  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1378, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317390349","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:09:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=65, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:09:50 CST 2020, errorMessage='null'}，自增执行日志编号=1378
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:09:50.421  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:09:50.422  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:09:50.422  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:09:50.422  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:09:50.422  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:09:50.422  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:09:50.422  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:09:50.428  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:09:50.436  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:09:50.436  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:10:03.066  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:10:03.072  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:10:03.072  WARN 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:10:03.074  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:10:03.074  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:10:03.074  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317403074","password":"123","sex":"0"}
2020-10-10 16:10:03.074  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317403074","password":"123","sex":"0"}
2020-10-10 16:10:03.074  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:10:03.097  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1379, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317403074","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:10:03 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=17, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:10:03 CST 2020, errorMessage='null'}，自增执行日志编号=1379
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.098  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.105  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.113  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:10:03.113  INFO 18816 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:10:03.242  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:10:03.246  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:10:03.246  WARN 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:10:03.248  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:10:03.248  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:10:03.248  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317403248","password":"123","sex":"0"}
2020-10-10 16:10:03.248  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317403248","password":"123","sex":"0"}
2020-10-10 16:10:03.249  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1380, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317403248","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:10:03 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=17, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:10:03 CST 2020, errorMessage='null'}，自增执行日志编号=1380
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.272  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.278  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.279  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.286  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:10:03.287  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:10:03.426  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:10:03.430  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:10:03.430  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:10:03.430  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.430  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.430  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:10:03.430  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.431  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.431  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:10:03.431  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.431  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:10:03.431  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:10:03.431  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:10:03.431  WARN 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:10:03.432  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:10:03.432  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:10:03.432  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317403432","password":"123","sex":"0"}
2020-10-10 16:10:03.432  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317403432","password":"123","sex":"0"}
2020-10-10 16:10:03.432  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1381, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317403432","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:10:03 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=17, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:10:03 CST 2020, errorMessage='null'}，自增执行日志编号=1381
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:10:03.455  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:10:03.456  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:10:03.456  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:10:03.456  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.456  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:10:03.456  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.456  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.461  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:10:03.462  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.462  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.469  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:10:03.469  INFO 18816 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:10:03.610  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:10:03.614  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:10:03.614  WARN 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:10:03.616  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:10:03.616  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:10:03.616  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317403616","password":"123","sex":"0"}
2020-10-10 16:10:03.616  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317403616","password":"123","sex":"0"}
2020-10-10 16:10:03.616  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1382, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317403616","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:10:03 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=16, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:10:03 CST 2020, errorMessage='null'}，自增执行日志编号=1382
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.638  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:10:03.644  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.645  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:10:03.645  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.645  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.652  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:10:03.652  INFO 18816 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:10:03.770  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:10:03.774  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:10:03.774  WARN 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:10:03.776  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:10:03.776  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:10:03.776  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317403776","password":"123","sex":"0"}
2020-10-10 16:10:03.776  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317403776","password":"123","sex":"0"}
2020-10-10 16:10:03.776  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1383, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317403776","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:10:03 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=17, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:10:03 CST 2020, errorMessage='null'}，自增执行日志编号=1383
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.800  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.807  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.814  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:10:03.815  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:10:03.954  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.957  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:10:03.958  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:10:03.958  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.958  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:10:03.958  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:10:03.958  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:10:03.958  WARN 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:10:03.959  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:10:03.959  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:10:03.959  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602317403959","password":"123","sex":"0"}
2020-10-10 16:10:03.959  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602317403959","password":"123","sex":"0"}
2020-10-10 16:10:03.959  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1384, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602317403959","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:10:03 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=21, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:10:03 CST 2020, errorMessage='null'}，自增执行日志编号=1384
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:10:03.987  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.988  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:10:03.993  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:10:03.994  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:10:03.994  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:10:04.000  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:10:04.000  INFO 18816 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:27:48.181  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=76---------------------------------
2020-10-10 16:27:48.185  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=76，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=76, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='超级管理员', createdTime=Sat Oct 10 14:30:24 CST 2020, asserts=[AssertVO{assertId=70, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 16:27:48.186  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=76
2020-10-10 16:27:48.186  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.186  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:27:48.186  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:27:48.186  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:27:48.187  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:27:48.189  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1385, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:27:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"26ec9424-4106-4dde-b204-232a0b76b8db","username":"123","isEnable":1}}', runTime=13, executer='系统调度', status=0, createdTime=Sat Oct 10 16:27:48 CST 2020, errorMessage='null'}，自增执行日志编号=1385
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.209  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"26ec9424-4106-4dde-b204-232a0b76b8db","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.215  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.220  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.224  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:27:48.225  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:27:48.227  WARN 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"26ec9424-4106-4dde-b204-232a0b76b8db","username":"123","isEnable":1}}
2020-10-10 16:27:48.227  WARN 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:27:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:27:48.227  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"26ec9424-4106-4dde-b204-232a0b76b8db"}
2020-10-10 16:27:48.227  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"26ec9424-4106-4dde-b204-232a0b76b8db"}
2020-10-10 16:27:48.227  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.227  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 16:27:48.227  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 16:27:48.227  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:27:48.248  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1386, caseId=76, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"26ec9424-4106-4dde-b204-232a0b76b8db"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:27:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=15, executer='', status=0, createdTime=Sat Oct 10 16:27:48 CST 2020, errorMessage='null'}，自增执行日志编号=1386
2020-10-10 16:27:48.248  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 16:27:48.249  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:27:48.249  WARN 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 16:27:48.250  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 16:27:48.251  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:27:48.251  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.251  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:27:48.251  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:27:48.252  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 16:27:48.258  INFO 18816 --- [http-nio-7777-exec-7] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.366  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.372  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:27:48.372  INFO 18816 --- [http-nio-7777-exec-7] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=76---------------------------------
2020-10-10 16:27:48.947  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=76---------------------------------
2020-10-10 16:27:48.950  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=76，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=76, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='超级管理员', createdTime=Sat Oct 10 14:30:24 CST 2020, asserts=[AssertVO{assertId=70, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 16:27:48.950  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=76
2020-10-10 16:27:48.950  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.950  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:27:48.950  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:27:48.950  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:27:48.951  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:27:48.953  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:27:48.953  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:27:48.953  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.953  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:27:48.954  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1387, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:27:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"854ac8ce-ec9b-45dc-8ed8-b9a50a2eef4e","username":"123","isEnable":1}}', runTime=16, executer='系统调度', status=0, createdTime=Sat Oct 10 16:27:48 CST 2020, errorMessage='null'}，自增执行日志编号=1387
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.975  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"854ac8ce-ec9b-45dc-8ed8-b9a50a2eef4e","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.980  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:48.984  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:48.989  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:27:48.989  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:27:48.992  WARN 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"854ac8ce-ec9b-45dc-8ed8-b9a50a2eef4e","username":"123","isEnable":1}}
2020-10-10 16:27:48.992  WARN 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:27:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:27:48.992  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"854ac8ce-ec9b-45dc-8ed8-b9a50a2eef4e"}
2020-10-10 16:27:48.992  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"854ac8ce-ec9b-45dc-8ed8-b9a50a2eef4e"}
2020-10-10 16:27:48.992  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:48.992  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 16:27:48.992  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 16:27:48.992  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:27:49.011  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1388, caseId=76, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"854ac8ce-ec9b-45dc-8ed8-b9a50a2eef4e"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:27:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=14, executer='', status=0, createdTime=Sat Oct 10 16:27:49 CST 2020, errorMessage='null'}，自增执行日志编号=1388
2020-10-10 16:27:49.011  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:27:49.011  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:27:49.011  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 16:27:49.011  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 16:27:49.011  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 16:27:49.012  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:27:49.012  WARN 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 16:27:49.013  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 16:27:49.014  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:27:49.014  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:27:49.014  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:27:49.014  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:27:49.014  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 16:27:49.015  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 16:27:49.015  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 16:27:49.015  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 16:27:49.015  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:27:49.015  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 16:27:49.016  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:27:49.016  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:27:49.021  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:27:49.021  INFO 18816 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=76---------------------------------
2020-10-10 16:28:02.662  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=73---------------------------------
2020-10-10 16:28:02.665  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=73，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=73, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='1', createdTime=Thu Oct 01 21:56:05 CST 2020, asserts=[AssertVO{assertId=65, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 16:28:02.665  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=73
2020-10-10 16:28:02.665  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.665  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:28:02.665  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:28:02.665  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:28:02.666  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:28:02.668  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1389, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:28:02 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e500d418-d7e6-4a04-9495-bcb6da81c538","username":"123","isEnable":1}}', runTime=16, executer='系统调度', status=0, createdTime=Sat Oct 10 16:28:02 CST 2020, errorMessage='null'}，自增执行日志编号=1389
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:28:02.690  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:28:02.696  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:28:02.696  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:28:02.696  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.696  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:28:02.696  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:28:02.697  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e500d418-d7e6-4a04-9495-bcb6da81c538","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:28:02.697  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:28:02.697  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:28:02.697  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:28:02.697  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:28:02.697  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:28:02.702  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:28:02.702  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:28:02.702  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.702  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:28:02.703  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:28:02.713  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:28:02.713  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:28:02.716  WARN 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e500d418-d7e6-4a04-9495-bcb6da81c538","username":"123","isEnable":1}}
2020-10-10 16:28:02.716  WARN 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:28:02 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:28:02.716  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"e500d418-d7e6-4a04-9495-bcb6da81c538"}
2020-10-10 16:28:02.716  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"e500d418-d7e6-4a04-9495-bcb6da81c538"}
2020-10-10 16:28:02.716  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.716  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 16:28:02.716  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 16:28:02.716  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1390, caseId=73, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"e500d418-d7e6-4a04-9495-bcb6da81c538"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:28:02 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=15, executer='', status=0, createdTime=Sat Oct 10 16:28:02 CST 2020, errorMessage='null'}，自增执行日志编号=1390
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 16:28:02.737  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:28:02.737  WARN 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 16:28:02.738  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 16:28:02.739  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:28:02.739  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:28:02.739  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:28:02.740  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:28:02.747  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:28:02.747  INFO 18816 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=73---------------------------------
2020-10-10 16:29:24.081  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=73---------------------------------
2020-10-10 16:29:24.085  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=73，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=73, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='1', createdTime=Thu Oct 01 21:56:05 CST 2020, asserts=[AssertVO{assertId=65, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 16:29:24.085  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=73
2020-10-10 16:29:24.085  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.085  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:29:24.085  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:29:24.085  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:29:24.087  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:29:24.090  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:29:24.090  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:29:24.090  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:29:24.091  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:29:24.116  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1391, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:29:24 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"024904ce-24d2-498f-8ec1-b0c5bdaf3615","username":"123","isEnable":1}}', runTime=17, executer='系统调度', status=0, createdTime=Sat Oct 10 16:29:24 CST 2020, errorMessage='null'}，自增执行日志编号=1391
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:29:24.117  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:29:24.122  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:29:24.122  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:29:24.122  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.122  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:29:24.122  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:29:24.123  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"024904ce-24d2-498f-8ec1-b0c5bdaf3615","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:29:24.123  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:29:24.123  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:29:24.123  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:29:24.123  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:29:24.123  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:29:24.128  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:29:24.135  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:29:24.135  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:29:24.138  WARN 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"024904ce-24d2-498f-8ec1-b0c5bdaf3615","username":"123","isEnable":1}}
2020-10-10 16:29:24.138  WARN 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:29:24 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:29:24.138  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"024904ce-24d2-498f-8ec1-b0c5bdaf3615"}
2020-10-10 16:29:24.138  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"024904ce-24d2-498f-8ec1-b0c5bdaf3615"}
2020-10-10 16:29:24.138  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.138  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 16:29:24.138  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 16:29:24.138  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1392, caseId=73, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"024904ce-24d2-498f-8ec1-b0c5bdaf3615"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:29:24 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=16, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:29:24 CST 2020, errorMessage='null'}，自增执行日志编号=1392
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 16:29:24.160  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:29:24.160  WARN 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 16:29:24.164  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 16:29:24.165  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:29:24.165  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:29:24.165  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:29:24.165  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:29:24.165  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:29:24.166  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:29:24.172  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:29:24.172  INFO 18816 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=73---------------------------------
2020-10-10 16:30:28.903  INFO 10660 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-F0JRBO4 with PID 10660 (C:\Users\beix\IdeaProjects\platform\target\classes started by beix in C:\Users\beix\IdeaProjects\platform)
2020-10-10 16:30:28.906  INFO 10660 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 16:30:29.435  INFO 10660 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 16:30:29.437  INFO 10660 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 16:30:29.470  INFO 10660 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2020-10-10 16:30:29.655  INFO 10660 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$8d74aab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 16:30:29.828  INFO 10660 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 16:30:29.835  INFO 10660 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 16:30:29.835  INFO 10660 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 16:30:29.898  INFO 10660 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 16:30:29.899  INFO 10660 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 961 ms
2020-10-10 16:30:30.157  INFO 10660 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 16:30:30.242  INFO 10660 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 16:30:30.650  INFO 10660 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 16:30:30.865  INFO 10660 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 16:30:31.232  INFO 10660 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 16:30:31.235  INFO 10660 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 2.615 seconds (JVM running for 3.093)
2020-10-10 16:30:35.553  INFO 10660 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 16:30:35.553  INFO 10660 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 16:30:35.557  INFO 10660 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2020-10-10 16:30:35.634  INFO 10660 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 16:30:35.635  INFO 10660 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 16:30:45.726  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=76---------------------------------
2020-10-10 16:30:45.734  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=76，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=76, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='超级管理员', createdTime=Sat Oct 10 14:30:24 CST 2020, asserts=[AssertVO{assertId=70, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 16:30:45.735  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=76
2020-10-10 16:30:45.735  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.735  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:30:45.735  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:30:45.735  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:30:45.739  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:30:45.744  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:30:45.744  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:45.745  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:30:45.774  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:45.902  INFO 10660 --- [http-nio-7777-exec-5] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [is my cookie] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 16:30:45.937  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1393, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:45 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"695199c8-8a40-465b-968b-fa77ad7c6503","username":"123","isEnable":1}}', runTime=143, executer='系统调度', status=0, createdTime=Sat Oct 10 16:30:45 CST 2020, errorMessage='null'}，自增执行日志编号=1393
2020-10-10 16:30:45.938  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:45.938  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:45.938  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:45.938  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.938  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:45.938  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:45.939  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:45.939  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:45.939  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:45.939  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:45.940  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:45.940  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:45.947  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:45.947  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:45.947  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.947  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:45.947  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:45.957  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"695199c8-8a40-465b-968b-fa77ad7c6503","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:30:45.957  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:45.957  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:45.957  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:30:45.957  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:45.957  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:45.964  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:45.965  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:45.974  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:45.974  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:30:45.980  WARN 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"695199c8-8a40-465b-968b-fa77ad7c6503","username":"123","isEnable":1}}
2020-10-10 16:30:45.980  WARN 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:45 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:30:45.980  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"695199c8-8a40-465b-968b-fa77ad7c6503"}
2020-10-10 16:30:45.980  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"695199c8-8a40-465b-968b-fa77ad7c6503"}
2020-10-10 16:30:45.980  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:45.980  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 16:30:45.980  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 16:30:45.980  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:30:46.008  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1394, caseId=76, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"695199c8-8a40-465b-968b-fa77ad7c6503"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:45 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=22, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:46 CST 2020, errorMessage='null'}，自增执行日志编号=1394
2020-10-10 16:30:46.008  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:46.008  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:46.008  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 16:30:46.009  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:30:46.009  WARN 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 16:30:46.012  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 16:30:46.013  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:30:46.013  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.013  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:30:46.013  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:30:46.014  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 16:30:46.018  INFO 10660 --- [http-nio-7777-exec-2] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:46.094  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:46.102  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:46.102  INFO 10660 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=76---------------------------------
2020-10-10 16:30:46.766  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:30:46.770  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:30:46.770  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:30:46.770  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:30:46.771  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1395, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:45 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5c3f330b-7df0-489f-9aa2-463ad8d5bb19","username":"123","isEnable":1}}', runTime=13, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:46 CST 2020, errorMessage='null'}，自增执行日志编号=1395
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:46.790  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5c3f330b-7df0-489f-9aa2-463ad8d5bb19","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:30:46.796  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:46.797  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:46.804  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:46.811  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:46.811  INFO 10660 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:30:47.506  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=73---------------------------------
2020-10-10 16:30:47.511  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=73，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=73, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='1', createdTime=Thu Oct 01 21:56:05 CST 2020, asserts=[AssertVO{assertId=65, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 16:30:47.512  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=73
2020-10-10 16:30:47.512  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.512  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:30:47.512  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:30:47.512  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:30:47.513  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.517  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:30:47.518  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:30:47.518  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.518  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:47.518  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:30:47.518  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1396, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f6cfb91e-042f-42e1-99bb-5c0c0eb0a747","username":"123","isEnable":1}}', runTime=12, executer='系统调度', status=0, createdTime=Sat Oct 10 16:30:47 CST 2020, errorMessage='null'}，自增执行日志编号=1396
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:47.536  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f6cfb91e-042f-42e1-99bb-5c0c0eb0a747","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:47.543  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:30:47.544  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:47.544  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:47.549  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:47.557  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:47.557  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:30:47.562  WARN 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f6cfb91e-042f-42e1-99bb-5c0c0eb0a747","username":"123","isEnable":1}}
2020-10-10 16:30:47.562  WARN 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:30:47.562  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"f6cfb91e-042f-42e1-99bb-5c0c0eb0a747"}
2020-10-10 16:30:47.562  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"f6cfb91e-042f-42e1-99bb-5c0c0eb0a747"}
2020-10-10 16:30:47.563  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.563  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 16:30:47.563  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 16:30:47.563  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1397, caseId=73, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"f6cfb91e-042f-42e1-99bb-5c0c0eb0a747"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=11, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:47 CST 2020, errorMessage='null'}，自增执行日志编号=1397
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 16:30:47.581  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:30:47.581  WARN 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 16:30:47.583  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 16:30:47.584  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:30:47.584  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:47.584  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:30:47.584  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 16:30:47.584  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:47.585  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:47.592  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:47.592  INFO 10660 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=73---------------------------------
2020-10-10 16:30:48.181  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=71---------------------------------
2020-10-10 16:30:48.184  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=71，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=71, url='project/list', method=0, desc='查看项目列表', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:29:42 CST 2020, asserts=[AssertVO{assertId=58, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=59, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=60, assertName='项目总数和数据库总数一致', type=0, expression='$..data.total', operator=0, exceptedResult='[${projectCount}]', order=2}]}
2020-10-10 16:30:48.184  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=71
2020-10-10 16:30:48.184  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.184  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:30:48.184  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:30:48.184  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:30:48.186  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:30:48.190  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:48.209  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1398, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"45f3685c-6bc7-4ec4-be84-eea33ae90d68","username":"123","isEnable":1}}', runTime=14, executer='系统调度', status=0, createdTime=Sat Oct 10 16:30:48 CST 2020, errorMessage='null'}，自增执行日志编号=1398
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.210  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"45f3685c-6bc7-4ec4-be84-eea33ae90d68","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.216  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.221  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.227  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:48.227  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:30:48.231  WARN 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"45f3685c-6bc7-4ec4-be84-eea33ae90d68","username":"123","isEnable":1}}
2020-10-10 16:30:48.231  WARN 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:30:48.231  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"45f3685c-6bc7-4ec4-be84-eea33ae90d68"}
2020-10-10 16:30:48.231  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"45f3685c-6bc7-4ec4-be84-eea33ae90d68"}
2020-10-10 16:30:48.231  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.231  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:48.231  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:30:48.231  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1399, caseId=71, caseUrl='http://localhost:7777/project/list', caseDesc='查看项目列表', requestHeaders='{"Token":"45f3685c-6bc7-4ec4-be84-eea33ae90d68"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:47 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"created_time":"2020-07-29 16:26:54","update_time":"2020-07-29 16:26:58","project_id":4,"domain":"http://localhost:7777/","name":"自动化平台接口","desc":"描述"}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}', runTime=18, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:48 CST 2020, errorMessage='null'}，自增执行日志编号=1399
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:48.254  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:48.255  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.255  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:48.255  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.255  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.260  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.260  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:48.260  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.260  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:48.260  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:48.261  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"created_time":"2020-07-29 16:26:54","update_time":"2020-07-29 16:26:58","project_id":4,"domain":"http://localhost:7777/","name":"自动化平台接口","desc":"描述"}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..code
2020-10-10 16:30:48.261  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:48.261  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.261  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:30:48.261  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.261  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${projectCount}]
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${projectCount}
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${projectCount}]
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=projectCount
2020-10-10 16:30:48.266  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:30:48.270  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select count(1) from `t_project`
2020-10-10 16:30:48.270  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.270  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select count(1) from `t_project`
2020-10-10 16:30:48.270  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select count(1) from `t_project`
2020-10-10 16:30:48.270  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select count(1) from `t_project`
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[1]
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[1], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"created_time":"2020-07-29 16:26:54","update_time":"2020-07-29 16:26:58","project_id":4,"domain":"http://localhost:7777/","name":"自动化平台接口","desc":"描述"}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..data.total
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[1]
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[1]
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.273  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.280  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:48.280  INFO 10660 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=71---------------------------------
2020-10-10 16:30:48.800  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:30:48.806  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:30:48.806  WARN 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:30:48.808  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:30:48.808  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:30:48.808  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602318648808","password":"123","sex":"0"}
2020-10-10 16:30:48.808  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602318648808","password":"123","sex":"0"}
2020-10-10 16:30:48.808  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:48.825  WARN 10660 --- [http-nio-7777-exec-6] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1400, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602318648808","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":400,"msg":"登录已经过期，请重新登录","data":{}}', runTime=18, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:48 CST 2020, errorMessage='null'}，自增执行日志编号=1400
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:48.835  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[400], 类型=json, 响应Body={"code":400,"msg":"登录已经过期，请重新登录","data":{}}, 提取表达式=$..code
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[400]
2020-10-10 16:30:48.841  WARN 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 16:30:48.841  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:48.853  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:48.853  INFO 10660 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 16:30:49.398  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=69---------------------------------
2020-10-10 16:30:49.401  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=69，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=69, url='user/list', method=0, desc='查看所有的用户列表', level=1, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:14:31 CST 2020, asserts=[AssertVO{assertId=54, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=55, assertName='username=123', type=0, expression='$..data.list[0].username', operator=0, exceptedResult='["123"]', order=1}]}
2020-10-10 16:30:49.401  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=69
2020-10-10 16:30:49.401  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.401  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 16:30:49.401  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 16:30:49.401  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 16:30:49.402  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 16:30:49.405  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1401, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"cd0afb91-9030-47bc-b7fb-57b0e1014261","username":"123","isEnable":1}}', runTime=16, executer='系统调度', status=0, createdTime=Sat Oct 10 16:30:49 CST 2020, errorMessage='null'}，自增执行日志编号=1401
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:49.427  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:49.428  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:49.428  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:49.428  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"cd0afb91-9030-47bc-b7fb-57b0e1014261","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:49.433  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:49.438  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:49.439  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:49.439  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:49.444  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:49.444  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 16:30:49.448  WARN 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"cd0afb91-9030-47bc-b7fb-57b0e1014261","username":"123","isEnable":1}}
2020-10-10 16:30:49.448  WARN 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 16:30:49.448  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"cd0afb91-9030-47bc-b7fb-57b0e1014261"}
2020-10-10 16:30:49.448  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"cd0afb91-9030-47bc-b7fb-57b0e1014261"}
2020-10-10 16:30:49.448  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.448  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:49.448  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:30:49.448  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1402, caseId=69, caseUrl='http://localhost:7777/user/list', caseDesc='查看所有的用户列表', requestHeaders='{"Token":"cd0afb91-9030-47bc-b7fb-57b0e1014261"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:48 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":10,"startRow":1,"endRow":10,"total":18,"pages":2,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null},{"userId":84,"username":"1234","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-09 20:26:05","updateTime":null,"realName":"1","roleId":null},{"userId":85,"username":"1602310616539","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":86,"username":"1602310616993","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":87,"username":"1602310617048","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":88,"username":"1602310617100","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":89,"username":"1602310617147","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":90,"username":"1602310617193","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":91,"username":"1602310617348","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":92,"username":"1602310617540","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:58","updateTime":null,"realName":null,"roleId":null}],"prePage":0,"nextPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2],"navigateFirstPage":1,"navigateLastPage":2,"firstPage":1,"lastPage":2}}', runTime=20, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:49 CST 2020, errorMessage='null'}，自增执行日志编号=1402
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:49.473  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:49.478  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:49.478  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["123"]
2020-10-10 16:30:49.478  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:49.478  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["123"]
2020-10-10 16:30:49.478  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123"]
2020-10-10 16:30:49.480  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":10,"startRow":1,"endRow":10,"total":18,"pages":2,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null},{"userId":84,"username":"1234","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-09 20:26:05","updateTime":null,"realName":"1","roleId":null},{"userId":85,"username":"1602310616539","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":86,"username":"1602310616993","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":87,"username":"1602310617048","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":88,"username":"1602310617100","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":89,"username":"1602310617147","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":90,"username":"1602310617193","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":91,"username":"1602310617348","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:57","updateTime":null,"realName":null,"roleId":null},{"userId":92,"username":"1602310617540","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 14:16:58","updateTime":null,"realName":null,"roleId":null}],"prePage":0,"nextPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2],"navigateFirstPage":1,"navigateLastPage":2,"firstPage":1,"lastPage":2}}, 提取表达式=$..data.list[0].username
2020-10-10 16:30:49.480  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123"]
2020-10-10 16:30:49.480  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:49.480  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-10 16:30:49.480  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:49.480  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:49.486  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:49.486  INFO 10660 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=69---------------------------------
2020-10-10 16:30:52.995  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 16:30:52.999  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 16:30:52.999  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 16:30:52.999  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:52.999  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:52.999  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 16:30:52.999  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:53.000  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 16:30:53.000  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 16:30:53.000  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:53.000  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 16:30:53.000  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 16:30:53.000  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 16:30:53.000  WARN 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 16:30:53.001  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 16:30:53.001  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 16:30:53.001  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602318653001","password":"123","sex":"0"}
2020-10-10 16:30:53.001  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602318653001","password":"123","sex":"0"}
2020-10-10 16:30:53.001  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 16:30:53.016  WARN 10660 --- [http-nio-7777-exec-2] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1403, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='', requestParams='', requestData='{"username":"1602318653001","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 08:30:53 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":400,"msg":"登录已经过期，请重新登录","data":{}}', runTime=14, executer='超级管理员', status=0, createdTime=Sat Oct 10 16:30:53 CST 2020, errorMessage='null'}，自增执行日志编号=1403
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 16:30:53.024  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:53.030  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 16:30:53.030  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[400], 类型=json, 响应Body={"code":400,"msg":"登录已经过期，请重新登录","data":{}}, 提取表达式=$..code
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[400]
2020-10-10 16:30:53.031  WARN 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 16:30:53.031  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 16:30:53.041  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 16:30:53.041  INFO 10660 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 17:31:16.956  INFO 5104 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 5104 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 17:31:16.976  INFO 5104 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 17:31:19.474  INFO 5104 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 17:31:19.477  INFO 5104 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 17:31:19.615  INFO 5104 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74ms. Found 0 Redis repository interfaces.
2020-10-10 17:31:20.353  INFO 5104 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$17833e1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 17:31:21.103  INFO 5104 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 17:31:21.128  INFO 5104 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 17:31:21.129  INFO 5104 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 17:31:21.252  INFO 5104 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 17:31:21.252  INFO 5104 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4007 ms
2020-10-10 17:31:22.084  INFO 5104 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 17:31:22.318  INFO 5104 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 17:31:23.431  INFO 5104 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 17:31:23.948  INFO 5104 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 17:31:25.463  INFO 5104 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 17:31:25.468  INFO 5104 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 9.927 seconds (JVM running for 12.038)
2020-10-10 17:32:25.673  INFO 5104 --- [http-nio-7777-exec-1] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 17:32:25.681  INFO 5104 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 17:32:25.681  INFO 5104 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 17:32:25.689  INFO 5104 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2020-10-10 17:32:25.756  WARN 5104 --- [http-nio-7777-exec-1] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 17:32:26.149 ERROR 5104 --- [http-nio-7777-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.alex.platform.exception.LoginException: 登录已经过期，请重新登录] with root cause

org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83) ~[druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]

2020-10-10 17:32:26.163  WARN 5104 --- [http-nio-7777-exec-2] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 17:32:31.310  INFO 5104 --- [http-nio-7777-exec-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 17:32:31.313  INFO 5104 --- [http-nio-7777-exec-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 17:47:33.863  WARN 5104 --- [http-nio-7777-exec-2] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:36)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 17:47:33.867  WARN 5104 --- [http-nio-7777-exec-6] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:36)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 17:47:33.866  WARN 5104 --- [http-nio-7777-exec-5] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:36)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 17:47:33.870  WARN 5104 --- [http-nio-7777-exec-9] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:36)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 17:47:33.875  WARN 5104 --- [http-nio-7777-exec-8] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:36)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 18:11:44.296  INFO 15608 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 15608 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:11:44.302  INFO 15608 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:11:45.210  INFO 15608 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:11:45.212  INFO 15608 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:11:45.280  INFO 15608 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2020-10-10 18:11:45.533  INFO 15608 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$a8cdd842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:11:45.816  INFO 15608 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:11:45.826  INFO 15608 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:11:45.829  INFO 15608 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:11:45.932  INFO 15608 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:11:45.933  INFO 15608 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1562 ms
2020-10-10 18:11:46.332  INFO 15608 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:11:46.437  INFO 15608 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:11:47.017  INFO 15608 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:11:47.306  INFO 15608 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:11:47.908  INFO 15608 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:11:47.915  INFO 15608 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.188 seconds (JVM running for 5.176)
2020-10-10 18:11:52.437  INFO 15608 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:11:52.437  INFO 15608 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:11:52.443  INFO 15608 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-10 18:11:52.587  INFO 15608 --- [http-nio-7777-exec-2] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:11:52.588  INFO 15608 --- [http-nio-7777-exec-2] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:11:53.210 ERROR 15608 --- [http-nio-7777-exec-7] o.a.p.controller.ExceptionController     : org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.UnsupportedOperationException
### The error may exist in file [C:\Users\10147\IdeaProjects\platform\target\classes\mapper\AnalysisMapper.xml]
### The error may involve org.alex.platform.mapper.AnalysisMapper.selectAssertLog
### The error occurred while handling results
### SQL: select count(0) as `count`         from `t_interface_assert_log`         where SUBSTRING(created_time,1,10) = ? and `status`=0         UNION all         select count(0) as `count`         from `t_interface_assert_log`         where SUBSTRING(created_time,1,10) = ? and `status`=1         UNION all         select count(0) as `count`         from `t_interface_assert_log`         where SUBSTRING(created_time,1,10) = ? and `status`=2
### Cause: java.lang.UnsupportedOperationException
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy70.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy101.selectAssertLog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy102.selectAssertLog(Unknown Source)
	at org.alex.platform.service.impl.AnalysisServiceImpl.selectAssertLog(AnalysisServiceImpl.java:63)
	at org.alex.platform.controller.AnalysisController.assertLogWeek(AnalysisController.java:190)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.UnsupportedOperationException
### The error may exist in file [C:\Users\10147\IdeaProjects\platform\target\classes\mapper\AnalysisMapper.xml]
### The error may involve org.alex.platform.mapper.AnalysisMapper.selectAssertLog
### The error occurred while handling results
### SQL: select count(0) as `count`         from `t_interface_assert_log`         where SUBSTRING(created_time,1,10) = ? and `status`=0         UNION all         select count(0) as `count`         from `t_interface_assert_log`         where SUBSTRING(created_time,1,10) = ? and `status`=1         UNION all         select count(0) as `count`         from `t_interface_assert_log`         where SUBSTRING(created_time,1,10) = ? and `status`=2
### Cause: java.lang.UnsupportedOperationException
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 73 more
Caused by: java.lang.UnsupportedOperationException
	at org.apache.ibatis.reflection.wrapper.CollectionWrapper.findProperty(CollectionWrapper.java:48)
	at org.apache.ibatis.reflection.MetaObject.findProperty(MetaObject.java:85)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createAutomaticMappings(DefaultResultSetHandler.java:493)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyAutomaticMappings(DefaultResultSetHandler.java:517)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:402)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:354)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:328)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:301)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:194)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy123.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 79 more

2020-10-10 18:11:53.268 ERROR 15608 --- [http-nio-7777-exec-8] o.a.p.controller.ExceptionController     : org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.UnsupportedOperationException
### The error may exist in file [C:\Users\10147\IdeaProjects\platform\target\classes\mapper\AnalysisMapper.xml]
### The error may involve org.alex.platform.mapper.AnalysisMapper.selectExecuteLog
### The error occurred while handling results
### SQL: select count(0) as `count`         from `t_interface_case_execute_log`         where SUBSTRING(created_time,1,10) = ? and `status`=0         UNION all         select count(0) as `count`         from `t_interface_case_execute_log`         where SUBSTRING(created_time,1,10) = ? and `status`=1         UNION all         select count(0) as `count`         from `t_interface_case_execute_log`         where SUBSTRING(created_time,1,10) = ? and `status`=2
### Cause: java.lang.UnsupportedOperationException
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy70.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy101.selectExecuteLog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy102.selectExecuteLog(Unknown Source)
	at org.alex.platform.service.impl.AnalysisServiceImpl.selectExecuteLog(AnalysisServiceImpl.java:58)
	at org.alex.platform.controller.AnalysisController.executeLogWeek(AnalysisController.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.UnsupportedOperationException
### The error may exist in file [C:\Users\10147\IdeaProjects\platform\target\classes\mapper\AnalysisMapper.xml]
### The error may involve org.alex.platform.mapper.AnalysisMapper.selectExecuteLog
### The error occurred while handling results
### SQL: select count(0) as `count`         from `t_interface_case_execute_log`         where SUBSTRING(created_time,1,10) = ? and `status`=0         UNION all         select count(0) as `count`         from `t_interface_case_execute_log`         where SUBSTRING(created_time,1,10) = ? and `status`=1         UNION all         select count(0) as `count`         from `t_interface_case_execute_log`         where SUBSTRING(created_time,1,10) = ? and `status`=2
### Cause: java.lang.UnsupportedOperationException
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 73 more
Caused by: java.lang.UnsupportedOperationException
	at org.apache.ibatis.reflection.wrapper.CollectionWrapper.findProperty(CollectionWrapper.java:48)
	at org.apache.ibatis.reflection.MetaObject.findProperty(MetaObject.java:85)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createAutomaticMappings(DefaultResultSetHandler.java:493)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyAutomaticMappings(DefaultResultSetHandler.java:517)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:402)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:354)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:328)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:301)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:194)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy123.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 79 more

2020-10-10 18:13:00.644  INFO 13016 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 13016 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:13:00.646  INFO 13016 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:13:01.390  INFO 13016 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:13:01.392  INFO 13016 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:13:01.468  INFO 13016 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62ms. Found 0 Redis repository interfaces.
2020-10-10 18:13:01.783  INFO 13016 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$a29584c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:13:02.032  INFO 13016 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:13:02.041  INFO 13016 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:13:02.042  INFO 13016 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:13:02.142  INFO 13016 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:13:02.142  INFO 13016 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1453 ms
2020-10-10 18:13:02.517  INFO 13016 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:13:02.628  INFO 13016 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:13:03.196  INFO 13016 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:13:03.494  INFO 13016 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:13:04.051  INFO 13016 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:13:04.055  INFO 13016 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.184 seconds (JVM running for 5.003)
2020-10-10 18:13:09.480  INFO 13016 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:13:09.481  INFO 13016 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:13:09.487  INFO 13016 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2020-10-10 18:13:09.639  INFO 13016 --- [http-nio-7777-exec-5] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:13:09.641  INFO 13016 --- [http-nio-7777-exec-5] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:15:00.772  INFO 1368 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 1368 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:15:00.775  INFO 1368 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:15:01.631  INFO 1368 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:15:01.633  INFO 1368 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:15:01.702  INFO 1368 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54ms. Found 0 Redis repository interfaces.
2020-10-10 18:15:01.973  INFO 1368 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$a2f5a31a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:15:02.222  INFO 1368 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:15:02.231  INFO 1368 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:15:02.232  INFO 1368 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:15:02.321  INFO 1368 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:15:02.322  INFO 1368 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1504 ms
2020-10-10 18:15:02.671  INFO 1368 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:15:02.780  INFO 1368 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:15:03.328  INFO 1368 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:15:03.621  INFO 1368 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:15:04.177  INFO 1368 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:15:04.180  INFO 1368 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.787 seconds (JVM running for 4.981)
2020-10-10 18:15:10.901  INFO 1368 --- [http-nio-7777-exec-6] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:15:10.905  INFO 1368 --- [http-nio-7777-exec-6] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:15:10.918  INFO 1368 --- [http-nio-7777-exec-6] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-10-10 18:15:11.079  INFO 1368 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:15:11.083  INFO 1368 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:17:14.585  INFO 5184 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 5184 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:17:14.588  INFO 5184 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:17:15.445  INFO 5184 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:17:15.447  INFO 5184 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:17:15.522  INFO 5184 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 59ms. Found 0 Redis repository interfaces.
2020-10-10 18:17:15.901  INFO 5184 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$50af2078] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:17:16.219  INFO 5184 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:17:16.230  INFO 5184 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:17:16.231  INFO 5184 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:17:16.319  INFO 5184 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:17:16.319  INFO 5184 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1674 ms
2020-10-10 18:17:16.783  INFO 5184 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:17:16.906  INFO 5184 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:17:17.568  INFO 5184 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:17:17.883  INFO 5184 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:17:18.521  INFO 5184 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:17:18.525  INFO 5184 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.494 seconds (JVM running for 6.185)
2020-10-10 18:17:27.524  INFO 5184 --- [http-nio-7777-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:17:27.525  INFO 5184 --- [http-nio-7777-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:17:27.534  INFO 5184 --- [http-nio-7777-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-10-10 18:17:27.678  INFO 5184 --- [http-nio-7777-exec-4] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:17:27.679  INFO 5184 --- [http-nio-7777-exec-4] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:18:16.565  INFO 5184 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-10 18:18:16.585  INFO 5184 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-10-10 18:18:16.609 ERROR 5184 --- [http-nio-7777-exec-6] o.a.p.controller.ExceptionController     : org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'analysisController': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.web.method.HandlerMethod.createWithResolvedBean(HandlerMethod.java:336)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:368)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 18:18:47.661  INFO 13100 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 13100 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:18:47.676  INFO 13100 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:18:48.452  INFO 13100 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:18:48.454  INFO 13100 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:18:48.520  INFO 13100 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54ms. Found 0 Redis repository interfaces.
2020-10-10 18:18:48.776  INFO 13100 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$c631af70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:18:49.031  INFO 13100 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:18:49.038  INFO 13100 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:18:49.039  INFO 13100 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:18:49.115  INFO 13100 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:18:49.116  INFO 13100 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1381 ms
2020-10-10 18:18:49.479  INFO 13100 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:18:49.593  INFO 13100 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:18:50.144  INFO 13100 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:18:50.417  INFO 13100 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:18:51.014  INFO 13100 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:18:51.018  INFO 13100 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 3.809 seconds (JVM running for 4.58)
2020-10-10 18:19:00.593  INFO 13100 --- [http-nio-7777-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:19:00.594  INFO 13100 --- [http-nio-7777-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:19:00.603  INFO 13100 --- [http-nio-7777-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2020-10-10 18:19:00.734  INFO 13100 --- [http-nio-7777-exec-9] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:19:00.735  INFO 13100 --- [http-nio-7777-exec-9] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:19:25.718  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:25.724  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:25.725  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:25.725  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:25.725  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:25.725  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:25.726  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:25.726  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:25.726  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:25.726  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:25.726  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:25.726  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:25.988  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:26.138  INFO 13100 --- [http-nio-7777-exec-10] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [is my cookie] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 18:19:26.214  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1367, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:25 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5f9a9333-a5f9-4765-bbbb-0c8f9459f398","username":"123","isEnable":1}}', runTime=184, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:26 CST 2020, errorMessage='null'}，自增执行日志编号=1367
2020-10-10 18:19:26.214  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:26.214  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.214  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:26.214  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.214  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:26.215  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:26.215  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:26.216  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:26.216  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:26.216  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:26.217  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:26.217  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:26.228  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.228  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:26.228  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.228  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:26.228  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:26.275  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"5f9a9333-a5f9-4765-bbbb-0c8f9459f398","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:26.275  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:26.275  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:26.275  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:26.275  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:26.275  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:26.283  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.283  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:26.283  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.283  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:26.284  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:26.294  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:26.294  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:26.801  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=73---------------------------------
2020-10-10 18:19:26.808  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=73，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=73, url='project/info', method=0, desc='查看项目详情', level=1, doc='null', headers='{"Token":"${Token}"}', params='{"projectId":"4"}', data='null', json='null', creater='1', createdTime=Thu Oct 01 21:56:05 CST 2020, asserts=[AssertVO{assertId=65, assertName='断言id=4', type=0, expression='$..data.projectId', operator=0, exceptedResult='[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]', order=0}]}
2020-10-10 18:19:26.808  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=73
2020-10-10 18:19:26.808  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.808  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:26.808  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:26.808  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:26.811  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:26.818  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:26.818  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:26.818  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:26.819  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:26.847  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1368, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:26 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"b0be38b4-3141-42cb-a144-03de279252df","username":"123","isEnable":1}}', runTime=16, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:26 CST 2020, errorMessage='null'}，自增执行日志编号=1368
2020-10-10 18:19:26.847  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:26.847  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.847  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:26.848  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"b0be38b4-3141-42cb-a144-03de279252df","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:26.858  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:26.859  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:26.859  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:26.866  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:26.867  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:26.879  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:26.879  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:26.887  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"b0be38b4-3141-42cb-a144-03de279252df","username":"123","isEnable":1}}
2020-10-10 18:19:26.887  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:26 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:26.888  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"b0be38b4-3141-42cb-a144-03de279252df"}
2020-10-10 18:19:26.888  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"b0be38b4-3141-42cb-a144-03de279252df"}
2020-10-10 18:19:26.888  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.888  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"projectId":"4"}
2020-10-10 18:19:26.888  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"projectId":"4"}
2020-10-10 18:19:26.888  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 18:19:26.916  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1369, caseId=73, caseUrl='http://localhost:7777/project/info', caseDesc='查看项目详情', requestHeaders='{"Token":"b0be38b4-3141-42cb-a144-03de279252df"}', requestParams='{"projectId":"4"}', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:26 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}', runTime=20, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:26 CST 2020, errorMessage='null'}，自增执行日志编号=1369
2020-10-10 18:19:26.916  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:26.916  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:26.916  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}]
2020-10-10 18:19:26.916  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${selectProjectIdByName("#{$..data.name}", "#{$..data.desc}")}
2020-10-10 18:19:26.916  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.name
2020-10-10 18:19:26.917  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "#{$..data.desc}")}]
2020-10-10 18:19:26.917  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，jsonPath=$..data.desc
2020-10-10 18:19:26.917  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗后的结果=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 18:19:26.917  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.917  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${selectProjectIdByName("自动化平台接口", "描述")}]
2020-10-10 18:19:26.917  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=selectProjectIdByName("自动化平台接口", "描述")
2020-10-10 18:19:26.918  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:26.918  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=selectProjectIdByName
2020-10-10 18:19:26.921  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入动态SQL模式
2020-10-10 18:19:26.923  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 18:19:26.924  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:26.924  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 18:19:26.924  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select project_id from `t_project` where `name`=? and `desc`=?
2020-10-10 18:19:26.924  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select project_id from `t_project` where `name`=? and `desc`=?, params=[自动化平台接口, 描述]
2020-10-10 18:19:26.976  INFO 13100 --- [http-nio-7777-exec-6] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[4]
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[4], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"projectId":4,"name":"自动化平台接口","desc":"描述","domain":"http://localhost:7777/","createdTime":"2020-07-29 16:26:54","updateTime":"2020-07-29 16:26:58"}}, 提取表达式=$..data.projectId
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[4]
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[4]
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.171  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.179  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:27.179  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=73---------------------------------
2020-10-10 18:19:27.715  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=71---------------------------------
2020-10-10 18:19:27.723  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=71，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=7, caseId=71, url='project/list', method=0, desc='查看项目列表', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:29:42 CST 2020, asserts=[AssertVO{assertId=58, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=59, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=60, assertName='项目总数和数据库总数一致', type=0, expression='$..data.total', operator=0, exceptedResult='[${projectCount}]', order=2}]}
2020-10-10 18:19:27.723  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=71
2020-10-10 18:19:27.723  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.723  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:27.723  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:27.723  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:27.726  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:27.731  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:27.732  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:27.759  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1370, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:26 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f426ffc7-708f-470f-9bac-a393f540c06a","username":"123","isEnable":1}}', runTime=17, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:27 CST 2020, errorMessage='null'}，自增执行日志编号=1370
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.760  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.768  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f426ffc7-708f-470f-9bac-a393f540c06a","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.769  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.777  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.787  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:27.788  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:27.794  WARN 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"f426ffc7-708f-470f-9bac-a393f540c06a","username":"123","isEnable":1}}
2020-10-10 18:19:27.794  WARN 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:26 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:27.794  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"f426ffc7-708f-470f-9bac-a393f540c06a"}
2020-10-10 18:19:27.794  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"f426ffc7-708f-470f-9bac-a393f540c06a"}
2020-10-10 18:19:27.794  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.794  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:27.794  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:27.794  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1371, caseId=71, caseUrl='http://localhost:7777/project/list', caseDesc='查看项目列表', requestHeaders='{"Token":"f426ffc7-708f-470f-9bac-a393f540c06a"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:27 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"created_time":"2020-07-29 16:26:54","update_time":"2020-07-29 16:26:58","project_id":4,"domain":"http://localhost:7777/","name":"自动化平台接口","desc":"描述"}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}', runTime=27, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:27 CST 2020, errorMessage='null'}，自增执行日志编号=1371
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.830  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.838  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:27.838  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:27.838  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.838  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:27.838  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:27.839  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"created_time":"2020-07-29 16:26:54","update_time":"2020-07-29 16:26:58","project_id":4,"domain":"http://localhost:7777/","name":"自动化平台接口","desc":"描述"}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..code
2020-10-10 18:19:27.839  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:27.839  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.839  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:27.839  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.840  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.846  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:27.847  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[${projectCount}]
2020-10-10 18:19:27.847  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗#{}模式，清洗内容为=${projectCount}
2020-10-10 18:19:27.847  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.847  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[${projectCount}]
2020-10-10 18:19:27.847  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=projectCount
2020-10-10 18:19:27.847  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:27.854  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始解析SQL，解析前SQL=select count(1) from `t_project`
2020-10-10 18:19:27.854  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:27.854  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=select count(1) from `t_project`
2020-10-10 18:19:27.854  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 解析SQL完成，解析后SQL=select count(1) from `t_project`
2020-10-10 18:19:27.854  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : SQL执行参数，SQL=select count(1) from `t_project`
2020-10-10 18:19:27.858  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[1]
2020-10-10 18:19:27.858  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[1], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":1,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"created_time":"2020-07-29 16:26:54","update_time":"2020-07-29 16:26:58","project_id":4,"domain":"http://localhost:7777/","name":"自动化平台接口","desc":"描述"}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..data.total
2020-10-10 18:19:27.858  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[1]
2020-10-10 18:19:27.858  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:27.858  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[1]
2020-10-10 18:19:27.858  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:27.859  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:27.867  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:27.867  INFO 13100 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=71---------------------------------
2020-10-10 18:19:28.392  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:28.397  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:28.397  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:28.397  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.397  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:28.397  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:28.398  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:28.400  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:28.405  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1372, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:27 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"19ded531-bc08-4490-a375-c42b78e2cedb","username":"123","isEnable":1}}', runTime=21, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:28 CST 2020, errorMessage='null'}，自增执行日志编号=1372
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:28.435  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"19ded531-bc08-4490-a375-c42b78e2cedb","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:28.443  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:28.451  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:28.452  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:28.461  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:28.461  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:28.467  WARN 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"19ded531-bc08-4490-a375-c42b78e2cedb","username":"123","isEnable":1}}
2020-10-10 18:19:28.467  WARN 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:27 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"19ded531-bc08-4490-a375-c42b78e2cedb"}
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"19ded531-bc08-4490-a375-c42b78e2cedb"}
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:28.467  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:28.467  WARN 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:28.470  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:28.471  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:28.471  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325168471","password":"123","sex":"0"}
2020-10-10 18:19:28.471  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325168471","password":"123","sex":"0"}
2020-10-10 18:19:28.471  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1373, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"19ded531-bc08-4490-a375-c42b78e2cedb"}', requestParams='', requestData='{"username":"1602325168471","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:27 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=118, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:28 CST 2020, errorMessage='null'}，自增执行日志编号=1373
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:28.596  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:28.597  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:28.597  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:28.597  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:28.597  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:28.606  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:28.606  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:28.607  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:28.631  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:28.631  INFO 13100 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:29.145  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=69---------------------------------
2020-10-10 18:19:29.152  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=69，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=69, url='user/list', method=0, desc='查看所有的用户列表', level=1, doc='null', headers='{"Token":"${Token}"}', params='', data='null', json='null', creater='1', createdTime=Sat Sep 26 21:14:31 CST 2020, asserts=[AssertVO{assertId=54, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=55, assertName='username=123', type=0, expression='$..data.list[0].username', operator=0, exceptedResult='["123"]', order=1}]}
2020-10-10 18:19:29.152  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=69
2020-10-10 18:19:29.152  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.152  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:29.152  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:29.153  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:29.155  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:29.161  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:29.192  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1374, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:29 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"4edf36bb-0873-42d2-a6f7-8c7aebc48d29","username":"123","isEnable":1}}', runTime=23, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:29 CST 2020, errorMessage='null'}，自增执行日志编号=1374
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:29.193  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"4edf36bb-0873-42d2-a6f7-8c7aebc48d29","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:29.202  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:29.203  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:29.203  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:29.203  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:29.203  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:29.209  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:29.217  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:29.217  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:29.223  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"4edf36bb-0873-42d2-a6f7-8c7aebc48d29","username":"123","isEnable":1}}
2020-10-10 18:19:29.223  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:29 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:29.224  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"4edf36bb-0873-42d2-a6f7-8c7aebc48d29"}
2020-10-10 18:19:29.224  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"4edf36bb-0873-42d2-a6f7-8c7aebc48d29"}
2020-10-10 18:19:29.224  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.224  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:29.224  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:29.224  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行GET方法
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1375, caseId=69, caseUrl='http://localhost:7777/user/list', caseDesc='查看所有的用户列表', requestHeaders='{"Token":"4edf36bb-0873-42d2-a6f7-8c7aebc48d29"}', requestParams='', requestData='null', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:29 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":3,"startRow":1,"endRow":3,"total":3,"pages":1,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null},{"userId":84,"username":"1234","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-09 20:26:05","updateTime":null,"realName":"1","roleId":null},{"userId":85,"username":"1602325168471","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 18:19:29","updateTime":null,"realName":null,"roleId":null}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}', runTime=29, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:29 CST 2020, errorMessage='null'}，自增执行日志编号=1375
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:29.261  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:29.268  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:29.268  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=["123"]
2020-10-10 18:19:29.268  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:29.268  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=["123"]
2020-10-10 18:19:29.268  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=["123"]
2020-10-10 18:19:29.299  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=["123"], 类型=json, 响应Body={"code":200,"msg":"操作成功","data":{"pageNum":1,"pageSize":10,"size":3,"startRow":1,"endRow":3,"total":3,"pages":1,"list":[{"userId":1,"username":"123","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-06 22:43:09","updateTime":null,"realName":"超级管理员","roleId":null},{"userId":84,"username":"1234","password":null,"jobNumber":"1","sex":1,"isEnable":1,"createdTime":"2020-10-09 20:26:05","updateTime":null,"realName":"1","roleId":null},{"userId":85,"username":"1602325168471","password":null,"jobNumber":null,"sex":0,"isEnable":1,"createdTime":"2020-10-10 18:19:29","updateTime":null,"realName":null,"roleId":null}],"prePage":0,"nextPage":0,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1],"navigateFirstPage":1,"navigateLastPage":1,"firstPage":1,"lastPage":1}}, 提取表达式=$..data.list[0].username
2020-10-10 18:19:29.300  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=["123"]
2020-10-10 18:19:29.300  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:29.300  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=["123"]
2020-10-10 18:19:29.300  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:29.300  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:29.308  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:29.308  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=69---------------------------------
2020-10-10 18:19:50.675  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:50.682  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:50.682  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:50.682  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.682  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:50.682  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:50.682  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:50.684  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:50.689  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:50.690  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:50.725  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1376, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"21ee76c6-066f-48d9-a962-ea9dd0eb1b7f","username":"123","isEnable":1}}', runTime=24, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:50 CST 2020, errorMessage='null'}，自增执行日志编号=1376
2020-10-10 18:19:50.725  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:50.726  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:50.733  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:50.733  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:50.733  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.733  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:50.733  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:50.733  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"21ee76c6-066f-48d9-a962-ea9dd0eb1b7f","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:50.734  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:50.734  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:50.734  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:50.734  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:50.734  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:50.741  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:50.748  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:50.748  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:50.753  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"21ee76c6-066f-48d9-a962-ea9dd0eb1b7f","username":"123","isEnable":1}}
2020-10-10 18:19:50.753  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"21ee76c6-066f-48d9-a962-ea9dd0eb1b7f"}
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"21ee76c6-066f-48d9-a962-ea9dd0eb1b7f"}
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:50.753  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:50.753  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:50.756  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:50.756  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:50.756  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325190756","password":"123","sex":"0"}
2020-10-10 18:19:50.756  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325190756","password":"123","sex":"0"}
2020-10-10 18:19:50.756  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1377, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"21ee76c6-066f-48d9-a962-ea9dd0eb1b7f"}', requestParams='', requestData='{"username":"1602325190756","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=27, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:50 CST 2020, errorMessage='null'}，自增执行日志编号=1377
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:50.791  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:50.791  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:50.796  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:50.797  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:50.808  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:50.808  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:51.251  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:51.255  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:51.255  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:51.255  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.255  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:51.255  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:51.256  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:51.257  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:51.261  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1378, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"0d6f28be-d9f7-4275-9c8e-567709436ff9","username":"123","isEnable":1}}', runTime=26, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1378
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.295  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"0d6f28be-d9f7-4275-9c8e-567709436ff9","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.306  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.313  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.314  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.322  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.322  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:51.325  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"0d6f28be-d9f7-4275-9c8e-567709436ff9","username":"123","isEnable":1}}
2020-10-10 18:19:51.326  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"0d6f28be-d9f7-4275-9c8e-567709436ff9"}
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"0d6f28be-d9f7-4275-9c8e-567709436ff9"}
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:51.326  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:51.326  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:51.328  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:51.328  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:51.328  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325191328","password":"123","sex":"0"}
2020-10-10 18:19:51.328  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325191328","password":"123","sex":"0"}
2020-10-10 18:19:51.328  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.366  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1379, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"0d6f28be-d9f7-4275-9c8e-567709436ff9"}', requestParams='', requestData='{"username":"1602325191328","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=33, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1379
2020-10-10 18:19:51.366  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.366  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.366  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.367  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:51.367  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.376  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.377  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.396  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.396  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:51.442  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:51.445  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:51.445  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:51.445  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.445  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:51.445  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:51.445  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:51.446  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:51.451  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1380, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"66ed44ed-3d29-434d-86c5-98bbdd062081","username":"123","isEnable":1}}', runTime=26, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1380
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.483  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.491  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.491  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.491  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.491  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.491  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.492  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"66ed44ed-3d29-434d-86c5-98bbdd062081","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:51.492  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.492  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.492  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.492  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.492  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.498  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.499  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.508  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.508  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:51.513  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"66ed44ed-3d29-434d-86c5-98bbdd062081","username":"123","isEnable":1}}
2020-10-10 18:19:51.513  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"66ed44ed-3d29-434d-86c5-98bbdd062081"}
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"66ed44ed-3d29-434d-86c5-98bbdd062081"}
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:51.513  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:51.513  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:51.516  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:51.516  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:51.516  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325191516","password":"123","sex":"0"}
2020-10-10 18:19:51.517  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325191516","password":"123","sex":"0"}
2020-10-10 18:19:51.517  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.564  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1381, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"66ed44ed-3d29-434d-86c5-98bbdd062081"}', requestParams='', requestData='{"username":"1602325191516","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=42, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1381
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.565  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:51.565  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.572  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.582  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.583  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:51.625  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:51.630  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:51.630  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:51.630  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.630  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:51.630  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:51.630  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:51.632  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:51.637  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1382, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e517f3e5-9815-4d64-b28d-027e947fd6f3","username":"123","isEnable":1}}', runTime=26, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1382
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.673  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.678  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.678  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.678  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.678  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.678  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.679  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e517f3e5-9815-4d64-b28d-027e947fd6f3","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:51.679  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.679  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.679  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.679  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.679  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.685  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.693  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.693  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:51.697  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"e517f3e5-9815-4d64-b28d-027e947fd6f3","username":"123","isEnable":1}}
2020-10-10 18:19:51.697  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:50 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"e517f3e5-9815-4d64-b28d-027e947fd6f3"}
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"e517f3e5-9815-4d64-b28d-027e947fd6f3"}
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:51.698  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:51.698  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:51.701  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:51.701  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:51.701  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325191701","password":"123","sex":"0"}
2020-10-10 18:19:51.701  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325191701","password":"123","sex":"0"}
2020-10-10 18:19:51.701  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.753  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1383, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"e517f3e5-9815-4d64-b28d-027e947fd6f3"}', requestParams='', requestData='{"username":"1602325191701","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=43, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1383
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.754  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:51.754  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.759  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.760  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.772  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.772  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:51.820  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:51.823  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:51.823  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:51.823  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.823  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:51.823  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:51.823  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:51.824  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:51.827  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.828  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.828  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:51.828  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1384, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"eb38f1ca-7c9d-4989-96b4-3485a2a06388","username":"123","isEnable":1}}', runTime=30, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1384
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.870  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.871  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"eb38f1ca-7c9d-4989-96b4-3485a2a06388","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.875  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.879  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.887  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.887  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:51.891  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"eb38f1ca-7c9d-4989-96b4-3485a2a06388","username":"123","isEnable":1}}
2020-10-10 18:19:51.891  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"eb38f1ca-7c9d-4989-96b4-3485a2a06388"}
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"eb38f1ca-7c9d-4989-96b4-3485a2a06388"}
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:51.891  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:51.892  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:51.892  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:51.893  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:51.893  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:51.893  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325191893","password":"123","sex":"0"}
2020-10-10 18:19:51.893  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325191893","password":"123","sex":"0"}
2020-10-10 18:19:51.893  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1385, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"eb38f1ca-7c9d-4989-96b4-3485a2a06388"}', requestParams='', requestData='{"username":"1602325191893","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=40, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:51 CST 2020, errorMessage='null'}，自增执行日志编号=1385
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:51.939  WARN 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:51.939  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:51.944  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:51.955  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:51.955  INFO 13100 --- [http-nio-7777-exec-3] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:52.163  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:52.168  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:52.168  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:52.168  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.169  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:52.169  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:52.169  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:52.171  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:52.175  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:52.219  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1386, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"4d0d9878-393b-4637-a003-fd3c9f329f4e","username":"123","isEnable":1}}', runTime=36, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:52 CST 2020, errorMessage='null'}，自增执行日志编号=1386
2020-10-10 18:19:52.219  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:52.219  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.219  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.220  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.225  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.225  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:52.225  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.225  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:52.225  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:52.226  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"4d0d9878-393b-4637-a003-fd3c9f329f4e","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:52.226  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:52.226  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.226  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:52.226  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.226  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.231  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.239  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:52.239  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:52.242  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"4d0d9878-393b-4637-a003-fd3c9f329f4e","username":"123","isEnable":1}}
2020-10-10 18:19:52.242  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"4d0d9878-393b-4637-a003-fd3c9f329f4e"}
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"4d0d9878-393b-4637-a003-fd3c9f329f4e"}
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:52.242  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:52.242  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:52.243  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:52.243  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:52.243  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325192243","password":"123","sex":"0"}
2020-10-10 18:19:52.243  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325192243","password":"123","sex":"0"}
2020-10-10 18:19:52.243  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1387, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"4d0d9878-393b-4637-a003-fd3c9f329f4e"}', requestParams='', requestData='{"username":"1602325192243","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=36, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:52 CST 2020, errorMessage='null'}，自增执行日志编号=1387
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.285  WARN 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:52.285  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.291  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:52.292  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.292  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.301  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:52.301  INFO 13100 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:52.346  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:52.350  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:52.350  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:52.350  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.350  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:52.350  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:52.350  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:52.352  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:52.355  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:52.395  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1388, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"c8f9a622-0a91-4f3f-a62d-7a516f664013","username":"123","isEnable":1}}', runTime=34, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:52 CST 2020, errorMessage='null'}，自增执行日志编号=1388
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.396  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.403  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"c8f9a622-0a91-4f3f-a62d-7a516f664013","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.404  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.411  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.421  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:52.421  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:52.425  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"c8f9a622-0a91-4f3f-a62d-7a516f664013","username":"123","isEnable":1}}
2020-10-10 18:19:52.425  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"c8f9a622-0a91-4f3f-a62d-7a516f664013"}
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"c8f9a622-0a91-4f3f-a62d-7a516f664013"}
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:52.426  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:52.426  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:52.428  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:52.428  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:52.428  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325192428","password":"123","sex":"0"}
2020-10-10 18:19:52.428  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325192428","password":"123","sex":"0"}
2020-10-10 18:19:52.428  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1389, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"c8f9a622-0a91-4f3f-a62d-7a516f664013"}', requestParams='', requestData='{"username":"1602325192428","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=45, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:52 CST 2020, errorMessage='null'}，自增执行日志编号=1389
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.479  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:52.480  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.480  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.480  WARN 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:52.480  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:52.488  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.489  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:52.489  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.489  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.498  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:52.498  INFO 13100 --- [http-nio-7777-exec-6] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:19:52.523  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:19:52.527  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='2001', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:19:52.527  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:19:52.527  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.527  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:19:52.527  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:19:52.527  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:19:52.529  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.533  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:19:52.534  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1390, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"43383f35-bada-442a-b05b-23f86b9d9bf2","username":"123","isEnable":1}}', runTime=32, executer='系统调度', status=0, createdTime=Sat Oct 10 18:19:52 CST 2020, errorMessage='null'}，自增执行日志编号=1390
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:52.574  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.575  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.575  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.575  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"43383f35-bada-442a-b05b-23f86b9d9bf2","username":"123","isEnable":1}}, 提取表达式=$..code
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:52.580  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.581  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=200
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=200
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=200
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=200
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.587  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.594  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:52.594  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=75---------------------------------
2020-10-10 18:19:52.597  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseBody={"code":200,"msg":"登录成功","data":{"realName":"超级管理员","userId":1,"token":"43383f35-bada-442a-b05b-23f86b9d9bf2","username":"123","isEnable":1}}
2020-10-10 18:19:52.597  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例responseHeaders={"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : jsonPath提取值并替换后的结果={"Token":"43383f35-bada-442a-b05b-23f86b9d9bf2"}
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容={"Token":"43383f35-bada-442a-b05b-23f86b9d9bf2"}
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容=
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"${timestamp()}","password":"123","sex":"0"}
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=timestamp()
2020-10-10 18:19:52.598  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法/动态SQL模式
2020-10-10 18:19:52.598  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法名称/动态SQL依赖名称=timestamp
2020-10-10 18:19:52.600  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入预置方法模式
2020-10-10 18:19:52.600  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 方法名称=timestamp，方法参数=[]
2020-10-10 18:19:52.600  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预置方法执行并替换后的结果={"username":"1602325192600","password":"123","sex":"0"}
2020-10-10 18:19:52.600  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容={"username":"1602325192600","password":"123","sex":"0"}
2020-10-10 18:19:52.600  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:19:52.664  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求成功，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1391, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"43383f35-bada-442a-b05b-23f86b9d9bf2"}', requestParams='', requestData='{"username":"1602325192600","password":"123","sex":"0"}', requestJson='null', responseCode=200, responseHeaders='{"Vary":["Origin","Access-Control-Request-Method","Access-Control-Request-Headers"],"Content-Type":["application/json"],"Transfer-Encoding":["chunked"],"Date":["Sat, 10 Oct 2020 10:19:51 GMT"],"Keep-Alive":["timeout=60"],"Connection":["keep-alive"]}', responseBody='{"code":200,"msg":"注册成功","data":{}}', runTime=59, executer='超级管理员', status=0, createdTime=Sat Oct 10 18:19:52 CST 2020, errorMessage='null'}，自增执行日志编号=1391
2020-10-10 18:19:52.664  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 4.遍历用例的断言，依次执行... ... ...
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=2001
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=2001
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=2001
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=200, 类型=code, 响应Body=200, 提取表达式=
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=2001
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=200
2020-10-10 18:19:52.665  WARN 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言失败
2020-10-10 18:19:52.665  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 5.清洗断言预期结果... ... ...
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗内容为=[200]
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=[200]
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗${}模式，清洗后的结果=[200]
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言实际结果=[200], 类型=json, 响应Body={"code":200,"msg":"注册成功","data":{}}, 提取表达式=$..code
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 预期结果=[200]
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 操作符=0
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 实际结果=[200]
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 断言通过
2020-10-10 18:19:52.674  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 保存断言日志
2020-10-10 18:19:52.684  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : 根据所有断言的状态，再次修改执行日志的状态
2020-10-10 18:19:52.684  INFO 13100 --- [http-nio-7777-exec-10] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------测试用例执行完毕：caseId=70---------------------------------
2020-10-10 18:21:57.486  INFO 9992 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 9992 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:21:57.490  INFO 9992 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:21:58.238  INFO 9992 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:21:58.240  INFO 9992 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:21:58.308  INFO 9992 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55ms. Found 0 Redis repository interfaces.
2020-10-10 18:21:58.602  INFO 9992 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$f15188d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:21:58.910  INFO 9992 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:21:58.920  INFO 9992 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:21:58.920  INFO 9992 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:21:59.008  INFO 9992 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:21:59.008  INFO 9992 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1474 ms
2020-10-10 18:21:59.607  INFO 9992 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:21:59.733  INFO 9992 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:22:00.880  INFO 9992 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:22:01.296  INFO 9992 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:22:01.980  INFO 9992 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:22:01.986  INFO 9992 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 4.974 seconds (JVM running for 5.687)
2020-10-10 18:22:03.336  INFO 9992 --- [http-nio-7777-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:22:03.336  INFO 9992 --- [http-nio-7777-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:22:03.343  INFO 9992 --- [http-nio-7777-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2020-10-10 18:22:03.490  INFO 9992 --- [http-nio-7777-exec-6] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:22:03.492  INFO 9992 --- [http-nio-7777-exec-6] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:27:27.302  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:27:27.310  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:27:27.310  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:27:27.310  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:27.310  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:27:27.311  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:27:27.352  INFO 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:27:28.451  WARN 9992 --- [http-nio-7777-exec-1] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1392, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:27:28 CST 2020, errorMessage='org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:7777/user/login": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:583)
	at org.alex.platform.util.RestUtil.post(RestUtil.java:257)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:515)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:513)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.http.HttpClient.privilegedOpenServer(HttpClient.java:512)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:553)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1199)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 65 more
'}，自增执行日志编号=1392
2020-10-10 18:27:30.940  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:27:30.947  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:27:30.947  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:27:30.947  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:27:30.948  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:27:30.949  INFO 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:27:31.973  WARN 9992 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1393, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:27:31 CST 2020, errorMessage='org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:7777/user/login": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:583)
	at org.alex.platform.util.RestUtil.post(RestUtil.java:257)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:515)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:513)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.http.HttpClient.privilegedOpenServer(HttpClient.java:512)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:553)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1199)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 65 more
'}，自增执行日志编号=1393
2020-10-10 18:27:32.661  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:27:32.669  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:27:32.669  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:27:32.669  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:32.669  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:27:32.669  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:27:32.670  INFO 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:27:33.703  WARN 9992 --- [http-nio-7777-exec-8] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1394, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:27:33 CST 2020, errorMessage='org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:7777/user/login": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:583)
	at org.alex.platform.util.RestUtil.post(RestUtil.java:257)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:515)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:513)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.http.HttpClient.privilegedOpenServer(HttpClient.java:512)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:553)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1199)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 65 more
'}，自增执行日志编号=1394
2020-10-10 18:28:43.978  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=70---------------------------------
2020-10-10 18:28:43.985  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=70，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=70, url='user/register', method=1, desc='用户注册', level=0, doc='null', headers='{"Token":"${Token}"}', params='', data='{"username":"${timestamp()}","password":"123","sex":"0"}', json='null', creater='1', createdTime=Sat Sep 26 21:19:49 CST 2020, asserts=[AssertVO{assertId=56, assertName='状态码=200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=57, assertName='code=200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}]}
2020-10-10 18:28:43.985  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=70
2020-10-10 18:28:43.985  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:28:43.985  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"Token":"${Token}"}
2020-10-10 18:28:43.985  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : relyName=Token
2020-10-10 18:28:43.985  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------进入普通依赖数据模式
2020-10-10 18:28:43.988  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:28:43.993  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:28:43.993  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:28:43.993  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:28:43.994  INFO 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:28:45.040  WARN 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1395, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='系统调度', status=2, createdTime=Sat Oct 10 18:28:45 CST 2020, errorMessage='org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:7777/user/login": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:748)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:674)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:583)
	at org.alex.platform.util.RestUtil.post(RestUtil.java:257)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.parseRelyData(InterfaceCaseServiceImpl.java:801)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:515)
	at sun.net.www.http.HttpClient$1.run(HttpClient.java:513)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.net.www.http.HttpClient.privilegedOpenServer(HttpClient.java:512)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:553)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1199)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.alex.platform.util.RestUtil.lambda$getInstance$0(RestUtil.java:83)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:739)
	... 74 more
'}，自增执行日志编号=1395
2020-10-10 18:28:45.048  WARN 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 前置用例执行未通过
2020-10-10 18:28:45.070  WARN 9992 --- [http-nio-7777-exec-2] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1396, caseId=70, caseUrl='http://localhost:7777/user/register', caseDesc='用户注册', requestHeaders='{"Token":"${Token}"}', requestParams='', requestData='{"username":"${timestamp()}","password":"123","sex":"0"}', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:28:45 CST 2020, errorMessage='org.alex.platform.exception.BusinessException: 前置用例执行未通过
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.parseRelyData(InterfaceCaseServiceImpl.java:805)
	at org.alex.platform.service.impl.InterfaceCaseServiceImpl.executeInterfaceCase(InterfaceCaseServiceImpl.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy83.executeInterfaceCase(Unknown Source)
	at org.alex.platform.controller.InterfaceCaseController.executeInterfaceCase(InterfaceCaseController.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
'}，自增执行日志编号=1396
2020-10-10 18:29:04.248  INFO 9992 --- [http-nio-7777-exec-3] o.apache.tomcat.util.http.parser.Cookie  : A cookie header was received [1593331780,1593586548,1593595767] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-10 18:29:04.257 ERROR 9992 --- [http-nio-7777-exec-3] o.a.p.controller.ExceptionController     : org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:213)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:422)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 18:29:04.314 ERROR 9992 --- [http-nio-7777-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.alex.platform.exception.LoginException: 登录已经过期，请重新登录] with root cause

org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83) ~[druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]

2020-10-10 18:29:04.323  WARN 9992 --- [http-nio-7777-exec-1] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 18:29:35.494 ERROR 9992 --- [http-nio-7777-exec-5] o.a.p.controller.ExceptionController     : org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:213)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:422)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:110)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:395)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 18:29:35.536 ERROR 9992 --- [http-nio-7777-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.alex.platform.exception.LoginException: 登录已经过期，请重新登录] with root cause

org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83) ~[druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_161]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_161]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.33.jar:9.0.33]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_161]

2020-10-10 18:29:35.542  WARN 9992 --- [http-nio-7777-exec-8] o.a.p.controller.ExceptionController     : org.alex.platform.exception.LoginException: 登录已经过期，请重新登录
	at org.alex.platform.config.LoginConfig$1.preHandle(LoginConfig.java:32)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-10-10 18:36:48.058  INFO 9720 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 9720 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:36:48.062  INFO 9720 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:36:49.350  INFO 9720 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:36:49.353  INFO 9720 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:36:49.483  INFO 9720 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 112ms. Found 0 Redis repository interfaces.
2020-10-10 18:36:49.998  INFO 9720 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$88757bf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:36:50.299  INFO 9720 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:36:50.309  INFO 9720 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:36:50.310  INFO 9720 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:36:50.472  INFO 9720 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:36:50.472  INFO 9720 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2310 ms
2020-10-10 18:36:51.695  INFO 9720 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:36:51.847  INFO 9720 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:36:54.177  INFO 9720 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:36:54.540  INFO 9720 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:36:55.265  INFO 9720 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:36:55.269  INFO 9720 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 7.783 seconds (JVM running for 8.768)
2020-10-10 18:36:56.904  INFO 9720 --- [http-nio-7777-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:36:56.905  INFO 9720 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:36:56.912  INFO 9720 --- [http-nio-7777-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2020-10-10 18:36:57.083  INFO 9720 --- [http-nio-7777-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:36:57.088  INFO 9720 --- [http-nio-7777-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:37:07.035  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:37:07.057  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:37:07.057  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:37:07.057  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:37:07.058  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:37:07.268  INFO 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:37:08.364  WARN 9720 --- [http-nio-7777-exec-9] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1397, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:37:08 CST 2020, errorMessage='代理服务器未开启'}，自增执行日志编号=1397
2020-10-10 18:38:37.068  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:38:37.075  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:38:37.075  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:38:37.075  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:38:37.075  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:38:37.076  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:38:37.076  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:38:37.076  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:38:37.076  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:38:37.076  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:38:37.076  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:38:37.077  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:38:37.077  INFO 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:38:38.108  WARN 9720 --- [http-nio-7777-exec-4] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1398, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:38:38 CST 2020, errorMessage='代理服务器未开启'}，自增执行日志编号=1398
2020-10-10 18:39:01.073  INFO 17184 --- [main] org.alex.platform.PlatformApplication    : Starting PlatformApplication on DESKTOP-KGA3ETP with PID 17184 (C:\Users\10147\IdeaProjects\platform\target\classes started by beix in C:\Users\10147\IdeaProjects\platform)
2020-10-10 18:39:01.076  INFO 17184 --- [main] org.alex.platform.PlatformApplication    : No active profile set, falling back to default profiles: default
2020-10-10 18:39:02.178  INFO 17184 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-10 18:39:02.180  INFO 17184 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-10 18:39:02.369  INFO 17184 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 175ms. Found 0 Redis repository interfaces.
2020-10-10 18:39:03.214  INFO 17184 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [org.alex.platform.config.RedisConfig$$EnhancerBySpringCGLIB$$40c2d87f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-10 18:39:04.237  INFO 17184 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 7777 (http)
2020-10-10 18:39:04.247  INFO 17184 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-10-10 18:39:04.248  INFO 17184 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-10-10 18:39:04.341  INFO 17184 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-10-10 18:39:04.342  INFO 17184 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3210 ms
2020-10-10 18:39:06.303  INFO 17184 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2020-10-10 18:39:06.511  INFO 17184 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-10-10 18:39:07.188  INFO 17184 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-10 18:39:07.512  INFO 17184 --- [main] org.alex.platform.config.TaskConfig      : ---------------------------------------定时任务开始调度---------------------------------------
2020-10-10 18:39:08.109  INFO 17184 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 7777 (http) with context path ''
2020-10-10 18:39:08.112  INFO 17184 --- [main] org.alex.platform.PlatformApplication    : Started PlatformApplication in 7.705 seconds (JVM running for 8.912)
2020-10-10 18:39:08.485  INFO 17184 --- [http-nio-7777-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-10 18:39:08.486  INFO 17184 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-10-10 18:39:08.491  INFO 17184 --- [http-nio-7777-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2020-10-10 18:39:08.596  INFO 17184 --- [http-nio-7777-exec-2] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2020-10-10 18:39:08.597  INFO 17184 --- [http-nio-7777-exec-2] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2020-10-10 18:39:14.425  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : ---------------------------------开始执行测试用例：caseId=75---------------------------------
2020-10-10 18:39:14.438  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 1.获取case详情，caseId=75，用例详情=InterfaceCaseInfoVO{projectId=4, moduleId=6, caseId=75, url='/user/login', method=1, desc='用户登录', level=0, doc='null', headers='', params='{"username":"123","password":"123"}', data='', json='null', creater='1', createdTime=Tue Oct 06 20:11:18 CST 2020, asserts=[AssertVO{assertId=67, assertName='http code == 200', type=3, expression='', operator=0, exceptedResult='200', order=0}, AssertVO{assertId=68, assertName='sub code == 200', type=0, expression='$..code', operator=0, exceptedResult='[200]', order=1}, AssertVO{assertId=69, assertName='code', type=3, expression='', operator=0, exceptedResult='200', order=2}]}
2020-10-10 18:39:14.438  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 2.执行case，caseId=75
2020-10-10 18:39:14.438  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗headers，清洗后的内容=
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文={"username":"123","password":"123"}
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗params，清洗后的内容={"username":"123","password":"123"}
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------开始字符串解析流程--------------------------------------
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : --------------------------------------待解析字符串原文=
2020-10-10 18:39:14.439  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 清洗data，清洗后的内容=
2020-10-10 18:39:14.618  INFO 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 开始执行POST方法
2020-10-10 18:39:15.676 ERROR 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 代理服务器未开启
2020-10-10 18:39:15.717  WARN 17184 --- [http-nio-7777-exec-5] o.a.p.s.impl.InterfaceCaseServiceImpl    : 3.请求错误，仅保存执行，保存执行日志，日志内容=InterfaceCaseExecuteLogDO{id=1399, caseId=75, caseUrl='http://localhost:7777//user/login', caseDesc='用户登录', requestHeaders='', requestParams='{"username":"123","password":"123"}', requestData='', requestJson='null', responseCode=null, responseHeaders='null', responseBody='null', runTime=0, executer='超级管理员', status=2, createdTime=Sat Oct 10 18:39:15 CST 2020, errorMessage='代理服务器未开启，I/O error on POST request for "http://localhost:7777/user/login": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect'}，自增执行日志编号=1399
2020-10-10 19:05:32.730 ERROR 17184 --- [http-nio-7777-exec-7] o.a.p.controller.ExceptionController     : org.alex.platform.exception.BusinessException: 超级管理员禁止删除
	at org.alex.platform.controller.UserController.removeUser(UserController.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

