<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.alex.platform.mapper.MockHitPolicyMapper">
    <insert id="insertMockHitPolicy" parameterType="org.alex.platform.pojo.MockHitPolicyDO">
        insert into `t_mock_hit_policy`
        (`api_id`, `match_scope`, `match_type`, `name`, `value`, `status`)
        values
        (#{apiId},#{matchScope},#{matchType},#{name},#{value},#{status})
    </insert>
    <update id="updateMockHitPolicy" parameterType="org.alex.platform.pojo.MockHitPolicyDO">
        update `t_mock_hit_policy`
        <set>
            <if test="apiId!=null">`api_id`=#{apiId},</if>
            <if test="matchScope!=null">`match_scope`=#{matchScope},</if>
            <if test="matchType!=null">`match_type`=#{matchType},</if>
            <if test="name!=null">`name`=#{name},</if>
            <if test="value!=null">`value`=#{value},</if>
            <if test="status!=null">`status`=#{status},</if>
        </set>
        where `id`=#{id}
    </update>
    <select id="selectMockHitPolicy" parameterType="org.alex.platform.pojo.MockHitPolicyDTO" resultType="org.alex.platform.pojo.MockHitPolicyVO">
        select `id`, `api_id`, `match_scope`, `match_type`, `name`, `value`, `status`
        from `t_mock_hit_policy`
        <where>
            <if test="id!=null">and `id`=#{id}</if>
            <if test="apiId!=null">and `api_id`=#{apiId}</if>
            <if test="matchScope!=null">and `match_scope`=#{matchScope}</if>
            <if test="matchType!=null">and `match_type`=#{matchType}</if>
            <if test="name!=null">and `name`=#{name}</if>
            <if test="value!=null">and `value`=#{value}</if>
            <if test="status!=null">and `status`=#{status}</if>
        </where>
    </select>
    <select id="selectMockHitPolicyById" parameterType="Integer" resultType="org.alex.platform.pojo.MockHitPolicyVO">
        select `id`, `api_id`, `match_scope`, `match_type`, `name`, `value`, `status`
        from `t_mock_hit_policy`
        where `id`=#{id}
    </select>
    <delete id="deleteMockHitPolicyById" parameterType="Integer">
        delete from `t_mock_hit_policy`
        where `id`=#{serverId}
    </delete>
    <select id="selectMockHitPolicyByApiId" parameterType="Integer" resultType="org.alex.platform.pojo.MockHitPolicyVO">
        select `id`, `api_id`, `match_scope`, `match_type`, `name`, `value`, `status`
        from `t_mock_hit_policy`
        where `api_id`=#{apiId}
    </select>
    <select id="selectIdByApiId" parameterType="Integer" resultType="Integer">
        select `id`
        from `t_mock_hit_policy`
        where `api_id`=#{apiId}
    </select>
    <delete id="deleteMockHitPolicyByApiId" parameterType="Integer">
        delete from `t_mock_sever`
        where `api_id`=#{apiId}
    </delete>
</mapper>